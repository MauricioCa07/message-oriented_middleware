// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mom.proto
// Protobuf C++ Version: 5.29.0

#include "mom.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mom {

inline constexpr topic_subscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topic_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        topic_owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscriber_queue_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscriber_queue_owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        durable_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topic_subscription::topic_subscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topic_subscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_subscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_subscriptionDefaultTypeInternal() {}
  union {
    topic_subscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_subscriptionDefaultTypeInternal _topic_subscription_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR topic_message_HeadersEntry_DoNotUse::topic_message_HeadersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : topic_message_HeadersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : topic_message_HeadersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct topic_message_HeadersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_message_HeadersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_message_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    topic_message_HeadersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_message_HeadersEntry_DoNotUseDefaultTypeInternal _topic_message_HeadersEntry_DoNotUse_default_instance_;

inline constexpr topic_identifier::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topic_identifier::topic_identifier(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topic_identifierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_identifierDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_identifierDefaultTypeInternal() {}
  union {
    topic_identifier _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_identifierDefaultTypeInternal _topic_identifier_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR topic_config_PropertiesEntry_DoNotUse::topic_config_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : topic_config_PropertiesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : topic_config_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct topic_config_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_config_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_config_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    topic_config_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_config_PropertiesEntry_DoNotUseDefaultTypeInternal _topic_config_PropertiesEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR topic_PropertiesEntry_DoNotUse::topic_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : topic_PropertiesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : topic_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct topic_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    topic_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_PropertiesEntry_DoNotUseDefaultTypeInternal _topic_PropertiesEntry_DoNotUse_default_instance_;

inline constexpr status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR status::status(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct statusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR statusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~statusDefaultTypeInternal() {}
  union {
    status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 statusDefaultTypeInternal _status_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR queue_message_HeadersEntry_DoNotUse::queue_message_HeadersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : queue_message_HeadersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : queue_message_HeadersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct queue_message_HeadersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_message_HeadersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_message_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    queue_message_HeadersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_message_HeadersEntry_DoNotUseDefaultTypeInternal _queue_message_HeadersEntry_DoNotUse_default_instance_;

inline constexpr queue_identifier::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR queue_identifier::queue_identifier(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queue_identifierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_identifierDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_identifierDefaultTypeInternal() {}
  union {
    queue_identifier _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_identifierDefaultTypeInternal _queue_identifier_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR queue_config_PropertiesEntry_DoNotUse::queue_config_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : queue_config_PropertiesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : queue_config_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct queue_config_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_config_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_config_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    queue_config_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_config_PropertiesEntry_DoNotUseDefaultTypeInternal _queue_config_PropertiesEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR queue_PropertiesEntry_DoNotUse::queue_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : queue_PropertiesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : queue_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct queue_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    queue_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_PropertiesEntry_DoNotUseDefaultTypeInternal _queue_PropertiesEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR node_info_CapabilitiesEntry_DoNotUse::node_info_CapabilitiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : node_info_CapabilitiesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : node_info_CapabilitiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct node_info_CapabilitiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR node_info_CapabilitiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~node_info_CapabilitiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    node_info_CapabilitiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 node_info_CapabilitiesEntry_DoNotUseDefaultTypeInternal _node_info_CapabilitiesEntry_DoNotUse_default_instance_;

inline constexpr message_status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR message_status::message_status(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct message_statusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR message_statusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~message_statusDefaultTypeInternal() {}
  union {
    message_status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 message_statusDefaultTypeInternal _message_status_default_instance_;

inline constexpr message_identifier::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_topic_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR message_identifier::message_identifier(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct message_identifierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR message_identifierDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~message_identifierDefaultTypeInternal() {}
  union {
    message_identifier _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 message_identifierDefaultTypeInternal _message_identifier_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR message_HeadersEntry_DoNotUse::message_HeadersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : message_HeadersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : message_HeadersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct message_HeadersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR message_HeadersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~message_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    message_HeadersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 message_HeadersEntry_DoNotUseDefaultTypeInternal _message_HeadersEntry_DoNotUse_default_instance_;

inline constexpr NodeID::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeID::NodeID(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeIDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeIDDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeIDDefaultTypeInternal() {}
  union {
    NodeID _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeIDDefaultTypeInternal _NodeID_default_instance_;

inline constexpr NodeAssignment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : replica_nodes_{},
        primary_node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        partition_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeAssignment::NodeAssignment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeAssignmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeAssignmentDefaultTypeInternal() {}
  union {
    NodeAssignment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeAssignmentDefaultTypeInternal _NodeAssignment_default_instance_;

inline constexpr topic_message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : headers_{},
        topic_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        persistent_{false},
        priority_{0},
        expiration_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topic_message::topic_message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topic_messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_messageDefaultTypeInternal() {}
  union {
    topic_message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_messageDefaultTypeInternal _topic_message_default_instance_;

inline constexpr topic_config::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : properties_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topic_config::topic_config(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topic_configDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_configDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_configDefaultTypeInternal() {}
  union {
    topic_config _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_configDefaultTypeInternal _topic_config_default_instance_;

inline constexpr topic::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : subscribers_{},
        properties_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_timestamp_{::int64_t{0}},
        message_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topic::topic(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topicDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topicDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topicDefaultTypeInternal() {}
  union {
    topic _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topicDefaultTypeInternal _topic_default_instance_;

inline constexpr queue_message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : headers_{},
        queue_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        persistent_{false},
        priority_{0},
        expiration_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR queue_message::queue_message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queue_messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_messageDefaultTypeInternal() {}
  union {
    queue_message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_messageDefaultTypeInternal _queue_message_default_instance_;

inline constexpr queue_config::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : properties_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR queue_config::queue_config(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queue_configDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_configDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_configDefaultTypeInternal() {}
  union {
    queue_config _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_configDefaultTypeInternal _queue_config_default_instance_;

inline constexpr queue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_assignment_{nullptr},
        creation_timestamp_{::int64_t{0}},
        message_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR queue::queue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queueDefaultTypeInternal() {}
  union {
    queue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queueDefaultTypeInternal _queue_default_instance_;

inline constexpr node_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : capabilities_{},
        node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_timestamp_{::int64_t{0}},
        port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR node_info::node_info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct node_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR node_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~node_infoDefaultTypeInternal() {}
  union {
    node_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 node_infoDefaultTypeInternal _node_info_default_instance_;

inline constexpr message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : headers_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        persistent_{false},
        priority_{0},
        expiration_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR message::message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~messageDefaultTypeInternal() {}
  union {
    message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 messageDefaultTypeInternal _message_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR cluster_state_TopicAssignmentsEntry_DoNotUse::cluster_state_TopicAssignmentsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : cluster_state_TopicAssignmentsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : cluster_state_TopicAssignmentsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct cluster_state_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_state_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_state_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    cluster_state_TopicAssignmentsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_state_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal _cluster_state_TopicAssignmentsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR cluster_state_QueueAssignmentsEntry_DoNotUse::cluster_state_QueueAssignmentsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : cluster_state_QueueAssignmentsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : cluster_state_QueueAssignmentsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct cluster_state_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_state_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_state_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    cluster_state_QueueAssignmentsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_state_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal _cluster_state_QueueAssignmentsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR cluster_info_TopicAssignmentsEntry_DoNotUse::cluster_info_TopicAssignmentsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : cluster_info_TopicAssignmentsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : cluster_info_TopicAssignmentsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct cluster_info_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_info_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_info_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    cluster_info_TopicAssignmentsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_info_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal _cluster_info_TopicAssignmentsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR cluster_info_QueueAssignmentsEntry_DoNotUse::cluster_info_QueueAssignmentsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : cluster_info_QueueAssignmentsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : cluster_info_QueueAssignmentsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct cluster_info_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_info_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_info_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    cluster_info_QueueAssignmentsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_info_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal _cluster_info_QueueAssignmentsEntry_DoNotUse_default_instance_;

inline constexpr topics_response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topics_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topics_response::topics_response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topics_responseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topics_responseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topics_responseDefaultTypeInternal() {}
  union {
    topics_response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topics_responseDefaultTypeInternal _topics_response_default_instance_;

inline constexpr queues_response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : queues_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR queues_response::queues_response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queues_responseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queues_responseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queues_responseDefaultTypeInternal() {}
  union {
    queues_response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queues_responseDefaultTypeInternal _queues_response_default_instance_;

inline constexpr cluster_state::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nodes_{},
        topic_assignments_{},
        queue_assignments_{},
        leader_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR cluster_state::cluster_state(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct cluster_stateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_stateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_stateDefaultTypeInternal() {}
  union {
    cluster_state _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_stateDefaultTypeInternal _cluster_state_default_instance_;

inline constexpr cluster_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nodes_{},
        topic_assignments_{},
        queue_assignments_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        leader_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR cluster_info::cluster_info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct cluster_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_infoDefaultTypeInternal() {}
  union {
    cluster_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_infoDefaultTypeInternal _cluster_info_default_instance_;

inline constexpr sync_response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        queues_{},
        topics_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cluster_state_{nullptr},
        sync_timestamp_{::int64_t{0}},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR sync_response::sync_response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct sync_responseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR sync_responseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~sync_responseDefaultTypeInternal() {}
  union {
    sync_response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 sync_responseDefaultTypeInternal _sync_response_default_instance_;
}  // namespace mom
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_mom_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mom_2eproto = nullptr;
const ::uint32_t
    TableStruct_mom_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::status, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::status, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom::status, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::mom::message_HeadersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::message_HeadersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::message_HeadersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::message_HeadersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::message, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::mom::message, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::mom::message, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::mom::message, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::mom::message, _impl_.headers_),
        PROTOBUF_FIELD_OFFSET(::mom::message, _impl_.persistent_),
        PROTOBUF_FIELD_OFFSET(::mom::message, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::mom::message, _impl_.expiration_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::message_identifier, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::message_identifier, _impl_.message_id_),
        PROTOBUF_FIELD_OFFSET(::mom::message_identifier, _impl_.destination_name_),
        PROTOBUF_FIELD_OFFSET(::mom::message_identifier, _impl_.is_topic_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::message_status, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::message_status, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom::message_status, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::mom::message_status, _impl_.message_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::queue_identifier, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue_identifier, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_identifier, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_config_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_config_PropertiesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue_config_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_config_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::queue_config, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue_config, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_config, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_config, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_PropertiesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::mom::queue, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::queue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mom::queue, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::mom::queue, _impl_.creation_timestamp_),
        PROTOBUF_FIELD_OFFSET(::mom::queue, _impl_.message_count_),
        PROTOBUF_FIELD_OFFSET(::mom::queue, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::mom::queue, _impl_.node_assignment_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::mom::queue_message_HeadersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message_HeadersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue_message_HeadersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message_HeadersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.queue_name_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.headers_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.persistent_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.expiration_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::queues_response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queues_response, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom::queues_response, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::mom::queues_response, _impl_.queues_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::topic_identifier, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_identifier, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_identifier, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_config_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_config_PropertiesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_config_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_config_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::topic_config, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_config, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_config, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_config, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_PropertiesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::topic, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mom::topic, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::mom::topic, _impl_.creation_timestamp_),
        PROTOBUF_FIELD_OFFSET(::mom::topic, _impl_.subscribers_),
        PROTOBUF_FIELD_OFFSET(::mom::topic, _impl_.message_count_),
        PROTOBUF_FIELD_OFFSET(::mom::topic, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message_HeadersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message_HeadersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_message_HeadersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message_HeadersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.topic_name_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.headers_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.persistent_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.expiration_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::topic_subscription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_subscription, _impl_.topic_name_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_subscription, _impl_.topic_owner_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_subscription, _impl_.subscriber_queue_name_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_subscription, _impl_.subscriber_queue_owner_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_subscription, _impl_.durable_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::topics_response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topics_response, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom::topics_response, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::mom::topics_response, _impl_.topics_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::NodeID, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::NodeID, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::mom::node_info_CapabilitiesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::node_info_CapabilitiesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::node_info_CapabilitiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::node_info_CapabilitiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::node_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::node_info, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::mom::node_info, _impl_.host_),
        PROTOBUF_FIELD_OFFSET(::mom::node_info, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::mom::node_info, _impl_.capabilities_),
        PROTOBUF_FIELD_OFFSET(::mom::node_info, _impl_.start_timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::NodeAssignment, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::NodeAssignment, _impl_.primary_node_),
        PROTOBUF_FIELD_OFFSET(::mom::NodeAssignment, _impl_.replica_nodes_),
        PROTOBUF_FIELD_OFFSET(::mom::NodeAssignment, _impl_.partition_count_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_TopicAssignmentsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_QueueAssignmentsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _impl_.leader_id_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _impl_.nodes_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _impl_.topic_assignments_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _impl_.queue_assignments_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _impl_.state_timestamp_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_TopicAssignmentsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_QueueAssignmentsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.leader_id_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.nodes_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.topic_assignments_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.queue_assignments_),
        PROTOBUF_FIELD_OFFSET(::mom::sync_response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::sync_response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::sync_response, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom::sync_response, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::mom::sync_response, _impl_.queues_),
        PROTOBUF_FIELD_OFFSET(::mom::sync_response, _impl_.topics_),
        PROTOBUF_FIELD_OFFSET(::mom::sync_response, _impl_.cluster_state_),
        PROTOBUF_FIELD_OFFSET(::mom::sync_response, _impl_.sync_timestamp_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mom::status)},
        {10, 20, -1, sizeof(::mom::message_HeadersEntry_DoNotUse)},
        {22, -1, -1, sizeof(::mom::message)},
        {38, -1, -1, sizeof(::mom::message_identifier)},
        {49, -1, -1, sizeof(::mom::message_status)},
        {60, -1, -1, sizeof(::mom::queue_identifier)},
        {70, 80, -1, sizeof(::mom::queue_config_PropertiesEntry_DoNotUse)},
        {82, -1, -1, sizeof(::mom::queue_config)},
        {93, 103, -1, sizeof(::mom::queue_PropertiesEntry_DoNotUse)},
        {105, 119, -1, sizeof(::mom::queue)},
        {125, 135, -1, sizeof(::mom::queue_message_HeadersEntry_DoNotUse)},
        {137, -1, -1, sizeof(::mom::queue_message)},
        {152, -1, -1, sizeof(::mom::queues_response)},
        {163, -1, -1, sizeof(::mom::topic_identifier)},
        {173, 183, -1, sizeof(::mom::topic_config_PropertiesEntry_DoNotUse)},
        {185, -1, -1, sizeof(::mom::topic_config)},
        {196, 206, -1, sizeof(::mom::topic_PropertiesEntry_DoNotUse)},
        {208, -1, -1, sizeof(::mom::topic)},
        {222, 232, -1, sizeof(::mom::topic_message_HeadersEntry_DoNotUse)},
        {234, -1, -1, sizeof(::mom::topic_message)},
        {249, -1, -1, sizeof(::mom::topic_subscription)},
        {262, -1, -1, sizeof(::mom::topics_response)},
        {273, -1, -1, sizeof(::mom::NodeID)},
        {282, 292, -1, sizeof(::mom::node_info_CapabilitiesEntry_DoNotUse)},
        {294, -1, -1, sizeof(::mom::node_info)},
        {307, -1, -1, sizeof(::mom::NodeAssignment)},
        {318, 328, -1, sizeof(::mom::cluster_state_TopicAssignmentsEntry_DoNotUse)},
        {330, 340, -1, sizeof(::mom::cluster_state_QueueAssignmentsEntry_DoNotUse)},
        {342, -1, -1, sizeof(::mom::cluster_state)},
        {355, 365, -1, sizeof(::mom::cluster_info_TopicAssignmentsEntry_DoNotUse)},
        {367, 377, -1, sizeof(::mom::cluster_info_QueueAssignmentsEntry_DoNotUse)},
        {379, -1, -1, sizeof(::mom::cluster_info)},
        {393, 407, -1, sizeof(::mom::sync_response)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::mom::_status_default_instance_._instance,
    &::mom::_message_HeadersEntry_DoNotUse_default_instance_._instance,
    &::mom::_message_default_instance_._instance,
    &::mom::_message_identifier_default_instance_._instance,
    &::mom::_message_status_default_instance_._instance,
    &::mom::_queue_identifier_default_instance_._instance,
    &::mom::_queue_config_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::mom::_queue_config_default_instance_._instance,
    &::mom::_queue_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::mom::_queue_default_instance_._instance,
    &::mom::_queue_message_HeadersEntry_DoNotUse_default_instance_._instance,
    &::mom::_queue_message_default_instance_._instance,
    &::mom::_queues_response_default_instance_._instance,
    &::mom::_topic_identifier_default_instance_._instance,
    &::mom::_topic_config_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::mom::_topic_config_default_instance_._instance,
    &::mom::_topic_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::mom::_topic_default_instance_._instance,
    &::mom::_topic_message_HeadersEntry_DoNotUse_default_instance_._instance,
    &::mom::_topic_message_default_instance_._instance,
    &::mom::_topic_subscription_default_instance_._instance,
    &::mom::_topics_response_default_instance_._instance,
    &::mom::_NodeID_default_instance_._instance,
    &::mom::_node_info_CapabilitiesEntry_DoNotUse_default_instance_._instance,
    &::mom::_node_info_default_instance_._instance,
    &::mom::_NodeAssignment_default_instance_._instance,
    &::mom::_cluster_state_TopicAssignmentsEntry_DoNotUse_default_instance_._instance,
    &::mom::_cluster_state_QueueAssignmentsEntry_DoNotUse_default_instance_._instance,
    &::mom::_cluster_state_default_instance_._instance,
    &::mom::_cluster_info_TopicAssignmentsEntry_DoNotUse_default_instance_._instance,
    &::mom::_cluster_info_QueueAssignmentsEntry_DoNotUse_default_instance_._instance,
    &::mom::_cluster_info_default_instance_._instance,
    &::mom::_sync_response_default_instance_._instance,
};
const char descriptor_table_protodef_mom_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\tmom.proto\022\003mom\"*\n\006status\022\017\n\007success\030\001 "
    "\001(\010\022\017\n\007message\030\002 \001(\t\"\337\001\n\007message\022\n\n\002id\030\001"
    " \001(\t\022\017\n\007content\030\002 \001(\t\022\016\n\006sender\030\003 \001(\t\022\021\n"
    "\ttimestamp\030\004 \001(\003\022*\n\007headers\030\005 \003(\0132\031.mom."
    "message.HeadersEntry\022\022\n\npersistent\030\006 \001(\010"
    "\022\020\n\010priority\030\007 \001(\005\022\022\n\nexpiration\030\010 \001(\003\032."
    "\n\014HeadersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
    "(\t:\0028\001\"T\n\022message_identifier\022\022\n\nmessage_"
    "id\030\001 \001(\t\022\030\n\020destination_name\030\002 \001(\t\022\020\n\010is"
    "_topic\030\003 \001(\010\"F\n\016message_status\022\017\n\007succes"
    "s\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022\022\n\nmessage_id\030\003"
    " \001(\t\"/\n\020queue_identifier\022\014\n\004name\030\001 \001(\t\022\r"
    "\n\005owner\030\002 \001(\t\"\225\001\n\014queue_config\022\014\n\004name\030\001"
    " \001(\t\022\r\n\005owner\030\002 \001(\t\0225\n\nproperties\030\003 \003(\0132"
    "!.mom.queue_config.PropertiesEntry\0321\n\017Pr"
    "opertiesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
    "\t:\0028\001\"\350\001\n\005queue\022\014\n\004name\030\001 \001(\t\022\r\n\005owner\030\002"
    " \001(\t\022\032\n\022creation_timestamp\030\003 \001(\003\022\025\n\rmess"
    "age_count\030\004 \001(\005\022.\n\nproperties\030\005 \003(\0132\032.mo"
    "m.queue.PropertiesEntry\022,\n\017node_assignme"
    "nt\030\006 \001(\0132\023.mom.NodeAssignment\0321\n\017Propert"
    "iesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
    "\"\340\001\n\rqueue_message\022\022\n\nqueue_name\030\001 \001(\t\022\017"
    "\n\007content\030\002 \001(\t\022\016\n\006sender\030\003 \001(\t\0220\n\007heade"
    "rs\030\004 \003(\0132\037.mom.queue_message.HeadersEntr"
    "y\022\022\n\npersistent\030\005 \001(\010\022\020\n\010priority\030\006 \001(\005\022"
    "\022\n\nexpiration\030\007 \001(\003\032.\n\014HeadersEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"O\n\017queues_re"
    "sponse\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t"
    "\022\032\n\006queues\030\003 \003(\0132\n.mom.queue\"/\n\020topic_id"
    "entifier\022\014\n\004name\030\001 \001(\t\022\r\n\005owner\030\002 \001(\t\"\225\001"
    "\n\014topic_config\022\014\n\004name\030\001 \001(\t\022\r\n\005owner\030\002 "
    "\001(\t\0225\n\nproperties\030\003 \003(\0132!.mom.topic_conf"
    "ig.PropertiesEntry\0321\n\017PropertiesEntry\022\013\n"
    "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\317\001\n\005topic\022"
    "\014\n\004name\030\001 \001(\t\022\r\n\005owner\030\002 \001(\t\022\032\n\022creation"
    "_timestamp\030\003 \001(\003\022\023\n\013subscribers\030\004 \003(\t\022\025\n"
    "\rmessage_count\030\005 \001(\005\022.\n\nproperties\030\006 \003(\013"
    "2\032.mom.topic.PropertiesEntry\0321\n\017Properti"
    "esEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
    "\340\001\n\rtopic_message\022\022\n\ntopic_name\030\001 \001(\t\022\017\n"
    "\007content\030\002 \001(\t\022\016\n\006sender\030\003 \001(\t\0220\n\007header"
    "s\030\004 \003(\0132\037.mom.topic_message.HeadersEntry"
    "\022\022\n\npersistent\030\005 \001(\010\022\020\n\010priority\030\006 \001(\005\022\022"
    "\n\nexpiration\030\007 \001(\003\032.\n\014HeadersEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\215\001\n\022topic_sub"
    "scription\022\022\n\ntopic_name\030\001 \001(\t\022\023\n\013topic_o"
    "wner\030\002 \001(\t\022\035\n\025subscriber_queue_name\030\003 \001("
    "\t\022\036\n\026subscriber_queue_owner\030\004 \001(\t\022\017\n\007dur"
    "able\030\005 \001(\010\"O\n\017topics_response\022\017\n\007success"
    "\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022\032\n\006topics\030\003 \003(\0132"
    "\n.mom.topic\"\031\n\006NodeID\022\017\n\007node_id\030\001 \001(\t\"\276"
    "\001\n\tnode_info\022\017\n\007node_id\030\001 \001(\t\022\014\n\004host\030\002 "
    "\001(\t\022\014\n\004port\030\003 \001(\005\0226\n\014capabilities\030\004 \003(\0132"
    " .mom.node_info.CapabilitiesEntry\022\027\n\017sta"
    "rt_timestamp\030\005 \001(\003\0323\n\021CapabilitiesEntry\022"
    "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"V\n\016NodeA"
    "ssignment\022\024\n\014primary_node\030\001 \001(\t\022\025\n\rrepli"
    "ca_nodes\030\002 \003(\t\022\027\n\017partition_count\030\003 \001(\005\""
    "\200\003\n\rcluster_state\022\021\n\tleader_id\030\001 \001(\t\022\035\n\005"
    "nodes\030\002 \003(\0132\016.mom.node_info\022C\n\021topic_ass"
    "ignments\030\003 \003(\0132(.mom.cluster_state.Topic"
    "AssignmentsEntry\022C\n\021queue_assignments\030\004 "
    "\003(\0132(.mom.cluster_state.QueueAssignments"
    "Entry\022\027\n\017state_timestamp\030\005 \001(\003\032L\n\025TopicA"
    "ssignmentsEntry\022\013\n\003key\030\001 \001(\t\022\"\n\005value\030\002 "
    "\001(\0132\023.mom.NodeAssignment:\0028\001\032L\n\025QueueAss"
    "ignmentsEntry\022\013\n\003key\030\001 \001(\t\022\"\n\005value\030\002 \001("
    "\0132\023.mom.NodeAssignment:\0028\001\"\206\003\n\014cluster_i"
    "nfo\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022\021\n"
    "\tleader_id\030\003 \001(\t\022\035\n\005nodes\030\004 \003(\0132\016.mom.no"
    "de_info\022B\n\021topic_assignments\030\005 \003(\0132\'.mom"
    ".cluster_info.TopicAssignmentsEntry\022B\n\021q"
    "ueue_assignments\030\006 \003(\0132\'.mom.cluster_inf"
    "o.QueueAssignmentsEntry\032L\n\025TopicAssignme"
    "ntsEntry\022\013\n\003key\030\001 \001(\t\022\"\n\005value\030\002 \001(\0132\023.m"
    "om.NodeAssignment:\0028\001\032L\n\025QueueAssignment"
    "sEntry\022\013\n\003key\030\001 \001(\t\022\"\n\005value\030\002 \001(\0132\023.mom"
    ".NodeAssignment:\0028\001\"\254\001\n\rsync_response\022\017\n"
    "\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022\032\n\006queue"
    "s\030\003 \003(\0132\n.mom.queue\022\032\n\006topics\030\004 \003(\0132\n.mo"
    "m.topic\022)\n\rcluster_state\030\005 \001(\0132\022.mom.clu"
    "ster_state\022\026\n\016sync_timestamp\030\006 \001(\0032\230\t\n\013M"
    "OM_service\0220\n\013sync_topics\022\013.mom.NodeID\032\022"
    ".mom.sync_response\"\000\0220\n\013sync_queues\022\013.mo"
    "m.NodeID\032\022.mom.sync_response\"\000\0220\n\014create"
    "_queue\022\021.mom.queue_config\032\013.mom.status\"\000"
    "\0224\n\014delete_queue\022\025.mom.queue_identifier\032"
    "\013.mom.status\"\000\0222\n\013list_queues\022\013.mom.Node"
    "ID\032\024.mom.queues_response\"\000\0225\n\016get_queue_"
    "info\022\025.mom.queue_identifier\032\n.mom.queue\""
    "\000\0220\n\014create_topic\022\021.mom.topic_config\032\013.m"
    "om.status\"\000\0224\n\014delete_topic\022\025.mom.topic_"
    "identifier\032\013.mom.status\"\000\0222\n\013list_topics"
    "\022\013.mom.NodeID\032\024.mom.topics_response\"\000\0225\n"
    "\016get_topic_info\022\025.mom.topic_identifier\032\n"
    ".mom.topic\"\000\0229\n\017subscribe_topic\022\027.mom.to"
    "pic_subscription\032\013.mom.status\"\000\022;\n\021unsub"
    "scribe_topic\022\027.mom.topic_subscription\032\013."
    "mom.status\"\000\022\?\n\022send_queue_message\022\022.mom"
    ".queue_message\032\023.mom.message_status\"\000\022>\n"
    "\025receive_queue_message\022\025.mom.queue_ident"
    "ifier\032\014.mom.message\"\000\022B\n\025publish_topic_m"
    "essage\022\022.mom.topic_message\032\023.mom.message"
    "_status\"\000\022@\n\025receive_topic_message\022\027.mom"
    ".topic_subscription\032\014.mom.message\"\000\022=\n\023a"
    "cknowledge_message\022\027.mom.message_identif"
    "ier\032\013.mom.status\"\000\0223\n\014join_cluster\022\016.mom"
    ".node_info\032\021.mom.cluster_info\"\000\022+\n\rleave"
    "_cluster\022\013.mom.NodeID\032\013.mom.status\"\000\022\'\n\t"
    "heartbeat\022\013.mom.NodeID\032\013.mom.status\"\000\0226\n"
    "\021get_cluster_state\022\013.mom.NodeID\032\022.mom.cl"
    "uster_state\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_mom_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_mom_2eproto = {
    false,
    false,
    4501,
    descriptor_table_protodef_mom_2eproto,
    "mom.proto",
    &descriptor_table_mom_2eproto_once,
    nullptr,
    0,
    33,
    schemas,
    file_default_instances,
    TableStruct_mom_2eproto::offsets,
    file_level_enum_descriptors_mom_2eproto,
    file_level_service_descriptors_mom_2eproto,
};
namespace mom {
// ===================================================================

class status::_Internal {
 public:
};

status::status(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.status)
}
inline PROTOBUF_NDEBUG_INLINE status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::status& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

status::status(
    ::google::protobuf::Arena* arena,
    const status& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:mom.status)
}
inline PROTOBUF_NDEBUG_INLINE status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
status::~status() {
  // @@protoc_insertion_point(destructor:mom.status)
  SharedDtor(*this);
}
inline void status::SharedDtor(MessageLite& self) {
  status& this_ = static_cast<status&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* status::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) status(arena);
}
constexpr auto status::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(status),
                                            alignof(status));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull status::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_status_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &status::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<status>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &status::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<status>(), &status::ByteSizeLong,
            &status::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(status, _impl_._cached_size_),
        false,
    },
    &status::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* status::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 26, 2> status::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::status>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(status, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(status, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(status, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(status, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(status, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\0\7\0\0\0\0\0"
    "mom.status"
    "message"
  }},
};

PROTOBUF_NOINLINE void status::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* status::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const status& this_ = static_cast<const status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* status::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.status)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.status.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.status)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t status::ByteSizeLong(const MessageLite& base) {
          const status& this_ = static_cast<const status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t status::ByteSizeLong() const {
          const status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.status)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void status::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<status*>(&to_msg);
  auto& from = static_cast<const status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void status::CopyFrom(const status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void status::InternalSwap(status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata status::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              message_HeadersEntry_DoNotUse::message_HeadersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              message_HeadersEntry_DoNotUse::message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              message_HeadersEntry_DoNotUse::message_HeadersEntry_DoNotUse() : SuperType() {}
              message_HeadersEntry_DoNotUse::message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* message_HeadersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) message_HeadersEntry_DoNotUse(arena);
              }
              constexpr auto message_HeadersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(message_HeadersEntry_DoNotUse),
                                                          alignof(message_HeadersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull message_HeadersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_message_HeadersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &message_HeadersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<message_HeadersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &message_HeadersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &message_HeadersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(message_HeadersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &message_HeadersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* message_HeadersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> message_HeadersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(message_HeadersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::message_HeadersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(message_HeadersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(message_HeadersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(message_HeadersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(message_HeadersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\3\5\0\0\0\0\0"
    "mom.message.HeadersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class message::_Internal {
 public:
};

message::message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.message)
}
inline PROTOBUF_NDEBUG_INLINE message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::message& from_msg)
      : headers_{visibility, arena, from.headers_},
        id_(arena, from.id_),
        content_(arena, from.content_),
        sender_(arena, from.sender_),
        _cached_size_{0} {}

message::message(
    ::google::protobuf::Arena* arena,
    const message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, expiration_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::expiration_));

  // @@protoc_insertion_point(copy_constructor:mom.message)
}
inline PROTOBUF_NDEBUG_INLINE message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : headers_{visibility, arena},
        id_(arena),
        content_(arena),
        sender_(arena),
        _cached_size_{0} {}

inline void message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, expiration_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::expiration_));
}
message::~message() {
  // @@protoc_insertion_point(destructor:mom.message)
  SharedDtor(*this);
}
inline void message::SharedDtor(MessageLite& self) {
  message& this_ = static_cast<message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.~Impl_();
}

inline void* message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) message(arena);
}
constexpr auto message::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(message, _impl_.headers_) +
          decltype(message::_impl_.headers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(message, _impl_.headers_) +
          decltype(message::_impl_.headers_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(message), alignof(message), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&message::PlacementNew_,
                                 sizeof(message),
                                 alignof(message));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<message>(), &message::ByteSizeLong,
            &message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(message, _impl_._cached_size_),
        false,
    },
    &message::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 50, 2> message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 expiration = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(message, _impl_.expiration_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.expiration_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.id_)}},
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.content_)}},
    // string sender = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.sender_)}},
    // int64 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(message, _impl_.timestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool persistent = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(message, _impl_.persistent_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.persistent_)}},
    // int32 priority = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(message, _impl_.priority_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.priority_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender = 3;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // map<string, string> headers = 5;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.headers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool persistent = 6;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.persistent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 priority = 7;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 expiration = 8;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.expiration_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(message()._impl_.headers_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\13\2\7\6\0\7\0\0\0\0\0\0\0\0\0\0"
    "mom.message"
    "id"
    "content"
    "sender"
    "headers"
  }},
};

PROTOBUF_NOINLINE void message::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.headers_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.expiration_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.expiration_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const message& this_ = static_cast<const message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string content = 2;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message.content");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string sender = 3;
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message.sender");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int64 timestamp = 4;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_timestamp(), target);
          }

          // map<string, string> headers = 5;
          if (!this_._internal_headers().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_headers();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message.headers");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message.headers");
              }
            }
          }

          // bool persistent = 6;
          if (this_._internal_persistent() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_persistent(), target);
          }

          // int32 priority = 7;
          if (this_._internal_priority() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_priority(), target);
          }

          // int64 expiration = 8;
          if (this_._internal_expiration() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_expiration(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t message::ByteSizeLong(const MessageLite& base) {
          const message& this_ = static_cast<const message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t message::ByteSizeLong() const {
          const message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> headers = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_headers_size());
              for (const auto& entry : this_._internal_headers()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string content = 2;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // string sender = 3;
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
            // int64 timestamp = 4;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
            // bool persistent = 6;
            if (this_._internal_persistent() != 0) {
              total_size += 2;
            }
            // int32 priority = 7;
            if (this_._internal_priority() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_priority());
            }
            // int64 expiration = 8;
            if (this_._internal_expiration() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_expiration());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<message*>(&to_msg);
  auto& from = static_cast<const message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_persistent() != 0) {
    _this->_impl_.persistent_ = from._impl_.persistent_;
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  if (from._internal_expiration() != 0) {
    _this->_impl_.expiration_ = from._impl_.expiration_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void message::CopyFrom(const message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void message::InternalSwap(message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(message, _impl_.expiration_)
      + sizeof(message::_impl_.expiration_)
      - PROTOBUF_FIELD_OFFSET(message, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class message_identifier::_Internal {
 public:
};

message_identifier::message_identifier(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.message_identifier)
}
inline PROTOBUF_NDEBUG_INLINE message_identifier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::message_identifier& from_msg)
      : message_id_(arena, from.message_id_),
        destination_name_(arena, from.destination_name_),
        _cached_size_{0} {}

message_identifier::message_identifier(
    ::google::protobuf::Arena* arena,
    const message_identifier& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  message_identifier* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_topic_ = from._impl_.is_topic_;

  // @@protoc_insertion_point(copy_constructor:mom.message_identifier)
}
inline PROTOBUF_NDEBUG_INLINE message_identifier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_id_(arena),
        destination_name_(arena),
        _cached_size_{0} {}

inline void message_identifier::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_topic_ = {};
}
message_identifier::~message_identifier() {
  // @@protoc_insertion_point(destructor:mom.message_identifier)
  SharedDtor(*this);
}
inline void message_identifier::SharedDtor(MessageLite& self) {
  message_identifier& this_ = static_cast<message_identifier&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_id_.Destroy();
  this_._impl_.destination_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* message_identifier::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) message_identifier(arena);
}
constexpr auto message_identifier::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(message_identifier),
                                            alignof(message_identifier));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull message_identifier::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_message_identifier_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &message_identifier::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<message_identifier>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &message_identifier::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<message_identifier>(), &message_identifier::ByteSizeLong,
            &message_identifier::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(message_identifier, _impl_._cached_size_),
        false,
    },
    &message_identifier::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* message_identifier::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 57, 2> message_identifier::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::message_identifier>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string message_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(message_identifier, _impl_.message_id_)}},
    // string destination_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(message_identifier, _impl_.destination_name_)}},
    // bool is_topic = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(message_identifier, _impl_.is_topic_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(message_identifier, _impl_.is_topic_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message_id = 1;
    {PROTOBUF_FIELD_OFFSET(message_identifier, _impl_.message_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string destination_name = 2;
    {PROTOBUF_FIELD_OFFSET(message_identifier, _impl_.destination_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_topic = 3;
    {PROTOBUF_FIELD_OFFSET(message_identifier, _impl_.is_topic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\26\12\20\0\0\0\0\0"
    "mom.message_identifier"
    "message_id"
    "destination_name"
  }},
};

PROTOBUF_NOINLINE void message_identifier::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.message_identifier)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_.ClearToEmpty();
  _impl_.destination_name_.ClearToEmpty();
  _impl_.is_topic_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* message_identifier::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const message_identifier& this_ = static_cast<const message_identifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* message_identifier::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const message_identifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.message_identifier)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string message_id = 1;
          if (!this_._internal_message_id().empty()) {
            const std::string& _s = this_._internal_message_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message_identifier.message_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string destination_name = 2;
          if (!this_._internal_destination_name().empty()) {
            const std::string& _s = this_._internal_destination_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message_identifier.destination_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool is_topic = 3;
          if (this_._internal_is_topic() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_is_topic(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.message_identifier)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t message_identifier::ByteSizeLong(const MessageLite& base) {
          const message_identifier& this_ = static_cast<const message_identifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t message_identifier::ByteSizeLong() const {
          const message_identifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.message_identifier)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message_id = 1;
            if (!this_._internal_message_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message_id());
            }
            // string destination_name = 2;
            if (!this_._internal_destination_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_name());
            }
            // bool is_topic = 3;
            if (this_._internal_is_topic() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void message_identifier::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<message_identifier*>(&to_msg);
  auto& from = static_cast<const message_identifier&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.message_identifier)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_id().empty()) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (!from._internal_destination_name().empty()) {
    _this->_internal_set_destination_name(from._internal_destination_name());
  }
  if (from._internal_is_topic() != 0) {
    _this->_impl_.is_topic_ = from._impl_.is_topic_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void message_identifier::CopyFrom(const message_identifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.message_identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void message_identifier::InternalSwap(message_identifier* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_id_, &other->_impl_.message_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_name_, &other->_impl_.destination_name_, arena);
        swap(_impl_.is_topic_, other->_impl_.is_topic_);
}

::google::protobuf::Metadata message_identifier::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class message_status::_Internal {
 public:
};

message_status::message_status(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.message_status)
}
inline PROTOBUF_NDEBUG_INLINE message_status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::message_status& from_msg)
      : message_(arena, from.message_),
        message_id_(arena, from.message_id_),
        _cached_size_{0} {}

message_status::message_status(
    ::google::protobuf::Arena* arena,
    const message_status& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  message_status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:mom.message_status)
}
inline PROTOBUF_NDEBUG_INLINE message_status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        message_id_(arena),
        _cached_size_{0} {}

inline void message_status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
message_status::~message_status() {
  // @@protoc_insertion_point(destructor:mom.message_status)
  SharedDtor(*this);
}
inline void message_status::SharedDtor(MessageLite& self) {
  message_status& this_ = static_cast<message_status&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.message_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* message_status::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) message_status(arena);
}
constexpr auto message_status::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(message_status),
                                            alignof(message_status));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull message_status::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_message_status_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &message_status::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<message_status>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &message_status::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<message_status>(), &message_status::ByteSizeLong,
            &message_status::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(message_status, _impl_._cached_size_),
        false,
    },
    &message_status::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* message_status::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 44, 2> message_status::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::message_status>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(message_status, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(message_status, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(message_status, _impl_.message_)}},
    // string message_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(message_status, _impl_.message_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(message_status, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(message_status, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message_id = 3;
    {PROTOBUF_FIELD_OFFSET(message_status, _impl_.message_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\7\12\0\0\0\0"
    "mom.message_status"
    "message"
    "message_id"
  }},
};

PROTOBUF_NOINLINE void message_status::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.message_status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.message_id_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* message_status::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const message_status& this_ = static_cast<const message_status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* message_status::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const message_status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.message_status)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message_status.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string message_id = 3;
          if (!this_._internal_message_id().empty()) {
            const std::string& _s = this_._internal_message_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message_status.message_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.message_status)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t message_status::ByteSizeLong(const MessageLite& base) {
          const message_status& this_ = static_cast<const message_status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t message_status::ByteSizeLong() const {
          const message_status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.message_status)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string message_id = 3;
            if (!this_._internal_message_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message_id());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void message_status::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<message_status*>(&to_msg);
  auto& from = static_cast<const message_status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.message_status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_message_id().empty()) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void message_status::CopyFrom(const message_status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.message_status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void message_status::InternalSwap(message_status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_id_, &other->_impl_.message_id_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata message_status::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class queue_identifier::_Internal {
 public:
};

queue_identifier::queue_identifier(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.queue_identifier)
}
inline PROTOBUF_NDEBUG_INLINE queue_identifier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::queue_identifier& from_msg)
      : name_(arena, from.name_),
        owner_(arena, from.owner_),
        _cached_size_{0} {}

queue_identifier::queue_identifier(
    ::google::protobuf::Arena* arena,
    const queue_identifier& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queue_identifier* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.queue_identifier)
}
inline PROTOBUF_NDEBUG_INLINE queue_identifier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        owner_(arena),
        _cached_size_{0} {}

inline void queue_identifier::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
queue_identifier::~queue_identifier() {
  // @@protoc_insertion_point(destructor:mom.queue_identifier)
  SharedDtor(*this);
}
inline void queue_identifier::SharedDtor(MessageLite& self) {
  queue_identifier& this_ = static_cast<queue_identifier&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* queue_identifier::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queue_identifier(arena);
}
constexpr auto queue_identifier::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(queue_identifier),
                                            alignof(queue_identifier));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queue_identifier::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queue_identifier_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queue_identifier::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queue_identifier>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queue_identifier::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queue_identifier>(), &queue_identifier::ByteSizeLong,
            &queue_identifier::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queue_identifier, _impl_._cached_size_),
        false,
    },
    &queue_identifier::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queue_identifier::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> queue_identifier::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue_identifier>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue_identifier, _impl_.owner_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_identifier, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(queue_identifier, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 2;
    {PROTOBUF_FIELD_OFFSET(queue_identifier, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\4\5\0\0\0\0\0"
    "mom.queue_identifier"
    "name"
    "owner"
  }},
};

PROTOBUF_NOINLINE void queue_identifier::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.queue_identifier)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queue_identifier::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queue_identifier& this_ = static_cast<const queue_identifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queue_identifier::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queue_identifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.queue_identifier)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_identifier.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner = 2;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_identifier.owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.queue_identifier)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queue_identifier::ByteSizeLong(const MessageLite& base) {
          const queue_identifier& this_ = static_cast<const queue_identifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queue_identifier::ByteSizeLong() const {
          const queue_identifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.queue_identifier)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string owner = 2;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queue_identifier::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queue_identifier*>(&to_msg);
  auto& from = static_cast<const queue_identifier&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.queue_identifier)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queue_identifier::CopyFrom(const queue_identifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.queue_identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queue_identifier::InternalSwap(queue_identifier* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
}

::google::protobuf::Metadata queue_identifier::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              queue_config_PropertiesEntry_DoNotUse::queue_config_PropertiesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              queue_config_PropertiesEntry_DoNotUse::queue_config_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              queue_config_PropertiesEntry_DoNotUse::queue_config_PropertiesEntry_DoNotUse() : SuperType() {}
              queue_config_PropertiesEntry_DoNotUse::queue_config_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* queue_config_PropertiesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) queue_config_PropertiesEntry_DoNotUse(arena);
              }
              constexpr auto queue_config_PropertiesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(queue_config_PropertiesEntry_DoNotUse),
                                                          alignof(queue_config_PropertiesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull queue_config_PropertiesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_queue_config_PropertiesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &queue_config_PropertiesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<queue_config_PropertiesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &queue_config_PropertiesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &queue_config_PropertiesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(queue_config_PropertiesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &queue_config_PropertiesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* queue_config_PropertiesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> queue_config_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(queue_config_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue_config_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue_config_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_config_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(queue_config_PropertiesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(queue_config_PropertiesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\3\5\0\0\0\0\0"
    "mom.queue_config.PropertiesEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class queue_config::_Internal {
 public:
};

queue_config::queue_config(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.queue_config)
}
inline PROTOBUF_NDEBUG_INLINE queue_config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::queue_config& from_msg)
      : properties_{visibility, arena, from.properties_},
        name_(arena, from.name_),
        owner_(arena, from.owner_),
        _cached_size_{0} {}

queue_config::queue_config(
    ::google::protobuf::Arena* arena,
    const queue_config& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queue_config* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.queue_config)
}
inline PROTOBUF_NDEBUG_INLINE queue_config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : properties_{visibility, arena},
        name_(arena),
        owner_(arena),
        _cached_size_{0} {}

inline void queue_config::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
queue_config::~queue_config() {
  // @@protoc_insertion_point(destructor:mom.queue_config)
  SharedDtor(*this);
}
inline void queue_config::SharedDtor(MessageLite& self) {
  queue_config& this_ = static_cast<queue_config&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* queue_config::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queue_config(arena);
}
constexpr auto queue_config::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(queue_config, _impl_.properties_) +
          decltype(queue_config::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(queue_config, _impl_.properties_) +
          decltype(queue_config::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(queue_config), alignof(queue_config), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&queue_config::PlacementNew_,
                                 sizeof(queue_config),
                                 alignof(queue_config));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queue_config::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queue_config_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queue_config::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queue_config>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queue_config::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queue_config>(), &queue_config::ByteSizeLong,
            &queue_config::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queue_config, _impl_._cached_size_),
        false,
    },
    &queue_config::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queue_config::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 44, 2> queue_config::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue_config>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue_config, _impl_.owner_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_config, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(queue_config, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 2;
    {PROTOBUF_FIELD_OFFSET(queue_config, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> properties = 3;
    {PROTOBUF_FIELD_OFFSET(queue_config, _impl_.properties_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(queue_config()._impl_.properties_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\20\4\5\12\0\0\0\0"
    "mom.queue_config"
    "name"
    "owner"
    "properties"
  }},
};

PROTOBUF_NOINLINE void queue_config::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.queue_config)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queue_config::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queue_config& this_ = static_cast<const queue_config&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queue_config::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queue_config& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.queue_config)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_config.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner = 2;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_config.owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // map<string, string> properties = 3;
          if (!this_._internal_properties().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_properties();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_config.properties");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_config.properties");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_config.properties");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_config.properties");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.queue_config)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queue_config::ByteSizeLong(const MessageLite& base) {
          const queue_config& this_ = static_cast<const queue_config&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queue_config::ByteSizeLong() const {
          const queue_config& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.queue_config)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> properties = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
              for (const auto& entry : this_._internal_properties()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string owner = 2;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queue_config::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queue_config*>(&to_msg);
  auto& from = static_cast<const queue_config&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.queue_config)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queue_config::CopyFrom(const queue_config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.queue_config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queue_config::InternalSwap(queue_config* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
}

::google::protobuf::Metadata queue_config::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              queue_PropertiesEntry_DoNotUse::queue_PropertiesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              queue_PropertiesEntry_DoNotUse::queue_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              queue_PropertiesEntry_DoNotUse::queue_PropertiesEntry_DoNotUse() : SuperType() {}
              queue_PropertiesEntry_DoNotUse::queue_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* queue_PropertiesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) queue_PropertiesEntry_DoNotUse(arena);
              }
              constexpr auto queue_PropertiesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(queue_PropertiesEntry_DoNotUse),
                                                          alignof(queue_PropertiesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull queue_PropertiesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_queue_PropertiesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &queue_PropertiesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<queue_PropertiesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &queue_PropertiesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &queue_PropertiesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(queue_PropertiesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &queue_PropertiesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* queue_PropertiesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> queue_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(queue_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(queue_PropertiesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(queue_PropertiesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\3\5\0\0\0\0\0"
    "mom.queue.PropertiesEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class queue::_Internal {
 public:
  using HasBits =
      decltype(std::declval<queue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(queue, _impl_._has_bits_);
};

queue::queue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.queue)
}
inline PROTOBUF_NDEBUG_INLINE queue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::queue& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_},
        name_(arena, from.name_),
        owner_(arena, from.owner_) {}

queue::queue(
    ::google::protobuf::Arena* arena,
    const queue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_assignment_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mom::NodeAssignment>(
                              arena, *from._impl_.node_assignment_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, creation_timestamp_),
           offsetof(Impl_, message_count_) -
               offsetof(Impl_, creation_timestamp_) +
               sizeof(Impl_::message_count_));

  // @@protoc_insertion_point(copy_constructor:mom.queue)
}
inline PROTOBUF_NDEBUG_INLINE queue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        properties_{visibility, arena},
        name_(arena),
        owner_(arena) {}

inline void queue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_assignment_),
           0,
           offsetof(Impl_, message_count_) -
               offsetof(Impl_, node_assignment_) +
               sizeof(Impl_::message_count_));
}
queue::~queue() {
  // @@protoc_insertion_point(destructor:mom.queue)
  SharedDtor(*this);
}
inline void queue::SharedDtor(MessageLite& self) {
  queue& this_ = static_cast<queue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.owner_.Destroy();
  delete this_._impl_.node_assignment_;
  this_._impl_.~Impl_();
}

inline void* queue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queue(arena);
}
constexpr auto queue::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(queue, _impl_.properties_) +
          decltype(queue::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(queue, _impl_.properties_) +
          decltype(queue::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(queue), alignof(queue), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&queue::PlacementNew_,
                                 sizeof(queue),
                                 alignof(queue));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queue::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queue::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queue::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queue>(), &queue::ByteSizeLong,
            &queue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queue, _impl_._cached_size_),
        false,
    },
    &queue::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 37, 2> queue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(queue, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue, _impl_.name_)}},
    // string owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue, _impl_.owner_)}},
    // int64 creation_timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(queue, _impl_.creation_timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(queue, _impl_.creation_timestamp_)}},
    // int32 message_count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(queue, _impl_.message_count_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(queue, _impl_.message_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .mom.NodeAssignment node_assignment = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(queue, _impl_.node_assignment_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 2;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.owner_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 creation_timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.creation_timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 message_count = 4;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.message_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> properties = 5;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.properties_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .mom.NodeAssignment node_assignment = 6;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.node_assignment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::NodeAssignment>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(queue()._impl_.properties_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\11\4\5\0\0\12\0\0"
    "mom.queue"
    "name"
    "owner"
    "properties"
  }},
};

PROTOBUF_NOINLINE void queue::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.queue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_assignment_ != nullptr);
    _impl_.node_assignment_->Clear();
  }
  ::memset(&_impl_.creation_timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.message_count_) -
      reinterpret_cast<char*>(&_impl_.creation_timestamp_)) + sizeof(_impl_.message_count_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queue& this_ = static_cast<const queue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.queue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner = 2;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue.owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 creation_timestamp = 3;
          if (this_._internal_creation_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_creation_timestamp(), target);
          }

          // int32 message_count = 4;
          if (this_._internal_message_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_message_count(), target);
          }

          // map<string, string> properties = 5;
          if (!this_._internal_properties().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_properties();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue.properties");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue.properties");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue.properties");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue.properties");
              }
            }
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mom.NodeAssignment node_assignment = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.node_assignment_, this_._impl_.node_assignment_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.queue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queue::ByteSizeLong(const MessageLite& base) {
          const queue& this_ = static_cast<const queue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queue::ByteSizeLong() const {
          const queue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.queue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> properties = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
              for (const auto& entry : this_._internal_properties()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string owner = 2;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
          }
           {
            // .mom.NodeAssignment node_assignment = 6;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.node_assignment_);
            }
          }
           {
            // int64 creation_timestamp = 3;
            if (this_._internal_creation_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_creation_timestamp());
            }
            // int32 message_count = 4;
            if (this_._internal_message_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_message_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queue*>(&to_msg);
  auto& from = static_cast<const queue&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.queue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_assignment_ != nullptr);
    if (_this->_impl_.node_assignment_ == nullptr) {
      _this->_impl_.node_assignment_ =
          ::google::protobuf::Message::CopyConstruct<::mom::NodeAssignment>(arena, *from._impl_.node_assignment_);
    } else {
      _this->_impl_.node_assignment_->MergeFrom(*from._impl_.node_assignment_);
    }
  }
  if (from._internal_creation_timestamp() != 0) {
    _this->_impl_.creation_timestamp_ = from._impl_.creation_timestamp_;
  }
  if (from._internal_message_count() != 0) {
    _this->_impl_.message_count_ = from._impl_.message_count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queue::CopyFrom(const queue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.queue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queue::InternalSwap(queue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(queue, _impl_.message_count_)
      + sizeof(queue::_impl_.message_count_)
      - PROTOBUF_FIELD_OFFSET(queue, _impl_.node_assignment_)>(
          reinterpret_cast<char*>(&_impl_.node_assignment_),
          reinterpret_cast<char*>(&other->_impl_.node_assignment_));
}

::google::protobuf::Metadata queue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              queue_message_HeadersEntry_DoNotUse::queue_message_HeadersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              queue_message_HeadersEntry_DoNotUse::queue_message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              queue_message_HeadersEntry_DoNotUse::queue_message_HeadersEntry_DoNotUse() : SuperType() {}
              queue_message_HeadersEntry_DoNotUse::queue_message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* queue_message_HeadersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) queue_message_HeadersEntry_DoNotUse(arena);
              }
              constexpr auto queue_message_HeadersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(queue_message_HeadersEntry_DoNotUse),
                                                          alignof(queue_message_HeadersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull queue_message_HeadersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_queue_message_HeadersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &queue_message_HeadersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<queue_message_HeadersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &queue_message_HeadersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &queue_message_HeadersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &queue_message_HeadersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* queue_message_HeadersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> queue_message_HeadersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue_message_HeadersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\3\5\0\0\0\0\0"
    "mom.queue_message.HeadersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class queue_message::_Internal {
 public:
};

queue_message::queue_message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.queue_message)
}
inline PROTOBUF_NDEBUG_INLINE queue_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::queue_message& from_msg)
      : headers_{visibility, arena, from.headers_},
        queue_name_(arena, from.queue_name_),
        content_(arena, from.content_),
        sender_(arena, from.sender_),
        _cached_size_{0} {}

queue_message::queue_message(
    ::google::protobuf::Arena* arena,
    const queue_message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queue_message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, persistent_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, persistent_),
           offsetof(Impl_, expiration_) -
               offsetof(Impl_, persistent_) +
               sizeof(Impl_::expiration_));

  // @@protoc_insertion_point(copy_constructor:mom.queue_message)
}
inline PROTOBUF_NDEBUG_INLINE queue_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : headers_{visibility, arena},
        queue_name_(arena),
        content_(arena),
        sender_(arena),
        _cached_size_{0} {}

inline void queue_message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, persistent_),
           0,
           offsetof(Impl_, expiration_) -
               offsetof(Impl_, persistent_) +
               sizeof(Impl_::expiration_));
}
queue_message::~queue_message() {
  // @@protoc_insertion_point(destructor:mom.queue_message)
  SharedDtor(*this);
}
inline void queue_message::SharedDtor(MessageLite& self) {
  queue_message& this_ = static_cast<queue_message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.queue_name_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.~Impl_();
}

inline void* queue_message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queue_message(arena);
}
constexpr auto queue_message::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(queue_message, _impl_.headers_) +
          decltype(queue_message::_impl_.headers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(queue_message, _impl_.headers_) +
          decltype(queue_message::_impl_.headers_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(queue_message), alignof(queue_message), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&queue_message::PlacementNew_,
                                 sizeof(queue_message),
                                 alignof(queue_message));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queue_message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queue_message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queue_message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queue_message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queue_message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queue_message>(), &queue_message::ByteSizeLong,
            &queue_message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queue_message, _impl_._cached_size_),
        false,
    },
    &queue_message::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queue_message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 56, 2> queue_message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue_message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string queue_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message, _impl_.queue_name_)}},
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message, _impl_.content_)}},
    // string sender = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message, _impl_.sender_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool persistent = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(queue_message, _impl_.persistent_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message, _impl_.persistent_)}},
    // int32 priority = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(queue_message, _impl_.priority_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message, _impl_.priority_)}},
    // int64 expiration = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(queue_message, _impl_.expiration_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message, _impl_.expiration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string queue_name = 1;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.queue_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender = 3;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> headers = 4;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.headers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool persistent = 5;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.persistent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 priority = 6;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 expiration = 7;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.expiration_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(queue_message()._impl_.headers_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\21\12\7\6\7\0\0\0"
    "mom.queue_message"
    "queue_name"
    "content"
    "sender"
    "headers"
  }},
};

PROTOBUF_NOINLINE void queue_message::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.queue_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.headers_.Clear();
  _impl_.queue_name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  ::memset(&_impl_.persistent_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.expiration_) -
      reinterpret_cast<char*>(&_impl_.persistent_)) + sizeof(_impl_.expiration_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queue_message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queue_message& this_ = static_cast<const queue_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queue_message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queue_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.queue_message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string queue_name = 1;
          if (!this_._internal_queue_name().empty()) {
            const std::string& _s = this_._internal_queue_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.queue_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string content = 2;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.content");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string sender = 3;
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.sender");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // map<string, string> headers = 4;
          if (!this_._internal_headers().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_headers();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.headers");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.headers");
              }
            }
          }

          // bool persistent = 5;
          if (this_._internal_persistent() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_persistent(), target);
          }

          // int32 priority = 6;
          if (this_._internal_priority() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_priority(), target);
          }

          // int64 expiration = 7;
          if (this_._internal_expiration() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_expiration(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.queue_message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queue_message::ByteSizeLong(const MessageLite& base) {
          const queue_message& this_ = static_cast<const queue_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queue_message::ByteSizeLong() const {
          const queue_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.queue_message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> headers = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_headers_size());
              for (const auto& entry : this_._internal_headers()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string queue_name = 1;
            if (!this_._internal_queue_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_queue_name());
            }
            // string content = 2;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // string sender = 3;
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
            // bool persistent = 5;
            if (this_._internal_persistent() != 0) {
              total_size += 2;
            }
            // int32 priority = 6;
            if (this_._internal_priority() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_priority());
            }
            // int64 expiration = 7;
            if (this_._internal_expiration() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_expiration());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queue_message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queue_message*>(&to_msg);
  auto& from = static_cast<const queue_message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.queue_message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  if (!from._internal_queue_name().empty()) {
    _this->_internal_set_queue_name(from._internal_queue_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (from._internal_persistent() != 0) {
    _this->_impl_.persistent_ = from._impl_.persistent_;
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  if (from._internal_expiration() != 0) {
    _this->_impl_.expiration_ = from._impl_.expiration_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queue_message::CopyFrom(const queue_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.queue_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queue_message::InternalSwap(queue_message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.queue_name_, &other->_impl_.queue_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(queue_message, _impl_.expiration_)
      + sizeof(queue_message::_impl_.expiration_)
      - PROTOBUF_FIELD_OFFSET(queue_message, _impl_.persistent_)>(
          reinterpret_cast<char*>(&_impl_.persistent_),
          reinterpret_cast<char*>(&other->_impl_.persistent_));
}

::google::protobuf::Metadata queue_message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class queues_response::_Internal {
 public:
};

queues_response::queues_response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.queues_response)
}
inline PROTOBUF_NDEBUG_INLINE queues_response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::queues_response& from_msg)
      : queues_{visibility, arena, from.queues_},
        message_(arena, from.message_),
        _cached_size_{0} {}

queues_response::queues_response(
    ::google::protobuf::Arena* arena,
    const queues_response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queues_response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:mom.queues_response)
}
inline PROTOBUF_NDEBUG_INLINE queues_response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : queues_{visibility, arena},
        message_(arena),
        _cached_size_{0} {}

inline void queues_response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
queues_response::~queues_response() {
  // @@protoc_insertion_point(destructor:mom.queues_response)
  SharedDtor(*this);
}
inline void queues_response::SharedDtor(MessageLite& self) {
  queues_response& this_ = static_cast<queues_response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* queues_response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queues_response(arena);
}
constexpr auto queues_response::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(queues_response, _impl_.queues_) +
          decltype(queues_response::_impl_.queues_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(queues_response), alignof(queues_response), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&queues_response::PlacementNew_,
                                 sizeof(queues_response),
                                 alignof(queues_response));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queues_response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queues_response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queues_response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queues_response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queues_response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queues_response>(), &queues_response::ByteSizeLong,
            &queues_response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queues_response, _impl_._cached_size_),
        false,
    },
    &queues_response::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queues_response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 35, 2> queues_response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queues_response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(queues_response, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(queues_response, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queues_response, _impl_.message_)}},
    // repeated .mom.queue queues = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(queues_response, _impl_.queues_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(queues_response, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(queues_response, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .mom.queue queues = 3;
    {PROTOBUF_FIELD_OFFSET(queues_response, _impl_.queues_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::queue>()},
  }}, {{
    "\23\0\7\0\0\0\0\0"
    "mom.queues_response"
    "message"
  }},
};

PROTOBUF_NOINLINE void queues_response::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.queues_response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.queues_.Clear();
  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queues_response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queues_response& this_ = static_cast<const queues_response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queues_response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queues_response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.queues_response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queues_response.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .mom.queue queues = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_queues_size());
               i < n; i++) {
            const auto& repfield = this_._internal_queues().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.queues_response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queues_response::ByteSizeLong(const MessageLite& base) {
          const queues_response& this_ = static_cast<const queues_response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queues_response::ByteSizeLong() const {
          const queues_response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.queues_response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom.queue queues = 3;
            {
              total_size += 1UL * this_._internal_queues_size();
              for (const auto& msg : this_._internal_queues()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queues_response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queues_response*>(&to_msg);
  auto& from = static_cast<const queues_response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.queues_response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_queues()->MergeFrom(
      from._internal_queues());
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queues_response::CopyFrom(const queues_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.queues_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queues_response::InternalSwap(queues_response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.queues_.InternalSwap(&other->_impl_.queues_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata queues_response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class topic_identifier::_Internal {
 public:
};

topic_identifier::topic_identifier(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.topic_identifier)
}
inline PROTOBUF_NDEBUG_INLINE topic_identifier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::topic_identifier& from_msg)
      : name_(arena, from.name_),
        owner_(arena, from.owner_),
        _cached_size_{0} {}

topic_identifier::topic_identifier(
    ::google::protobuf::Arena* arena,
    const topic_identifier& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic_identifier* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.topic_identifier)
}
inline PROTOBUF_NDEBUG_INLINE topic_identifier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        owner_(arena),
        _cached_size_{0} {}

inline void topic_identifier::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
topic_identifier::~topic_identifier() {
  // @@protoc_insertion_point(destructor:mom.topic_identifier)
  SharedDtor(*this);
}
inline void topic_identifier::SharedDtor(MessageLite& self) {
  topic_identifier& this_ = static_cast<topic_identifier&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topic_identifier::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic_identifier(arena);
}
constexpr auto topic_identifier::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(topic_identifier),
                                            alignof(topic_identifier));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic_identifier::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_identifier_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic_identifier::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic_identifier>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic_identifier::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic_identifier>(), &topic_identifier::ByteSizeLong,
            &topic_identifier::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic_identifier, _impl_._cached_size_),
        false,
    },
    &topic_identifier::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic_identifier::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> topic_identifier::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_identifier>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_identifier, _impl_.owner_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_identifier, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(topic_identifier, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 2;
    {PROTOBUF_FIELD_OFFSET(topic_identifier, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\4\5\0\0\0\0\0"
    "mom.topic_identifier"
    "name"
    "owner"
  }},
};

PROTOBUF_NOINLINE void topic_identifier::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.topic_identifier)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic_identifier::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic_identifier& this_ = static_cast<const topic_identifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic_identifier::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic_identifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.topic_identifier)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_identifier.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner = 2;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_identifier.owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.topic_identifier)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic_identifier::ByteSizeLong(const MessageLite& base) {
          const topic_identifier& this_ = static_cast<const topic_identifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic_identifier::ByteSizeLong() const {
          const topic_identifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.topic_identifier)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string owner = 2;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic_identifier::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic_identifier*>(&to_msg);
  auto& from = static_cast<const topic_identifier&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.topic_identifier)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic_identifier::CopyFrom(const topic_identifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.topic_identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic_identifier::InternalSwap(topic_identifier* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
}

::google::protobuf::Metadata topic_identifier::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              topic_config_PropertiesEntry_DoNotUse::topic_config_PropertiesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              topic_config_PropertiesEntry_DoNotUse::topic_config_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              topic_config_PropertiesEntry_DoNotUse::topic_config_PropertiesEntry_DoNotUse() : SuperType() {}
              topic_config_PropertiesEntry_DoNotUse::topic_config_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* topic_config_PropertiesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) topic_config_PropertiesEntry_DoNotUse(arena);
              }
              constexpr auto topic_config_PropertiesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(topic_config_PropertiesEntry_DoNotUse),
                                                          alignof(topic_config_PropertiesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull topic_config_PropertiesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_topic_config_PropertiesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &topic_config_PropertiesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<topic_config_PropertiesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &topic_config_PropertiesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &topic_config_PropertiesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(topic_config_PropertiesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &topic_config_PropertiesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* topic_config_PropertiesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> topic_config_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(topic_config_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_config_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_config_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_config_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(topic_config_PropertiesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(topic_config_PropertiesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\3\5\0\0\0\0\0"
    "mom.topic_config.PropertiesEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class topic_config::_Internal {
 public:
};

topic_config::topic_config(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.topic_config)
}
inline PROTOBUF_NDEBUG_INLINE topic_config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::topic_config& from_msg)
      : properties_{visibility, arena, from.properties_},
        name_(arena, from.name_),
        owner_(arena, from.owner_),
        _cached_size_{0} {}

topic_config::topic_config(
    ::google::protobuf::Arena* arena,
    const topic_config& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic_config* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.topic_config)
}
inline PROTOBUF_NDEBUG_INLINE topic_config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : properties_{visibility, arena},
        name_(arena),
        owner_(arena),
        _cached_size_{0} {}

inline void topic_config::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
topic_config::~topic_config() {
  // @@protoc_insertion_point(destructor:mom.topic_config)
  SharedDtor(*this);
}
inline void topic_config::SharedDtor(MessageLite& self) {
  topic_config& this_ = static_cast<topic_config&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topic_config::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic_config(arena);
}
constexpr auto topic_config::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(topic_config, _impl_.properties_) +
          decltype(topic_config::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(topic_config, _impl_.properties_) +
          decltype(topic_config::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(topic_config), alignof(topic_config), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&topic_config::PlacementNew_,
                                 sizeof(topic_config),
                                 alignof(topic_config));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic_config::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_config_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic_config::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic_config>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic_config::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic_config>(), &topic_config::ByteSizeLong,
            &topic_config::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic_config, _impl_._cached_size_),
        false,
    },
    &topic_config::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic_config::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 44, 2> topic_config::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_config>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_config, _impl_.owner_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_config, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(topic_config, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 2;
    {PROTOBUF_FIELD_OFFSET(topic_config, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> properties = 3;
    {PROTOBUF_FIELD_OFFSET(topic_config, _impl_.properties_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(topic_config()._impl_.properties_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\20\4\5\12\0\0\0\0"
    "mom.topic_config"
    "name"
    "owner"
    "properties"
  }},
};

PROTOBUF_NOINLINE void topic_config::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.topic_config)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic_config::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic_config& this_ = static_cast<const topic_config&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic_config::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic_config& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.topic_config)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_config.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner = 2;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_config.owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // map<string, string> properties = 3;
          if (!this_._internal_properties().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_properties();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_config.properties");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_config.properties");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_config.properties");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_config.properties");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.topic_config)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic_config::ByteSizeLong(const MessageLite& base) {
          const topic_config& this_ = static_cast<const topic_config&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic_config::ByteSizeLong() const {
          const topic_config& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.topic_config)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> properties = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
              for (const auto& entry : this_._internal_properties()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string owner = 2;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic_config::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic_config*>(&to_msg);
  auto& from = static_cast<const topic_config&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.topic_config)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic_config::CopyFrom(const topic_config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.topic_config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic_config::InternalSwap(topic_config* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
}

::google::protobuf::Metadata topic_config::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              topic_PropertiesEntry_DoNotUse::topic_PropertiesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              topic_PropertiesEntry_DoNotUse::topic_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              topic_PropertiesEntry_DoNotUse::topic_PropertiesEntry_DoNotUse() : SuperType() {}
              topic_PropertiesEntry_DoNotUse::topic_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* topic_PropertiesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) topic_PropertiesEntry_DoNotUse(arena);
              }
              constexpr auto topic_PropertiesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(topic_PropertiesEntry_DoNotUse),
                                                          alignof(topic_PropertiesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull topic_PropertiesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_topic_PropertiesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &topic_PropertiesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<topic_PropertiesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &topic_PropertiesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &topic_PropertiesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(topic_PropertiesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &topic_PropertiesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* topic_PropertiesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> topic_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(topic_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(topic_PropertiesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(topic_PropertiesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\3\5\0\0\0\0\0"
    "mom.topic.PropertiesEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class topic::_Internal {
 public:
};

topic::topic(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.topic)
}
inline PROTOBUF_NDEBUG_INLINE topic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::topic& from_msg)
      : subscribers_{visibility, arena, from.subscribers_},
        properties_{visibility, arena, from.properties_},
        name_(arena, from.name_),
        owner_(arena, from.owner_),
        _cached_size_{0} {}

topic::topic(
    ::google::protobuf::Arena* arena,
    const topic& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, creation_timestamp_),
           offsetof(Impl_, message_count_) -
               offsetof(Impl_, creation_timestamp_) +
               sizeof(Impl_::message_count_));

  // @@protoc_insertion_point(copy_constructor:mom.topic)
}
inline PROTOBUF_NDEBUG_INLINE topic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : subscribers_{visibility, arena},
        properties_{visibility, arena},
        name_(arena),
        owner_(arena),
        _cached_size_{0} {}

inline void topic::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_timestamp_),
           0,
           offsetof(Impl_, message_count_) -
               offsetof(Impl_, creation_timestamp_) +
               sizeof(Impl_::message_count_));
}
topic::~topic() {
  // @@protoc_insertion_point(destructor:mom.topic)
  SharedDtor(*this);
}
inline void topic::SharedDtor(MessageLite& self) {
  topic& this_ = static_cast<topic&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topic::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic(arena);
}
constexpr auto topic::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(topic, _impl_.subscribers_) +
          decltype(topic::_impl_.subscribers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(topic, _impl_.properties_) +
          decltype(topic::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(topic, _impl_.properties_) +
          decltype(topic::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(topic), alignof(topic), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&topic::PlacementNew_,
                                 sizeof(topic),
                                 alignof(topic));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic>(), &topic::ByteSizeLong,
            &topic::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic, _impl_._cached_size_),
        false,
    },
    &topic::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 48, 2> topic::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.name_)}},
    // string owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.owner_)}},
    // int64 creation_timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(topic, _impl_.creation_timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.creation_timestamp_)}},
    // repeated string subscribers = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.subscribers_)}},
    // int32 message_count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(topic, _impl_.message_count_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.message_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 2;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 creation_timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.creation_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated string subscribers = 4;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.subscribers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 message_count = 5;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.message_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> properties = 6;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.properties_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(topic()._impl_.properties_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\11\4\5\0\13\0\12\0"
    "mom.topic"
    "name"
    "owner"
    "subscribers"
    "properties"
  }},
};

PROTOBUF_NOINLINE void topic::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.topic)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subscribers_.Clear();
  _impl_.properties_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  ::memset(&_impl_.creation_timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.message_count_) -
      reinterpret_cast<char*>(&_impl_.creation_timestamp_)) + sizeof(_impl_.message_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic& this_ = static_cast<const topic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.topic)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner = 2;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic.owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 creation_timestamp = 3;
          if (this_._internal_creation_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_creation_timestamp(), target);
          }

          // repeated string subscribers = 4;
          for (int i = 0, n = this_._internal_subscribers_size(); i < n; ++i) {
            const auto& s = this_._internal_subscribers().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic.subscribers");
            target = stream->WriteString(4, s, target);
          }

          // int32 message_count = 5;
          if (this_._internal_message_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_message_count(), target);
          }

          // map<string, string> properties = 6;
          if (!this_._internal_properties().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_properties();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic.properties");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic.properties");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic.properties");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic.properties");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.topic)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic::ByteSizeLong(const MessageLite& base) {
          const topic& this_ = static_cast<const topic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic::ByteSizeLong() const {
          const topic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.topic)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string subscribers = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_subscribers().size());
              for (int i = 0, n = this_._internal_subscribers().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_subscribers().Get(i));
              }
            }
            // map<string, string> properties = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
              for (const auto& entry : this_._internal_properties()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string owner = 2;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
            // int64 creation_timestamp = 3;
            if (this_._internal_creation_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_creation_timestamp());
            }
            // int32 message_count = 5;
            if (this_._internal_message_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_message_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic*>(&to_msg);
  auto& from = static_cast<const topic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.topic)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_subscribers()->MergeFrom(from._internal_subscribers());
  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (from._internal_creation_timestamp() != 0) {
    _this->_impl_.creation_timestamp_ = from._impl_.creation_timestamp_;
  }
  if (from._internal_message_count() != 0) {
    _this->_impl_.message_count_ = from._impl_.message_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic::CopyFrom(const topic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.topic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic::InternalSwap(topic* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subscribers_.InternalSwap(&other->_impl_.subscribers_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(topic, _impl_.message_count_)
      + sizeof(topic::_impl_.message_count_)
      - PROTOBUF_FIELD_OFFSET(topic, _impl_.creation_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.creation_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.creation_timestamp_));
}

::google::protobuf::Metadata topic::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              topic_message_HeadersEntry_DoNotUse::topic_message_HeadersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              topic_message_HeadersEntry_DoNotUse::topic_message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              topic_message_HeadersEntry_DoNotUse::topic_message_HeadersEntry_DoNotUse() : SuperType() {}
              topic_message_HeadersEntry_DoNotUse::topic_message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* topic_message_HeadersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) topic_message_HeadersEntry_DoNotUse(arena);
              }
              constexpr auto topic_message_HeadersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(topic_message_HeadersEntry_DoNotUse),
                                                          alignof(topic_message_HeadersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull topic_message_HeadersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_topic_message_HeadersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &topic_message_HeadersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<topic_message_HeadersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &topic_message_HeadersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &topic_message_HeadersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &topic_message_HeadersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* topic_message_HeadersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> topic_message_HeadersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_message_HeadersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\3\5\0\0\0\0\0"
    "mom.topic_message.HeadersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class topic_message::_Internal {
 public:
};

topic_message::topic_message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.topic_message)
}
inline PROTOBUF_NDEBUG_INLINE topic_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::topic_message& from_msg)
      : headers_{visibility, arena, from.headers_},
        topic_name_(arena, from.topic_name_),
        content_(arena, from.content_),
        sender_(arena, from.sender_),
        _cached_size_{0} {}

topic_message::topic_message(
    ::google::protobuf::Arena* arena,
    const topic_message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic_message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, persistent_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, persistent_),
           offsetof(Impl_, expiration_) -
               offsetof(Impl_, persistent_) +
               sizeof(Impl_::expiration_));

  // @@protoc_insertion_point(copy_constructor:mom.topic_message)
}
inline PROTOBUF_NDEBUG_INLINE topic_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : headers_{visibility, arena},
        topic_name_(arena),
        content_(arena),
        sender_(arena),
        _cached_size_{0} {}

inline void topic_message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, persistent_),
           0,
           offsetof(Impl_, expiration_) -
               offsetof(Impl_, persistent_) +
               sizeof(Impl_::expiration_));
}
topic_message::~topic_message() {
  // @@protoc_insertion_point(destructor:mom.topic_message)
  SharedDtor(*this);
}
inline void topic_message::SharedDtor(MessageLite& self) {
  topic_message& this_ = static_cast<topic_message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.topic_name_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topic_message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic_message(arena);
}
constexpr auto topic_message::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(topic_message, _impl_.headers_) +
          decltype(topic_message::_impl_.headers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(topic_message, _impl_.headers_) +
          decltype(topic_message::_impl_.headers_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(topic_message), alignof(topic_message), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&topic_message::PlacementNew_,
                                 sizeof(topic_message),
                                 alignof(topic_message));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic_message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic_message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic_message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic_message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic_message>(), &topic_message::ByteSizeLong,
            &topic_message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic_message, _impl_._cached_size_),
        false,
    },
    &topic_message::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic_message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 56, 2> topic_message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string topic_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message, _impl_.topic_name_)}},
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message, _impl_.content_)}},
    // string sender = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message, _impl_.sender_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool persistent = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(topic_message, _impl_.persistent_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message, _impl_.persistent_)}},
    // int32 priority = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(topic_message, _impl_.priority_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message, _impl_.priority_)}},
    // int64 expiration = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(topic_message, _impl_.expiration_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message, _impl_.expiration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string topic_name = 1;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.topic_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender = 3;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> headers = 4;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.headers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool persistent = 5;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.persistent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 priority = 6;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 expiration = 7;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.expiration_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(topic_message()._impl_.headers_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\21\12\7\6\7\0\0\0"
    "mom.topic_message"
    "topic_name"
    "content"
    "sender"
    "headers"
  }},
};

PROTOBUF_NOINLINE void topic_message::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.topic_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.headers_.Clear();
  _impl_.topic_name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  ::memset(&_impl_.persistent_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.expiration_) -
      reinterpret_cast<char*>(&_impl_.persistent_)) + sizeof(_impl_.expiration_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic_message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic_message& this_ = static_cast<const topic_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic_message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.topic_message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string topic_name = 1;
          if (!this_._internal_topic_name().empty()) {
            const std::string& _s = this_._internal_topic_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.topic_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string content = 2;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.content");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string sender = 3;
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.sender");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // map<string, string> headers = 4;
          if (!this_._internal_headers().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_headers();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.headers");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.headers");
              }
            }
          }

          // bool persistent = 5;
          if (this_._internal_persistent() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_persistent(), target);
          }

          // int32 priority = 6;
          if (this_._internal_priority() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_priority(), target);
          }

          // int64 expiration = 7;
          if (this_._internal_expiration() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_expiration(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.topic_message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic_message::ByteSizeLong(const MessageLite& base) {
          const topic_message& this_ = static_cast<const topic_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic_message::ByteSizeLong() const {
          const topic_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.topic_message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> headers = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_headers_size());
              for (const auto& entry : this_._internal_headers()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string topic_name = 1;
            if (!this_._internal_topic_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_topic_name());
            }
            // string content = 2;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // string sender = 3;
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
            // bool persistent = 5;
            if (this_._internal_persistent() != 0) {
              total_size += 2;
            }
            // int32 priority = 6;
            if (this_._internal_priority() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_priority());
            }
            // int64 expiration = 7;
            if (this_._internal_expiration() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_expiration());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic_message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic_message*>(&to_msg);
  auto& from = static_cast<const topic_message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.topic_message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  if (!from._internal_topic_name().empty()) {
    _this->_internal_set_topic_name(from._internal_topic_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (from._internal_persistent() != 0) {
    _this->_impl_.persistent_ = from._impl_.persistent_;
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  if (from._internal_expiration() != 0) {
    _this->_impl_.expiration_ = from._impl_.expiration_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic_message::CopyFrom(const topic_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.topic_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic_message::InternalSwap(topic_message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_name_, &other->_impl_.topic_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(topic_message, _impl_.expiration_)
      + sizeof(topic_message::_impl_.expiration_)
      - PROTOBUF_FIELD_OFFSET(topic_message, _impl_.persistent_)>(
          reinterpret_cast<char*>(&_impl_.persistent_),
          reinterpret_cast<char*>(&other->_impl_.persistent_));
}

::google::protobuf::Metadata topic_message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class topic_subscription::_Internal {
 public:
};

topic_subscription::topic_subscription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.topic_subscription)
}
inline PROTOBUF_NDEBUG_INLINE topic_subscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::topic_subscription& from_msg)
      : topic_name_(arena, from.topic_name_),
        topic_owner_(arena, from.topic_owner_),
        subscriber_queue_name_(arena, from.subscriber_queue_name_),
        subscriber_queue_owner_(arena, from.subscriber_queue_owner_),
        _cached_size_{0} {}

topic_subscription::topic_subscription(
    ::google::protobuf::Arena* arena,
    const topic_subscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic_subscription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.durable_ = from._impl_.durable_;

  // @@protoc_insertion_point(copy_constructor:mom.topic_subscription)
}
inline PROTOBUF_NDEBUG_INLINE topic_subscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : topic_name_(arena),
        topic_owner_(arena),
        subscriber_queue_name_(arena),
        subscriber_queue_owner_(arena),
        _cached_size_{0} {}

inline void topic_subscription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.durable_ = {};
}
topic_subscription::~topic_subscription() {
  // @@protoc_insertion_point(destructor:mom.topic_subscription)
  SharedDtor(*this);
}
inline void topic_subscription::SharedDtor(MessageLite& self) {
  topic_subscription& this_ = static_cast<topic_subscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.topic_name_.Destroy();
  this_._impl_.topic_owner_.Destroy();
  this_._impl_.subscriber_queue_name_.Destroy();
  this_._impl_.subscriber_queue_owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topic_subscription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic_subscription(arena);
}
constexpr auto topic_subscription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(topic_subscription),
                                            alignof(topic_subscription));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic_subscription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_subscription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic_subscription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic_subscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic_subscription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic_subscription>(), &topic_subscription::ByteSizeLong,
            &topic_subscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_._cached_size_),
        false,
    },
    &topic_subscription::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic_subscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 95, 2> topic_subscription::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_subscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string topic_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.topic_name_)}},
    // string topic_owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.topic_owner_)}},
    // string subscriber_queue_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.subscriber_queue_name_)}},
    // string subscriber_queue_owner = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.subscriber_queue_owner_)}},
    // bool durable = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(topic_subscription, _impl_.durable_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.durable_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string topic_name = 1;
    {PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.topic_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string topic_owner = 2;
    {PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.topic_owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscriber_queue_name = 3;
    {PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.subscriber_queue_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscriber_queue_owner = 4;
    {PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.subscriber_queue_owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool durable = 5;
    {PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.durable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\26\12\13\25\26\0\0\0"
    "mom.topic_subscription"
    "topic_name"
    "topic_owner"
    "subscriber_queue_name"
    "subscriber_queue_owner"
  }},
};

PROTOBUF_NOINLINE void topic_subscription::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.topic_subscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topic_name_.ClearToEmpty();
  _impl_.topic_owner_.ClearToEmpty();
  _impl_.subscriber_queue_name_.ClearToEmpty();
  _impl_.subscriber_queue_owner_.ClearToEmpty();
  _impl_.durable_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic_subscription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic_subscription& this_ = static_cast<const topic_subscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic_subscription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic_subscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.topic_subscription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string topic_name = 1;
          if (!this_._internal_topic_name().empty()) {
            const std::string& _s = this_._internal_topic_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_subscription.topic_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string topic_owner = 2;
          if (!this_._internal_topic_owner().empty()) {
            const std::string& _s = this_._internal_topic_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_subscription.topic_owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string subscriber_queue_name = 3;
          if (!this_._internal_subscriber_queue_name().empty()) {
            const std::string& _s = this_._internal_subscriber_queue_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_subscription.subscriber_queue_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string subscriber_queue_owner = 4;
          if (!this_._internal_subscriber_queue_owner().empty()) {
            const std::string& _s = this_._internal_subscriber_queue_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_subscription.subscriber_queue_owner");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bool durable = 5;
          if (this_._internal_durable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_durable(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.topic_subscription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic_subscription::ByteSizeLong(const MessageLite& base) {
          const topic_subscription& this_ = static_cast<const topic_subscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic_subscription::ByteSizeLong() const {
          const topic_subscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.topic_subscription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string topic_name = 1;
            if (!this_._internal_topic_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_topic_name());
            }
            // string topic_owner = 2;
            if (!this_._internal_topic_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_topic_owner());
            }
            // string subscriber_queue_name = 3;
            if (!this_._internal_subscriber_queue_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscriber_queue_name());
            }
            // string subscriber_queue_owner = 4;
            if (!this_._internal_subscriber_queue_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscriber_queue_owner());
            }
            // bool durable = 5;
            if (this_._internal_durable() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic_subscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic_subscription*>(&to_msg);
  auto& from = static_cast<const topic_subscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.topic_subscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_topic_name().empty()) {
    _this->_internal_set_topic_name(from._internal_topic_name());
  }
  if (!from._internal_topic_owner().empty()) {
    _this->_internal_set_topic_owner(from._internal_topic_owner());
  }
  if (!from._internal_subscriber_queue_name().empty()) {
    _this->_internal_set_subscriber_queue_name(from._internal_subscriber_queue_name());
  }
  if (!from._internal_subscriber_queue_owner().empty()) {
    _this->_internal_set_subscriber_queue_owner(from._internal_subscriber_queue_owner());
  }
  if (from._internal_durable() != 0) {
    _this->_impl_.durable_ = from._impl_.durable_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic_subscription::CopyFrom(const topic_subscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.topic_subscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic_subscription::InternalSwap(topic_subscription* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_name_, &other->_impl_.topic_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_owner_, &other->_impl_.topic_owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_queue_name_, &other->_impl_.subscriber_queue_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_queue_owner_, &other->_impl_.subscriber_queue_owner_, arena);
        swap(_impl_.durable_, other->_impl_.durable_);
}

::google::protobuf::Metadata topic_subscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class topics_response::_Internal {
 public:
};

topics_response::topics_response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.topics_response)
}
inline PROTOBUF_NDEBUG_INLINE topics_response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::topics_response& from_msg)
      : topics_{visibility, arena, from.topics_},
        message_(arena, from.message_),
        _cached_size_{0} {}

topics_response::topics_response(
    ::google::protobuf::Arena* arena,
    const topics_response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topics_response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:mom.topics_response)
}
inline PROTOBUF_NDEBUG_INLINE topics_response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : topics_{visibility, arena},
        message_(arena),
        _cached_size_{0} {}

inline void topics_response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
topics_response::~topics_response() {
  // @@protoc_insertion_point(destructor:mom.topics_response)
  SharedDtor(*this);
}
inline void topics_response::SharedDtor(MessageLite& self) {
  topics_response& this_ = static_cast<topics_response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topics_response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topics_response(arena);
}
constexpr auto topics_response::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(topics_response, _impl_.topics_) +
          decltype(topics_response::_impl_.topics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(topics_response), alignof(topics_response), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&topics_response::PlacementNew_,
                                 sizeof(topics_response),
                                 alignof(topics_response));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topics_response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topics_response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topics_response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topics_response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topics_response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topics_response>(), &topics_response::ByteSizeLong,
            &topics_response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topics_response, _impl_._cached_size_),
        false,
    },
    &topics_response::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topics_response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 35, 2> topics_response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topics_response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(topics_response, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(topics_response, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topics_response, _impl_.message_)}},
    // repeated .mom.topic topics = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(topics_response, _impl_.topics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(topics_response, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(topics_response, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .mom.topic topics = 3;
    {PROTOBUF_FIELD_OFFSET(topics_response, _impl_.topics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::topic>()},
  }}, {{
    "\23\0\7\0\0\0\0\0"
    "mom.topics_response"
    "message"
  }},
};

PROTOBUF_NOINLINE void topics_response::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.topics_response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topics_.Clear();
  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topics_response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topics_response& this_ = static_cast<const topics_response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topics_response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topics_response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.topics_response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topics_response.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .mom.topic topics = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_topics_size());
               i < n; i++) {
            const auto& repfield = this_._internal_topics().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.topics_response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topics_response::ByteSizeLong(const MessageLite& base) {
          const topics_response& this_ = static_cast<const topics_response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topics_response::ByteSizeLong() const {
          const topics_response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.topics_response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom.topic topics = 3;
            {
              total_size += 1UL * this_._internal_topics_size();
              for (const auto& msg : this_._internal_topics()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topics_response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topics_response*>(&to_msg);
  auto& from = static_cast<const topics_response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.topics_response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_topics()->MergeFrom(
      from._internal_topics());
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topics_response::CopyFrom(const topics_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.topics_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topics_response::InternalSwap(topics_response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.topics_.InternalSwap(&other->_impl_.topics_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata topics_response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeID::_Internal {
 public:
};

NodeID::NodeID(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.NodeID)
}
inline PROTOBUF_NDEBUG_INLINE NodeID::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::NodeID& from_msg)
      : node_id_(arena, from.node_id_),
        _cached_size_{0} {}

NodeID::NodeID(
    ::google::protobuf::Arena* arena,
    const NodeID& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeID* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.NodeID)
}
inline PROTOBUF_NDEBUG_INLINE NodeID::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_id_(arena),
        _cached_size_{0} {}

inline void NodeID::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeID::~NodeID() {
  // @@protoc_insertion_point(destructor:mom.NodeID)
  SharedDtor(*this);
}
inline void NodeID::SharedDtor(MessageLite& self) {
  NodeID& this_ = static_cast<NodeID&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NodeID::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeID(arena);
}
constexpr auto NodeID::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NodeID),
                                            alignof(NodeID));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeID::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeID_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeID::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeID>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeID::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeID>(), &NodeID::ByteSizeLong,
            &NodeID::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeID, _impl_._cached_size_),
        false,
    },
    &NodeID::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeID::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 26, 2> NodeID::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::NodeID>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string node_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeID, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeID, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\7\0\0\0\0\0\0"
    "mom.NodeID"
    "node_id"
  }},
};

PROTOBUF_NOINLINE void NodeID::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.NodeID)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeID::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeID& this_ = static_cast<const NodeID&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeID::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeID& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.NodeID)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node_id = 1;
          if (!this_._internal_node_id().empty()) {
            const std::string& _s = this_._internal_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.NodeID.node_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.NodeID)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeID::ByteSizeLong(const MessageLite& base) {
          const NodeID& this_ = static_cast<const NodeID&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeID::ByteSizeLong() const {
          const NodeID& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.NodeID)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string node_id = 1;
            if (!this_._internal_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeID::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeID*>(&to_msg);
  auto& from = static_cast<const NodeID&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.NodeID)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeID::CopyFrom(const NodeID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.NodeID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeID::InternalSwap(NodeID* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
}

::google::protobuf::Metadata NodeID::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              node_info_CapabilitiesEntry_DoNotUse::node_info_CapabilitiesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              node_info_CapabilitiesEntry_DoNotUse::node_info_CapabilitiesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              node_info_CapabilitiesEntry_DoNotUse::node_info_CapabilitiesEntry_DoNotUse() : SuperType() {}
              node_info_CapabilitiesEntry_DoNotUse::node_info_CapabilitiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* node_info_CapabilitiesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) node_info_CapabilitiesEntry_DoNotUse(arena);
              }
              constexpr auto node_info_CapabilitiesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(node_info_CapabilitiesEntry_DoNotUse),
                                                          alignof(node_info_CapabilitiesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull node_info_CapabilitiesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_node_info_CapabilitiesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &node_info_CapabilitiesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<node_info_CapabilitiesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &node_info_CapabilitiesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &node_info_CapabilitiesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(node_info_CapabilitiesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &node_info_CapabilitiesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* node_info_CapabilitiesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> node_info_CapabilitiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(node_info_CapabilitiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::node_info_CapabilitiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(node_info_CapabilitiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(node_info_CapabilitiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(node_info_CapabilitiesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(node_info_CapabilitiesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\3\5\0\0\0\0\0"
    "mom.node_info.CapabilitiesEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class node_info::_Internal {
 public:
};

node_info::node_info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.node_info)
}
inline PROTOBUF_NDEBUG_INLINE node_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::node_info& from_msg)
      : capabilities_{visibility, arena, from.capabilities_},
        node_id_(arena, from.node_id_),
        host_(arena, from.host_),
        _cached_size_{0} {}

node_info::node_info(
    ::google::protobuf::Arena* arena,
    const node_info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  node_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, start_timestamp_),
           offsetof(Impl_, port_) -
               offsetof(Impl_, start_timestamp_) +
               sizeof(Impl_::port_));

  // @@protoc_insertion_point(copy_constructor:mom.node_info)
}
inline PROTOBUF_NDEBUG_INLINE node_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : capabilities_{visibility, arena},
        node_id_(arena),
        host_(arena),
        _cached_size_{0} {}

inline void node_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_timestamp_),
           0,
           offsetof(Impl_, port_) -
               offsetof(Impl_, start_timestamp_) +
               sizeof(Impl_::port_));
}
node_info::~node_info() {
  // @@protoc_insertion_point(destructor:mom.node_info)
  SharedDtor(*this);
}
inline void node_info::SharedDtor(MessageLite& self) {
  node_info& this_ = static_cast<node_info&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_id_.Destroy();
  this_._impl_.host_.Destroy();
  this_._impl_.~Impl_();
}

inline void* node_info::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) node_info(arena);
}
constexpr auto node_info::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(node_info, _impl_.capabilities_) +
          decltype(node_info::_impl_.capabilities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(node_info, _impl_.capabilities_) +
          decltype(node_info::_impl_.capabilities_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(node_info), alignof(node_info), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&node_info::PlacementNew_,
                                 sizeof(node_info),
                                 alignof(node_info));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull node_info::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_node_info_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &node_info::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<node_info>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &node_info::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<node_info>(), &node_info::ByteSizeLong,
            &node_info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(node_info, _impl_._cached_size_),
        false,
    },
    &node_info::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* node_info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 45, 2> node_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::node_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string node_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(node_info, _impl_.node_id_)}},
    // string host = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(node_info, _impl_.host_)}},
    // int32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(node_info, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(node_info, _impl_.port_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 start_timestamp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(node_info, _impl_.start_timestamp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(node_info, _impl_.start_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string node_id = 1;
    {PROTOBUF_FIELD_OFFSET(node_info, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string host = 2;
    {PROTOBUF_FIELD_OFFSET(node_info, _impl_.host_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 3;
    {PROTOBUF_FIELD_OFFSET(node_info, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> capabilities = 4;
    {PROTOBUF_FIELD_OFFSET(node_info, _impl_.capabilities_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int64 start_timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(node_info, _impl_.start_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(node_info()._impl_.capabilities_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\15\7\4\0\14\0\0\0"
    "mom.node_info"
    "node_id"
    "host"
    "capabilities"
  }},
};

PROTOBUF_NOINLINE void node_info::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.node_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capabilities_.Clear();
  _impl_.node_id_.ClearToEmpty();
  _impl_.host_.ClearToEmpty();
  ::memset(&_impl_.start_timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.port_) -
      reinterpret_cast<char*>(&_impl_.start_timestamp_)) + sizeof(_impl_.port_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* node_info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const node_info& this_ = static_cast<const node_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* node_info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const node_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.node_info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node_id = 1;
          if (!this_._internal_node_id().empty()) {
            const std::string& _s = this_._internal_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_info.node_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string host = 2;
          if (!this_._internal_host().empty()) {
            const std::string& _s = this_._internal_host();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_info.host");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 port = 3;
          if (this_._internal_port() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_port(), target);
          }

          // map<string, string> capabilities = 4;
          if (!this_._internal_capabilities().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_capabilities();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_info.capabilities");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_info.capabilities");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_info.capabilities");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_info.capabilities");
              }
            }
          }

          // int64 start_timestamp = 5;
          if (this_._internal_start_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_start_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.node_info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t node_info::ByteSizeLong(const MessageLite& base) {
          const node_info& this_ = static_cast<const node_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t node_info::ByteSizeLong() const {
          const node_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.node_info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> capabilities = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_capabilities_size());
              for (const auto& entry : this_._internal_capabilities()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string node_id = 1;
            if (!this_._internal_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_id());
            }
            // string host = 2;
            if (!this_._internal_host().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_host());
            }
            // int64 start_timestamp = 5;
            if (this_._internal_start_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_start_timestamp());
            }
            // int32 port = 3;
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_port());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void node_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<node_info*>(&to_msg);
  auto& from = static_cast<const node_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.node_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.capabilities_.MergeFrom(from._impl_.capabilities_);
  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  if (!from._internal_host().empty()) {
    _this->_internal_set_host(from._internal_host());
  }
  if (from._internal_start_timestamp() != 0) {
    _this->_impl_.start_timestamp_ = from._impl_.start_timestamp_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void node_info::CopyFrom(const node_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.node_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void node_info::InternalSwap(node_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.capabilities_.InternalSwap(&other->_impl_.capabilities_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_, &other->_impl_.host_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(node_info, _impl_.port_)
      + sizeof(node_info::_impl_.port_)
      - PROTOBUF_FIELD_OFFSET(node_info, _impl_.start_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.start_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.start_timestamp_));
}

::google::protobuf::Metadata node_info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeAssignment::_Internal {
 public:
};

NodeAssignment::NodeAssignment(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.NodeAssignment)
}
inline PROTOBUF_NDEBUG_INLINE NodeAssignment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::NodeAssignment& from_msg)
      : replica_nodes_{visibility, arena, from.replica_nodes_},
        primary_node_(arena, from.primary_node_),
        _cached_size_{0} {}

NodeAssignment::NodeAssignment(
    ::google::protobuf::Arena* arena,
    const NodeAssignment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeAssignment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.partition_count_ = from._impl_.partition_count_;

  // @@protoc_insertion_point(copy_constructor:mom.NodeAssignment)
}
inline PROTOBUF_NDEBUG_INLINE NodeAssignment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : replica_nodes_{visibility, arena},
        primary_node_(arena),
        _cached_size_{0} {}

inline void NodeAssignment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.partition_count_ = {};
}
NodeAssignment::~NodeAssignment() {
  // @@protoc_insertion_point(destructor:mom.NodeAssignment)
  SharedDtor(*this);
}
inline void NodeAssignment::SharedDtor(MessageLite& self) {
  NodeAssignment& this_ = static_cast<NodeAssignment&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.primary_node_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NodeAssignment::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeAssignment(arena);
}
constexpr auto NodeAssignment::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeAssignment, _impl_.replica_nodes_) +
          decltype(NodeAssignment::_impl_.replica_nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NodeAssignment), alignof(NodeAssignment), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeAssignment::PlacementNew_,
                                 sizeof(NodeAssignment),
                                 alignof(NodeAssignment));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeAssignment::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeAssignment_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeAssignment::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeAssignment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeAssignment::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeAssignment>(), &NodeAssignment::ByteSizeLong,
            &NodeAssignment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeAssignment, _impl_._cached_size_),
        false,
    },
    &NodeAssignment::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeAssignment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 52, 2> NodeAssignment::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::NodeAssignment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string primary_node = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeAssignment, _impl_.primary_node_)}},
    // repeated string replica_nodes = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeAssignment, _impl_.replica_nodes_)}},
    // int32 partition_count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeAssignment, _impl_.partition_count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NodeAssignment, _impl_.partition_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string primary_node = 1;
    {PROTOBUF_FIELD_OFFSET(NodeAssignment, _impl_.primary_node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string replica_nodes = 2;
    {PROTOBUF_FIELD_OFFSET(NodeAssignment, _impl_.replica_nodes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 partition_count = 3;
    {PROTOBUF_FIELD_OFFSET(NodeAssignment, _impl_.partition_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\22\14\15\0\0\0\0\0"
    "mom.NodeAssignment"
    "primary_node"
    "replica_nodes"
  }},
};

PROTOBUF_NOINLINE void NodeAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.NodeAssignment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.replica_nodes_.Clear();
  _impl_.primary_node_.ClearToEmpty();
  _impl_.partition_count_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeAssignment::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeAssignment& this_ = static_cast<const NodeAssignment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeAssignment::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeAssignment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.NodeAssignment)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string primary_node = 1;
          if (!this_._internal_primary_node().empty()) {
            const std::string& _s = this_._internal_primary_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.NodeAssignment.primary_node");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string replica_nodes = 2;
          for (int i = 0, n = this_._internal_replica_nodes_size(); i < n; ++i) {
            const auto& s = this_._internal_replica_nodes().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.NodeAssignment.replica_nodes");
            target = stream->WriteString(2, s, target);
          }

          // int32 partition_count = 3;
          if (this_._internal_partition_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_partition_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.NodeAssignment)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeAssignment::ByteSizeLong(const MessageLite& base) {
          const NodeAssignment& this_ = static_cast<const NodeAssignment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeAssignment::ByteSizeLong() const {
          const NodeAssignment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.NodeAssignment)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string replica_nodes = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_replica_nodes().size());
              for (int i = 0, n = this_._internal_replica_nodes().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_replica_nodes().Get(i));
              }
            }
          }
           {
            // string primary_node = 1;
            if (!this_._internal_primary_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_primary_node());
            }
            // int32 partition_count = 3;
            if (this_._internal_partition_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_partition_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeAssignment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeAssignment*>(&to_msg);
  auto& from = static_cast<const NodeAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.NodeAssignment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_replica_nodes()->MergeFrom(from._internal_replica_nodes());
  if (!from._internal_primary_node().empty()) {
    _this->_internal_set_primary_node(from._internal_primary_node());
  }
  if (from._internal_partition_count() != 0) {
    _this->_impl_.partition_count_ = from._impl_.partition_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeAssignment::CopyFrom(const NodeAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.NodeAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeAssignment::InternalSwap(NodeAssignment* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.replica_nodes_.InternalSwap(&other->_impl_.replica_nodes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.primary_node_, &other->_impl_.primary_node_, arena);
        swap(_impl_.partition_count_, other->_impl_.partition_count_);
}

::google::protobuf::Metadata NodeAssignment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              cluster_state_TopicAssignmentsEntry_DoNotUse::cluster_state_TopicAssignmentsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              cluster_state_TopicAssignmentsEntry_DoNotUse::cluster_state_TopicAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              cluster_state_TopicAssignmentsEntry_DoNotUse::cluster_state_TopicAssignmentsEntry_DoNotUse() : SuperType() {}
              cluster_state_TopicAssignmentsEntry_DoNotUse::cluster_state_TopicAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* cluster_state_TopicAssignmentsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) cluster_state_TopicAssignmentsEntry_DoNotUse(arena);
              }
              constexpr auto cluster_state_TopicAssignmentsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(cluster_state_TopicAssignmentsEntry_DoNotUse),
                                                          alignof(cluster_state_TopicAssignmentsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull cluster_state_TopicAssignmentsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_cluster_state_TopicAssignmentsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &cluster_state_TopicAssignmentsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<cluster_state_TopicAssignmentsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &cluster_state_TopicAssignmentsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &cluster_state_TopicAssignmentsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &cluster_state_TopicAssignmentsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* cluster_state_TopicAssignmentsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2> cluster_state_TopicAssignmentsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_state_TopicAssignmentsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mom.NodeAssignment value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mom.NodeAssignment value = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::NodeAssignment>()},
  }}, {{
    "\47\3\0\0\0\0\0\0"
    "mom.cluster_state.TopicAssignmentsEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              cluster_state_QueueAssignmentsEntry_DoNotUse::cluster_state_QueueAssignmentsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              cluster_state_QueueAssignmentsEntry_DoNotUse::cluster_state_QueueAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              cluster_state_QueueAssignmentsEntry_DoNotUse::cluster_state_QueueAssignmentsEntry_DoNotUse() : SuperType() {}
              cluster_state_QueueAssignmentsEntry_DoNotUse::cluster_state_QueueAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* cluster_state_QueueAssignmentsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) cluster_state_QueueAssignmentsEntry_DoNotUse(arena);
              }
              constexpr auto cluster_state_QueueAssignmentsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(cluster_state_QueueAssignmentsEntry_DoNotUse),
                                                          alignof(cluster_state_QueueAssignmentsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull cluster_state_QueueAssignmentsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_cluster_state_QueueAssignmentsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &cluster_state_QueueAssignmentsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<cluster_state_QueueAssignmentsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &cluster_state_QueueAssignmentsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &cluster_state_QueueAssignmentsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &cluster_state_QueueAssignmentsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* cluster_state_QueueAssignmentsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2> cluster_state_QueueAssignmentsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_state_QueueAssignmentsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mom.NodeAssignment value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mom.NodeAssignment value = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::NodeAssignment>()},
  }}, {{
    "\47\3\0\0\0\0\0\0"
    "mom.cluster_state.QueueAssignmentsEntry"
    "key"
  }},
};

// ===================================================================

class cluster_state::_Internal {
 public:
};

cluster_state::cluster_state(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.cluster_state)
}
inline PROTOBUF_NDEBUG_INLINE cluster_state::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::cluster_state& from_msg)
      : nodes_{visibility, arena, from.nodes_},
        topic_assignments_{visibility, arena, from.topic_assignments_},
        queue_assignments_{visibility, arena, from.queue_assignments_},
        leader_id_(arena, from.leader_id_),
        _cached_size_{0} {}

cluster_state::cluster_state(
    ::google::protobuf::Arena* arena,
    const cluster_state& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  cluster_state* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.state_timestamp_ = from._impl_.state_timestamp_;

  // @@protoc_insertion_point(copy_constructor:mom.cluster_state)
}
inline PROTOBUF_NDEBUG_INLINE cluster_state::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nodes_{visibility, arena},
        topic_assignments_{visibility, arena},
        queue_assignments_{visibility, arena},
        leader_id_(arena),
        _cached_size_{0} {}

inline void cluster_state::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.state_timestamp_ = {};
}
cluster_state::~cluster_state() {
  // @@protoc_insertion_point(destructor:mom.cluster_state)
  SharedDtor(*this);
}
inline void cluster_state::SharedDtor(MessageLite& self) {
  cluster_state& this_ = static_cast<cluster_state&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.leader_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* cluster_state::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) cluster_state(arena);
}
constexpr auto cluster_state::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.nodes_) +
          decltype(cluster_state::_impl_.nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.topic_assignments_) +
          decltype(cluster_state::_impl_.topic_assignments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.topic_assignments_) +
          decltype(cluster_state::_impl_.topic_assignments_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.queue_assignments_) +
          decltype(cluster_state::_impl_.queue_assignments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.queue_assignments_) +
          decltype(cluster_state::_impl_.queue_assignments_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(cluster_state), alignof(cluster_state), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&cluster_state::PlacementNew_,
                                 sizeof(cluster_state),
                                 alignof(cluster_state));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull cluster_state::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_cluster_state_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &cluster_state::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<cluster_state>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &cluster_state::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<cluster_state>(), &cluster_state::ByteSizeLong,
            &cluster_state::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(cluster_state, _impl_._cached_size_),
        false,
    },
    &cluster_state::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* cluster_state::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 69, 2> cluster_state::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_state>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string leader_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.leader_id_)}},
    // repeated .mom.node_info nodes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.nodes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 state_timestamp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(cluster_state, _impl_.state_timestamp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.state_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string leader_id = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.leader_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .mom.node_info nodes = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.nodes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .mom.NodeAssignment> topic_assignments = 3;
    {PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.topic_assignments_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .mom.NodeAssignment> queue_assignments = 4;
    {PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.queue_assignments_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int64 state_timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.state_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::node_info>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(cluster_state()._impl_.topic_assignments_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::mom::NodeAssignment>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(cluster_state()._impl_.queue_assignments_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::mom::NodeAssignment>()},
  }}, {{
    "\21\11\0\21\21\0\0\0"
    "mom.cluster_state"
    "leader_id"
    "topic_assignments"
    "queue_assignments"
  }},
};

PROTOBUF_NOINLINE void cluster_state::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.cluster_state)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.topic_assignments_.Clear();
  _impl_.queue_assignments_.Clear();
  _impl_.leader_id_.ClearToEmpty();
  _impl_.state_timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* cluster_state::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const cluster_state& this_ = static_cast<const cluster_state&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* cluster_state::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const cluster_state& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.cluster_state)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string leader_id = 1;
          if (!this_._internal_leader_id().empty()) {
            const std::string& _s = this_._internal_leader_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_state.leader_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .mom.node_info nodes = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_nodes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_nodes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .mom.NodeAssignment> topic_assignments = 3;
          if (!this_._internal_topic_assignments().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::mom::NodeAssignment>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::mom::NodeAssignment,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_topic_assignments();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_state.topic_assignments");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_state.topic_assignments");
              }
            }
          }

          // map<string, .mom.NodeAssignment> queue_assignments = 4;
          if (!this_._internal_queue_assignments().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::mom::NodeAssignment>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::mom::NodeAssignment,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_queue_assignments();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_state.queue_assignments");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_state.queue_assignments");
              }
            }
          }

          // int64 state_timestamp = 5;
          if (this_._internal_state_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_state_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.cluster_state)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t cluster_state::ByteSizeLong(const MessageLite& base) {
          const cluster_state& this_ = static_cast<const cluster_state&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t cluster_state::ByteSizeLong() const {
          const cluster_state& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.cluster_state)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom.node_info nodes = 2;
            {
              total_size += 1UL * this_._internal_nodes_size();
              for (const auto& msg : this_._internal_nodes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .mom.NodeAssignment> topic_assignments = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_topic_assignments_size());
              for (const auto& entry : this_._internal_topic_assignments()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::mom::NodeAssignment,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, .mom.NodeAssignment> queue_assignments = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_queue_assignments_size());
              for (const auto& entry : this_._internal_queue_assignments()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::mom::NodeAssignment,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string leader_id = 1;
            if (!this_._internal_leader_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_leader_id());
            }
            // int64 state_timestamp = 5;
            if (this_._internal_state_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_state_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void cluster_state::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<cluster_state*>(&to_msg);
  auto& from = static_cast<const cluster_state&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.cluster_state)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nodes()->MergeFrom(
      from._internal_nodes());
  _this->_impl_.topic_assignments_.MergeFrom(from._impl_.topic_assignments_);
  _this->_impl_.queue_assignments_.MergeFrom(from._impl_.queue_assignments_);
  if (!from._internal_leader_id().empty()) {
    _this->_internal_set_leader_id(from._internal_leader_id());
  }
  if (from._internal_state_timestamp() != 0) {
    _this->_impl_.state_timestamp_ = from._impl_.state_timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void cluster_state::CopyFrom(const cluster_state& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.cluster_state)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void cluster_state::InternalSwap(cluster_state* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  _impl_.topic_assignments_.InternalSwap(&other->_impl_.topic_assignments_);
  _impl_.queue_assignments_.InternalSwap(&other->_impl_.queue_assignments_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leader_id_, &other->_impl_.leader_id_, arena);
        swap(_impl_.state_timestamp_, other->_impl_.state_timestamp_);
}

::google::protobuf::Metadata cluster_state::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              cluster_info_TopicAssignmentsEntry_DoNotUse::cluster_info_TopicAssignmentsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              cluster_info_TopicAssignmentsEntry_DoNotUse::cluster_info_TopicAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              cluster_info_TopicAssignmentsEntry_DoNotUse::cluster_info_TopicAssignmentsEntry_DoNotUse() : SuperType() {}
              cluster_info_TopicAssignmentsEntry_DoNotUse::cluster_info_TopicAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* cluster_info_TopicAssignmentsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) cluster_info_TopicAssignmentsEntry_DoNotUse(arena);
              }
              constexpr auto cluster_info_TopicAssignmentsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(cluster_info_TopicAssignmentsEntry_DoNotUse),
                                                          alignof(cluster_info_TopicAssignmentsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull cluster_info_TopicAssignmentsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_cluster_info_TopicAssignmentsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &cluster_info_TopicAssignmentsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<cluster_info_TopicAssignmentsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &cluster_info_TopicAssignmentsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &cluster_info_TopicAssignmentsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &cluster_info_TopicAssignmentsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* cluster_info_TopicAssignmentsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> cluster_info_TopicAssignmentsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_info_TopicAssignmentsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mom.NodeAssignment value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mom.NodeAssignment value = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::NodeAssignment>()},
  }}, {{
    "\46\3\0\0\0\0\0\0"
    "mom.cluster_info.TopicAssignmentsEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              cluster_info_QueueAssignmentsEntry_DoNotUse::cluster_info_QueueAssignmentsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              cluster_info_QueueAssignmentsEntry_DoNotUse::cluster_info_QueueAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              cluster_info_QueueAssignmentsEntry_DoNotUse::cluster_info_QueueAssignmentsEntry_DoNotUse() : SuperType() {}
              cluster_info_QueueAssignmentsEntry_DoNotUse::cluster_info_QueueAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* cluster_info_QueueAssignmentsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) cluster_info_QueueAssignmentsEntry_DoNotUse(arena);
              }
              constexpr auto cluster_info_QueueAssignmentsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(cluster_info_QueueAssignmentsEntry_DoNotUse),
                                                          alignof(cluster_info_QueueAssignmentsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull cluster_info_QueueAssignmentsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_cluster_info_QueueAssignmentsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &cluster_info_QueueAssignmentsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<cluster_info_QueueAssignmentsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &cluster_info_QueueAssignmentsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &cluster_info_QueueAssignmentsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &cluster_info_QueueAssignmentsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* cluster_info_QueueAssignmentsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> cluster_info_QueueAssignmentsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_info_QueueAssignmentsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mom.NodeAssignment value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mom.NodeAssignment value = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::NodeAssignment>()},
  }}, {{
    "\46\3\0\0\0\0\0\0"
    "mom.cluster_info.QueueAssignmentsEntry"
    "key"
  }},
};

// ===================================================================

class cluster_info::_Internal {
 public:
};

cluster_info::cluster_info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.cluster_info)
}
inline PROTOBUF_NDEBUG_INLINE cluster_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::cluster_info& from_msg)
      : nodes_{visibility, arena, from.nodes_},
        topic_assignments_{visibility, arena, from.topic_assignments_},
        queue_assignments_{visibility, arena, from.queue_assignments_},
        message_(arena, from.message_),
        leader_id_(arena, from.leader_id_),
        _cached_size_{0} {}

cluster_info::cluster_info(
    ::google::protobuf::Arena* arena,
    const cluster_info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  cluster_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:mom.cluster_info)
}
inline PROTOBUF_NDEBUG_INLINE cluster_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nodes_{visibility, arena},
        topic_assignments_{visibility, arena},
        queue_assignments_{visibility, arena},
        message_(arena),
        leader_id_(arena),
        _cached_size_{0} {}

inline void cluster_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
cluster_info::~cluster_info() {
  // @@protoc_insertion_point(destructor:mom.cluster_info)
  SharedDtor(*this);
}
inline void cluster_info::SharedDtor(MessageLite& self) {
  cluster_info& this_ = static_cast<cluster_info&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.leader_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* cluster_info::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) cluster_info(arena);
}
constexpr auto cluster_info::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.nodes_) +
          decltype(cluster_info::_impl_.nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.topic_assignments_) +
          decltype(cluster_info::_impl_.topic_assignments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.topic_assignments_) +
          decltype(cluster_info::_impl_.topic_assignments_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.queue_assignments_) +
          decltype(cluster_info::_impl_.queue_assignments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.queue_assignments_) +
          decltype(cluster_info::_impl_.queue_assignments_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(cluster_info), alignof(cluster_info), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&cluster_info::PlacementNew_,
                                 sizeof(cluster_info),
                                 alignof(cluster_info));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull cluster_info::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_cluster_info_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &cluster_info::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<cluster_info>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &cluster_info::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<cluster_info>(), &cluster_info::ByteSizeLong,
            &cluster_info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(cluster_info, _impl_._cached_size_),
        false,
    },
    &cluster_info::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* cluster_info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 5, 75, 2> cluster_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .mom.node_info nodes = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.nodes_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(cluster_info, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.message_)}},
    // string leader_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.leader_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string leader_id = 3;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.leader_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .mom.node_info nodes = 4;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.nodes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .mom.NodeAssignment> topic_assignments = 5;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.topic_assignments_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .mom.NodeAssignment> queue_assignments = 6;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.queue_assignments_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::node_info>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(cluster_info()._impl_.topic_assignments_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::mom::NodeAssignment>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(cluster_info()._impl_.queue_assignments_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::mom::NodeAssignment>()},
  }}, {{
    "\20\0\7\11\0\21\21\0"
    "mom.cluster_info"
    "message"
    "leader_id"
    "topic_assignments"
    "queue_assignments"
  }},
};

PROTOBUF_NOINLINE void cluster_info::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.cluster_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.topic_assignments_.Clear();
  _impl_.queue_assignments_.Clear();
  _impl_.message_.ClearToEmpty();
  _impl_.leader_id_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* cluster_info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const cluster_info& this_ = static_cast<const cluster_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* cluster_info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const cluster_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.cluster_info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string leader_id = 3;
          if (!this_._internal_leader_id().empty()) {
            const std::string& _s = this_._internal_leader_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.leader_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .mom.node_info nodes = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_nodes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_nodes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .mom.NodeAssignment> topic_assignments = 5;
          if (!this_._internal_topic_assignments().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::mom::NodeAssignment>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::mom::NodeAssignment,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_topic_assignments();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.topic_assignments");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.topic_assignments");
              }
            }
          }

          // map<string, .mom.NodeAssignment> queue_assignments = 6;
          if (!this_._internal_queue_assignments().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::mom::NodeAssignment>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::mom::NodeAssignment,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_queue_assignments();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.queue_assignments");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.queue_assignments");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.cluster_info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t cluster_info::ByteSizeLong(const MessageLite& base) {
          const cluster_info& this_ = static_cast<const cluster_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t cluster_info::ByteSizeLong() const {
          const cluster_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.cluster_info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom.node_info nodes = 4;
            {
              total_size += 1UL * this_._internal_nodes_size();
              for (const auto& msg : this_._internal_nodes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .mom.NodeAssignment> topic_assignments = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_topic_assignments_size());
              for (const auto& entry : this_._internal_topic_assignments()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::mom::NodeAssignment,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, .mom.NodeAssignment> queue_assignments = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_queue_assignments_size());
              for (const auto& entry : this_._internal_queue_assignments()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::mom::NodeAssignment,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string leader_id = 3;
            if (!this_._internal_leader_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_leader_id());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void cluster_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<cluster_info*>(&to_msg);
  auto& from = static_cast<const cluster_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.cluster_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nodes()->MergeFrom(
      from._internal_nodes());
  _this->_impl_.topic_assignments_.MergeFrom(from._impl_.topic_assignments_);
  _this->_impl_.queue_assignments_.MergeFrom(from._impl_.queue_assignments_);
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_leader_id().empty()) {
    _this->_internal_set_leader_id(from._internal_leader_id());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void cluster_info::CopyFrom(const cluster_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.cluster_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void cluster_info::InternalSwap(cluster_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  _impl_.topic_assignments_.InternalSwap(&other->_impl_.topic_assignments_);
  _impl_.queue_assignments_.InternalSwap(&other->_impl_.queue_assignments_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leader_id_, &other->_impl_.leader_id_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata cluster_info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class sync_response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<sync_response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(sync_response, _impl_._has_bits_);
};

sync_response::sync_response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.sync_response)
}
inline PROTOBUF_NDEBUG_INLINE sync_response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::sync_response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        queues_{visibility, arena, from.queues_},
        topics_{visibility, arena, from.topics_},
        message_(arena, from.message_) {}

sync_response::sync_response(
    ::google::protobuf::Arena* arena,
    const sync_response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  sync_response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cluster_state_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mom::cluster_state>(
                              arena, *from._impl_.cluster_state_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sync_timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sync_timestamp_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, sync_timestamp_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:mom.sync_response)
}
inline PROTOBUF_NDEBUG_INLINE sync_response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        queues_{visibility, arena},
        topics_{visibility, arena},
        message_(arena) {}

inline void sync_response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cluster_state_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, cluster_state_) +
               sizeof(Impl_::success_));
}
sync_response::~sync_response() {
  // @@protoc_insertion_point(destructor:mom.sync_response)
  SharedDtor(*this);
}
inline void sync_response::SharedDtor(MessageLite& self) {
  sync_response& this_ = static_cast<sync_response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.cluster_state_;
  this_._impl_.~Impl_();
}

inline void* sync_response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) sync_response(arena);
}
constexpr auto sync_response::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(sync_response, _impl_.queues_) +
          decltype(sync_response::_impl_.queues_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(sync_response, _impl_.topics_) +
          decltype(sync_response::_impl_.topics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(sync_response), alignof(sync_response), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&sync_response::PlacementNew_,
                                 sizeof(sync_response),
                                 alignof(sync_response));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull sync_response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_sync_response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &sync_response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<sync_response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &sync_response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<sync_response>(), &sync_response::ByteSizeLong,
            &sync_response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(sync_response, _impl_._cached_size_),
        false,
    },
    &sync_response::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* sync_response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 33, 2> sync_response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(sync_response, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::sync_response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(sync_response, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(sync_response, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(sync_response, _impl_.message_)}},
    // repeated .mom.queue queues = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(sync_response, _impl_.queues_)}},
    // repeated .mom.topic topics = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(sync_response, _impl_.topics_)}},
    // .mom.cluster_state cluster_state = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 2, PROTOBUF_FIELD_OFFSET(sync_response, _impl_.cluster_state_)}},
    // int64 sync_timestamp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(sync_response, _impl_.sync_timestamp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(sync_response, _impl_.sync_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(sync_response, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(sync_response, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .mom.queue queues = 3;
    {PROTOBUF_FIELD_OFFSET(sync_response, _impl_.queues_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .mom.topic topics = 4;
    {PROTOBUF_FIELD_OFFSET(sync_response, _impl_.topics_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mom.cluster_state cluster_state = 5;
    {PROTOBUF_FIELD_OFFSET(sync_response, _impl_.cluster_state_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 sync_timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(sync_response, _impl_.sync_timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::queue>()},
    {::_pbi::TcParser::GetTable<::mom::topic>()},
    {::_pbi::TcParser::GetTable<::mom::cluster_state>()},
  }}, {{
    "\21\0\7\0\0\0\0\0"
    "mom.sync_response"
    "message"
  }},
};

PROTOBUF_NOINLINE void sync_response::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.sync_response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.queues_.Clear();
  _impl_.topics_.Clear();
  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.cluster_state_ != nullptr);
    _impl_.cluster_state_->Clear();
  }
  ::memset(&_impl_.sync_timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.sync_timestamp_)) + sizeof(_impl_.success_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* sync_response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const sync_response& this_ = static_cast<const sync_response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* sync_response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const sync_response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.sync_response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.sync_response.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .mom.queue queues = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_queues_size());
               i < n; i++) {
            const auto& repfield = this_._internal_queues().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .mom.topic topics = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_topics_size());
               i < n; i++) {
            const auto& repfield = this_._internal_topics().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mom.cluster_state cluster_state = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.cluster_state_, this_._impl_.cluster_state_->GetCachedSize(), target,
                stream);
          }

          // int64 sync_timestamp = 6;
          if (this_._internal_sync_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_sync_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.sync_response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t sync_response::ByteSizeLong(const MessageLite& base) {
          const sync_response& this_ = static_cast<const sync_response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t sync_response::ByteSizeLong() const {
          const sync_response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.sync_response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom.queue queues = 3;
            {
              total_size += 1UL * this_._internal_queues_size();
              for (const auto& msg : this_._internal_queues()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .mom.topic topics = 4;
            {
              total_size += 1UL * this_._internal_topics_size();
              for (const auto& msg : this_._internal_topics()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
           {
            // .mom.cluster_state cluster_state = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cluster_state_);
            }
          }
           {
            // int64 sync_timestamp = 6;
            if (this_._internal_sync_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_sync_timestamp());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void sync_response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<sync_response*>(&to_msg);
  auto& from = static_cast<const sync_response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.sync_response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_queues()->MergeFrom(
      from._internal_queues());
  _this->_internal_mutable_topics()->MergeFrom(
      from._internal_topics());
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.cluster_state_ != nullptr);
    if (_this->_impl_.cluster_state_ == nullptr) {
      _this->_impl_.cluster_state_ =
          ::google::protobuf::Message::CopyConstruct<::mom::cluster_state>(arena, *from._impl_.cluster_state_);
    } else {
      _this->_impl_.cluster_state_->MergeFrom(*from._impl_.cluster_state_);
    }
  }
  if (from._internal_sync_timestamp() != 0) {
    _this->_impl_.sync_timestamp_ = from._impl_.sync_timestamp_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void sync_response::CopyFrom(const sync_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.sync_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void sync_response::InternalSwap(sync_response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.queues_.InternalSwap(&other->_impl_.queues_);
  _impl_.topics_.InternalSwap(&other->_impl_.topics_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(sync_response, _impl_.success_)
      + sizeof(sync_response::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(sync_response, _impl_.cluster_state_)>(
          reinterpret_cast<char*>(&_impl_.cluster_state_),
          reinterpret_cast<char*>(&other->_impl_.cluster_state_));
}

::google::protobuf::Metadata sync_response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace mom
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_mom_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
