// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mom.proto
// Protobuf C++ Version: 5.29.0

#include "mom.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mom {
              template <typename>
PROTOBUF_CONSTEXPR topic_message_HeadersEntry_DoNotUse::topic_message_HeadersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : topic_message_HeadersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : topic_message_HeadersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct topic_message_HeadersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_message_HeadersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_message_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    topic_message_HeadersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_message_HeadersEntry_DoNotUseDefaultTypeInternal _topic_message_HeadersEntry_DoNotUse_default_instance_;

inline constexpr topic_id::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topic_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topic_id::topic_id(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topic_idDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_idDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_idDefaultTypeInternal() {}
  union {
    topic_id _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_idDefaultTypeInternal _topic_id_default_instance_;

inline constexpr topic_config::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topic_config::topic_config(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topic_configDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_configDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_configDefaultTypeInternal() {}
  union {
    topic_config _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_configDefaultTypeInternal _topic_config_default_instance_;

inline constexpr status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR status::status(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct statusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR statusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~statusDefaultTypeInternal() {}
  union {
    status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 statusDefaultTypeInternal _status_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR queue_message_HeadersEntry_DoNotUse::queue_message_HeadersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : queue_message_HeadersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : queue_message_HeadersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct queue_message_HeadersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_message_HeadersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_message_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    queue_message_HeadersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_message_HeadersEntry_DoNotUseDefaultTypeInternal _queue_message_HeadersEntry_DoNotUse_default_instance_;

inline constexpr queue_id::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : queue_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR queue_id::queue_id(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queue_idDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_idDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_idDefaultTypeInternal() {}
  union {
    queue_id _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_idDefaultTypeInternal _queue_id_default_instance_;

inline constexpr queue_config::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR queue_config::queue_config(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queue_configDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_configDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_configDefaultTypeInternal() {}
  union {
    queue_config _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_configDefaultTypeInternal _queue_config_default_instance_;

inline constexpr node_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR node_info::node_info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct node_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR node_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~node_infoDefaultTypeInternal() {}
  union {
    node_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 node_infoDefaultTypeInternal _node_info_default_instance_;

inline constexpr node_assignment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : replica_nodes_{},
        primary_node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR node_assignment::node_assignment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct node_assignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR node_assignmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~node_assignmentDefaultTypeInternal() {}
  union {
    node_assignment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 node_assignmentDefaultTypeInternal _node_assignment_default_instance_;

inline constexpr node_ID::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR node_ID::node_ID(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct node_IDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR node_IDDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~node_IDDefaultTypeInternal() {}
  union {
    node_ID _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 node_IDDefaultTypeInternal _node_ID_default_instance_;

inline constexpr message_status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR message_status::message_status(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct message_statusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR message_statusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~message_statusDefaultTypeInternal() {}
  union {
    message_status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 message_statusDefaultTypeInternal _message_status_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Message_HeadersEntry_DoNotUse::Message_HeadersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Message_HeadersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Message_HeadersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Message_HeadersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message_HeadersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Message_HeadersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message_HeadersEntry_DoNotUseDefaultTypeInternal _Message_HeadersEntry_DoNotUse_default_instance_;

inline constexpr topic_message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : headers_{},
        topic_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topic_message::topic_message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topic_messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_messageDefaultTypeInternal() {}
  union {
    topic_message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_messageDefaultTypeInternal _topic_message_default_instance_;

inline constexpr queue_message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : headers_{},
        queue_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR queue_message::queue_message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queue_messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_messageDefaultTypeInternal() {}
  union {
    queue_message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_messageDefaultTypeInternal _queue_message_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR cluster_state_TopicAssignmentsEntry_DoNotUse::cluster_state_TopicAssignmentsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : cluster_state_TopicAssignmentsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : cluster_state_TopicAssignmentsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct cluster_state_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_state_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_state_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    cluster_state_TopicAssignmentsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_state_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal _cluster_state_TopicAssignmentsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR cluster_state_QueueAssignmentsEntry_DoNotUse::cluster_state_QueueAssignmentsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : cluster_state_QueueAssignmentsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : cluster_state_QueueAssignmentsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct cluster_state_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_state_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_state_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    cluster_state_QueueAssignmentsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_state_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal _cluster_state_QueueAssignmentsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR cluster_info_TopicAssignmentsEntry_DoNotUse::cluster_info_TopicAssignmentsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : cluster_info_TopicAssignmentsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : cluster_info_TopicAssignmentsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct cluster_info_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_info_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_info_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    cluster_info_TopicAssignmentsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_info_TopicAssignmentsEntry_DoNotUseDefaultTypeInternal _cluster_info_TopicAssignmentsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR cluster_info_QueueAssignmentsEntry_DoNotUse::cluster_info_QueueAssignmentsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : cluster_info_QueueAssignmentsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : cluster_info_QueueAssignmentsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct cluster_info_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_info_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_info_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    cluster_info_QueueAssignmentsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_info_QueueAssignmentsEntry_DoNotUseDefaultTypeInternal _cluster_info_QueueAssignmentsEntry_DoNotUse_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : headers_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        topic_or_queue_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        is_topic_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;

inline constexpr topic::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        messages_{},
        config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR topic::topic(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topicDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topicDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topicDefaultTypeInternal() {}
  union {
    topic _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topicDefaultTypeInternal _topic_default_instance_;

inline constexpr queue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        messages_{},
        config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR queue::queue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queueDefaultTypeInternal() {}
  union {
    queue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queueDefaultTypeInternal _queue_default_instance_;

inline constexpr cluster_state::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nodes_{},
        topic_assignments_{},
        queue_assignments_{},
        leader_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR cluster_state::cluster_state(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct cluster_stateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_stateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_stateDefaultTypeInternal() {}
  union {
    cluster_state _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_stateDefaultTypeInternal _cluster_state_default_instance_;

inline constexpr cluster_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nodes_{},
        topic_assignments_{},
        queue_assignments_{},
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        leader_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR cluster_info::cluster_info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct cluster_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cluster_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cluster_infoDefaultTypeInternal() {}
  union {
    cluster_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cluster_infoDefaultTypeInternal _cluster_info_default_instance_;

inline constexpr state_response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        topics_{},
        queues_{},
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cluster_state_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR state_response::state_response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct state_responseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR state_responseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~state_responseDefaultTypeInternal() {}
  union {
    state_response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 state_responseDefaultTypeInternal _state_response_default_instance_;
}  // namespace mom
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_mom_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mom_2eproto = nullptr;
const ::uint32_t
    TableStruct_mom_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::node_ID, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::node_ID, _impl_.node_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::status, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::status, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom::status, _impl_.error_message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::topic_config, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_config, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_config, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_config, _impl_.creation_timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::queue_config, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue_config, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_config, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_config, _impl_.creation_timestamp_),
        PROTOBUF_FIELD_OFFSET(::mom::Message_HeadersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::Message_HeadersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::Message_HeadersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::Message_HeadersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::Message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::Message, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::mom::Message, _impl_.topic_or_queue_name_),
        PROTOBUF_FIELD_OFFSET(::mom::Message, _impl_.is_topic_),
        PROTOBUF_FIELD_OFFSET(::mom::Message, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::mom::Message, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::mom::Message, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::mom::Message, _impl_.headers_),
        PROTOBUF_FIELD_OFFSET(::mom::topic, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::topic, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic, _impl_.messages_),
        PROTOBUF_FIELD_OFFSET(::mom::topic, _impl_.config_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::mom::queue, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::queue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue, _impl_.messages_),
        PROTOBUF_FIELD_OFFSET(::mom::queue, _impl_.config_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::node_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::node_info, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::mom::node_info, _impl_.host_),
        PROTOBUF_FIELD_OFFSET(::mom::node_info, _impl_.port_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::node_assignment, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::node_assignment, _impl_.primary_node_),
        PROTOBUF_FIELD_OFFSET(::mom::node_assignment, _impl_.replica_nodes_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_TopicAssignmentsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_QueueAssignmentsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _impl_.leader_id_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _impl_.nodes_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _impl_.topic_assignments_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_state, _impl_.queue_assignments_),
        PROTOBUF_FIELD_OFFSET(::mom::state_response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::state_response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::state_response, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom::state_response, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::mom::state_response, _impl_.topics_),
        PROTOBUF_FIELD_OFFSET(::mom::state_response, _impl_.queues_),
        PROTOBUF_FIELD_OFFSET(::mom::state_response, _impl_.cluster_state_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_TopicAssignmentsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_QueueAssignmentsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.leader_id_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.nodes_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.topic_assignments_),
        PROTOBUF_FIELD_OFFSET(::mom::cluster_info, _impl_.queue_assignments_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message_HeadersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message_HeadersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_message_HeadersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message_HeadersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.topic_name_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::mom::topic_message, _impl_.headers_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message_HeadersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message_HeadersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue_message_HeadersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message_HeadersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.queue_name_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::mom::queue_message, _impl_.headers_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::message_status, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::message_status, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom::message_status, _impl_.error_message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::topic_id, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::topic_id, _impl_.topic_name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom::queue_id, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom::queue_id, _impl_.queue_name_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mom::node_ID)},
        {9, -1, -1, sizeof(::mom::status)},
        {19, -1, -1, sizeof(::mom::topic_config)},
        {30, -1, -1, sizeof(::mom::queue_config)},
        {41, 51, -1, sizeof(::mom::Message_HeadersEntry_DoNotUse)},
        {53, -1, -1, sizeof(::mom::Message)},
        {68, 78, -1, sizeof(::mom::topic)},
        {80, 90, -1, sizeof(::mom::queue)},
        {92, -1, -1, sizeof(::mom::node_info)},
        {103, -1, -1, sizeof(::mom::node_assignment)},
        {113, 123, -1, sizeof(::mom::cluster_state_TopicAssignmentsEntry_DoNotUse)},
        {125, 135, -1, sizeof(::mom::cluster_state_QueueAssignmentsEntry_DoNotUse)},
        {137, -1, -1, sizeof(::mom::cluster_state)},
        {149, 162, -1, sizeof(::mom::state_response)},
        {167, 177, -1, sizeof(::mom::cluster_info_TopicAssignmentsEntry_DoNotUse)},
        {179, 189, -1, sizeof(::mom::cluster_info_QueueAssignmentsEntry_DoNotUse)},
        {191, -1, -1, sizeof(::mom::cluster_info)},
        {205, 215, -1, sizeof(::mom::topic_message_HeadersEntry_DoNotUse)},
        {217, -1, -1, sizeof(::mom::topic_message)},
        {229, 239, -1, sizeof(::mom::queue_message_HeadersEntry_DoNotUse)},
        {241, -1, -1, sizeof(::mom::queue_message)},
        {253, -1, -1, sizeof(::mom::message_status)},
        {263, -1, -1, sizeof(::mom::topic_id)},
        {272, -1, -1, sizeof(::mom::queue_id)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::mom::_node_ID_default_instance_._instance,
    &::mom::_status_default_instance_._instance,
    &::mom::_topic_config_default_instance_._instance,
    &::mom::_queue_config_default_instance_._instance,
    &::mom::_Message_HeadersEntry_DoNotUse_default_instance_._instance,
    &::mom::_Message_default_instance_._instance,
    &::mom::_topic_default_instance_._instance,
    &::mom::_queue_default_instance_._instance,
    &::mom::_node_info_default_instance_._instance,
    &::mom::_node_assignment_default_instance_._instance,
    &::mom::_cluster_state_TopicAssignmentsEntry_DoNotUse_default_instance_._instance,
    &::mom::_cluster_state_QueueAssignmentsEntry_DoNotUse_default_instance_._instance,
    &::mom::_cluster_state_default_instance_._instance,
    &::mom::_state_response_default_instance_._instance,
    &::mom::_cluster_info_TopicAssignmentsEntry_DoNotUse_default_instance_._instance,
    &::mom::_cluster_info_QueueAssignmentsEntry_DoNotUse_default_instance_._instance,
    &::mom::_cluster_info_default_instance_._instance,
    &::mom::_topic_message_HeadersEntry_DoNotUse_default_instance_._instance,
    &::mom::_topic_message_default_instance_._instance,
    &::mom::_queue_message_HeadersEntry_DoNotUse_default_instance_._instance,
    &::mom::_queue_message_default_instance_._instance,
    &::mom::_message_status_default_instance_._instance,
    &::mom::_topic_id_default_instance_._instance,
    &::mom::_queue_id_default_instance_._instance,
};
const char descriptor_table_protodef_mom_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\tmom.proto\022\003mom\"\032\n\007node_ID\022\017\n\007node_id\030\001"
    " \001(\t\"0\n\006status\022\017\n\007success\030\001 \001(\010\022\025\n\rerror"
    "_message\030\002 \001(\t\"G\n\014topic_config\022\014\n\004name\030\001"
    " \001(\t\022\r\n\005owner\030\002 \001(\t\022\032\n\022creation_timestam"
    "p\030\003 \001(\003\"G\n\014queue_config\022\014\n\004name\030\001 \001(\t\022\r\n"
    "\005owner\030\002 \001(\t\022\032\n\022creation_timestamp\030\003 \001(\003"
    "\"\324\001\n\007Message\022\n\n\002id\030\001 \001(\t\022\033\n\023topic_or_que"
    "ue_name\030\002 \001(\t\022\020\n\010is_topic\030\003 \001(\010\022\017\n\007conte"
    "nt\030\004 \001(\t\022\016\n\006sender\030\005 \001(\t\022\021\n\ttimestamp\030\006 "
    "\001(\003\022*\n\007headers\030\007 \003(\0132\031.mom.Message.Heade"
    "rsEntry\032.\n\014HeadersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
    "value\030\002 \001(\t:\0028\001\"J\n\005topic\022\036\n\010messages\030\001 \003"
    "(\0132\014.mom.Message\022!\n\006config\030\002 \001(\0132\021.mom.t"
    "opic_config\"J\n\005queue\022\036\n\010messages\030\001 \003(\0132\014"
    ".mom.Message\022!\n\006config\030\002 \001(\0132\021.mom.queue"
    "_config\"8\n\tnode_info\022\017\n\007node_id\030\001 \001(\t\022\014\n"
    "\004host\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\">\n\017node_assign"
    "ment\022\024\n\014primary_node\030\001 \001(\t\022\025\n\rreplica_no"
    "des\030\002 \003(\t\"\351\002\n\rcluster_state\022\021\n\tleader_id"
    "\030\001 \001(\t\022\035\n\005nodes\030\002 \003(\0132\016.mom.node_info\022C\n"
    "\021topic_assignments\030\003 \003(\0132(.mom.cluster_s"
    "tate.TopicAssignmentsEntry\022C\n\021queue_assi"
    "gnments\030\004 \003(\0132(.mom.cluster_state.QueueA"
    "ssignmentsEntry\032M\n\025TopicAssignmentsEntry"
    "\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.mom.node_"
    "assignment:\0028\001\032M\n\025QueueAssignmentsEntry\022"
    "\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.mom.node_a"
    "ssignment:\0028\001\"\233\001\n\016state_response\022\017\n\007succ"
    "ess\030\001 \001(\010\022\025\n\rerror_message\030\002 \001(\t\022\032\n\006topi"
    "cs\030\003 \003(\0132\n.mom.topic\022\032\n\006queues\030\004 \003(\0132\n.m"
    "om.queue\022)\n\rcluster_state\030\005 \001(\0132\022.mom.cl"
    "uster_state\"\216\003\n\014cluster_info\022\017\n\007success\030"
    "\001 \001(\010\022\025\n\rerror_message\030\002 \001(\t\022\021\n\tleader_i"
    "d\030\003 \001(\t\022\035\n\005nodes\030\004 \003(\0132\016.mom.node_info\022B"
    "\n\021topic_assignments\030\005 \003(\0132\'.mom.cluster_"
    "info.TopicAssignmentsEntry\022B\n\021queue_assi"
    "gnments\030\006 \003(\0132\'.mom.cluster_info.QueueAs"
    "signmentsEntry\032M\n\025TopicAssignmentsEntry\022"
    "\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.mom.node_a"
    "ssignment:\0028\001\032M\n\025QueueAssignmentsEntry\022\013"
    "\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.mom.node_as"
    "signment:\0028\001\"\246\001\n\rtopic_message\022\022\n\ntopic_"
    "name\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\022\016\n\006sender\030\003 "
    "\001(\t\0220\n\007headers\030\004 \003(\0132\037.mom.topic_message"
    ".HeadersEntry\032.\n\014HeadersEntry\022\013\n\003key\030\001 \001"
    "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\246\001\n\rqueue_message\022"
    "\022\n\nqueue_name\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\022\016\n\006"
    "sender\030\003 \001(\t\0220\n\007headers\030\004 \003(\0132\037.mom.queu"
    "e_message.HeadersEntry\032.\n\014HeadersEntry\022\013"
    "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"8\n\016messag"
    "e_status\022\017\n\007success\030\001 \001(\010\022\025\n\rerror_messa"
    "ge\030\002 \001(\t\"\036\n\010topic_id\022\022\n\ntopic_name\030\001 \001(\t"
    "\"\036\n\010queue_id\022\022\n\nqueue_name\030\001 \001(\t2\375\006\n\013MOM"
    "_service\0222\n\013sync_topics\022\014.mom.node_ID\032\023."
    "mom.state_response\"\000\0222\n\013sync_queues\022\014.mo"
    "m.node_ID\032\023.mom.state_response\"\000\0220\n\014crea"
    "te_queue\022\021.mom.queue_config\032\013.mom.status"
    "\"\000\022)\n\014delete_queue\022\n.mom.queue\032\013.mom.sta"
    "tus\"\000\0222\n\013list_queues\022\014.mom.node_ID\032\023.mom"
    ".state_response\"\000\0220\n\014create_topic\022\021.mom."
    "topic_config\032\013.mom.status\"\000\022)\n\014delete_to"
    "pic\022\n.mom.topic\032\013.mom.status\"\000\0222\n\013list_t"
    "opics\022\014.mom.node_ID\032\023.mom.state_response"
    "\"\000\022/\n\017subscribe_topic\022\r.mom.topic_id\032\013.m"
    "om.status\"\000\0221\n\021unsubscribe_topic\022\r.mom.t"
    "opic_id\032\013.mom.status\"\000\022\?\n\022send_queue_mes"
    "sage\022\022.mom.queue_message\032\023.mom.message_s"
    "tatus\"\000\0226\n\025receive_queue_message\022\r.mom.q"
    "ueue_id\032\014.mom.Message\"\000\022B\n\025publish_topic"
    "_message\022\022.mom.topic_message\032\023.mom.messa"
    "ge_status\"\000\0226\n\025receive_topic_message\022\r.m"
    "om.topic_id\032\014.mom.Message\"\000\0223\n\014join_clus"
    "ter\022\016.mom.node_info\032\021.mom.cluster_info\"\000"
    "\022,\n\rleave_cluster\022\014.mom.node_ID\032\013.mom.st"
    "atus\"\000\022(\n\theartbeat\022\014.mom.node_ID\032\013.mom."
    "status\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_mom_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_mom_2eproto = {
    false,
    false,
    3016,
    descriptor_table_protodef_mom_2eproto,
    "mom.proto",
    &descriptor_table_mom_2eproto_once,
    nullptr,
    0,
    24,
    schemas,
    file_default_instances,
    TableStruct_mom_2eproto::offsets,
    file_level_enum_descriptors_mom_2eproto,
    file_level_service_descriptors_mom_2eproto,
};
namespace mom {
// ===================================================================

class node_ID::_Internal {
 public:
};

node_ID::node_ID(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.node_ID)
}
inline PROTOBUF_NDEBUG_INLINE node_ID::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::node_ID& from_msg)
      : node_id_(arena, from.node_id_),
        _cached_size_{0} {}

node_ID::node_ID(
    ::google::protobuf::Arena* arena,
    const node_ID& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  node_ID* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.node_ID)
}
inline PROTOBUF_NDEBUG_INLINE node_ID::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_id_(arena),
        _cached_size_{0} {}

inline void node_ID::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
node_ID::~node_ID() {
  // @@protoc_insertion_point(destructor:mom.node_ID)
  SharedDtor(*this);
}
inline void node_ID::SharedDtor(MessageLite& self) {
  node_ID& this_ = static_cast<node_ID&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* node_ID::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) node_ID(arena);
}
constexpr auto node_ID::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(node_ID),
                                            alignof(node_ID));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull node_ID::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_node_ID_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &node_ID::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<node_ID>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &node_ID::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<node_ID>(), &node_ID::ByteSizeLong,
            &node_ID::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(node_ID, _impl_._cached_size_),
        false,
    },
    &node_ID::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* node_ID::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 27, 2> node_ID::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::node_ID>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string node_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(node_ID, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node_id = 1;
    {PROTOBUF_FIELD_OFFSET(node_ID, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\13\7\0\0\0\0\0\0"
    "mom.node_ID"
    "node_id"
  }},
};

PROTOBUF_NOINLINE void node_ID::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.node_ID)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* node_ID::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const node_ID& this_ = static_cast<const node_ID&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* node_ID::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const node_ID& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.node_ID)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node_id = 1;
          if (!this_._internal_node_id().empty()) {
            const std::string& _s = this_._internal_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_ID.node_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.node_ID)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t node_ID::ByteSizeLong(const MessageLite& base) {
          const node_ID& this_ = static_cast<const node_ID&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t node_ID::ByteSizeLong() const {
          const node_ID& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.node_ID)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string node_id = 1;
            if (!this_._internal_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void node_ID::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<node_ID*>(&to_msg);
  auto& from = static_cast<const node_ID&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.node_ID)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void node_ID::CopyFrom(const node_ID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.node_ID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void node_ID::InternalSwap(node_ID* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
}

::google::protobuf::Metadata node_ID::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class status::_Internal {
 public:
};

status::status(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.status)
}
inline PROTOBUF_NDEBUG_INLINE status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::status& from_msg)
      : error_message_(arena, from.error_message_),
        _cached_size_{0} {}

status::status(
    ::google::protobuf::Arena* arena,
    const status& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:mom.status)
}
inline PROTOBUF_NDEBUG_INLINE status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        _cached_size_{0} {}

inline void status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
status::~status() {
  // @@protoc_insertion_point(destructor:mom.status)
  SharedDtor(*this);
}
inline void status::SharedDtor(MessageLite& self) {
  status& this_ = static_cast<status&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* status::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) status(arena);
}
constexpr auto status::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(status),
                                            alignof(status));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull status::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_status_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &status::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<status>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &status::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<status>(), &status::ByteSizeLong,
            &status::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(status, _impl_._cached_size_),
        false,
    },
    &status::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* status::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 32, 2> status::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::status>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(status, _impl_.error_message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(status, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(status, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(status, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(status, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\0\15\0\0\0\0\0"
    "mom.status"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void status::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* status::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const status& this_ = static_cast<const status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* status::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.status)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.status.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.status)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t status::ByteSizeLong(const MessageLite& base) {
          const status& this_ = static_cast<const status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t status::ByteSizeLong() const {
          const status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.status)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void status::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<status*>(&to_msg);
  auto& from = static_cast<const status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void status::CopyFrom(const status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void status::InternalSwap(status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata status::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class topic_config::_Internal {
 public:
};

topic_config::topic_config(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.topic_config)
}
inline PROTOBUF_NDEBUG_INLINE topic_config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::topic_config& from_msg)
      : name_(arena, from.name_),
        owner_(arena, from.owner_),
        _cached_size_{0} {}

topic_config::topic_config(
    ::google::protobuf::Arena* arena,
    const topic_config& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic_config* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.creation_timestamp_ = from._impl_.creation_timestamp_;

  // @@protoc_insertion_point(copy_constructor:mom.topic_config)
}
inline PROTOBUF_NDEBUG_INLINE topic_config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        owner_(arena),
        _cached_size_{0} {}

inline void topic_config::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.creation_timestamp_ = {};
}
topic_config::~topic_config() {
  // @@protoc_insertion_point(destructor:mom.topic_config)
  SharedDtor(*this);
}
inline void topic_config::SharedDtor(MessageLite& self) {
  topic_config& this_ = static_cast<topic_config&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topic_config::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic_config(arena);
}
constexpr auto topic_config::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(topic_config),
                                            alignof(topic_config));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic_config::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_config_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic_config::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic_config>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic_config::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic_config>(), &topic_config::ByteSizeLong,
            &topic_config::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic_config, _impl_._cached_size_),
        false,
    },
    &topic_config::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic_config::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 34, 2> topic_config::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_config>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_config, _impl_.name_)}},
    // string owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_config, _impl_.owner_)}},
    // int64 creation_timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(topic_config, _impl_.creation_timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(topic_config, _impl_.creation_timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(topic_config, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 2;
    {PROTOBUF_FIELD_OFFSET(topic_config, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 creation_timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(topic_config, _impl_.creation_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\20\4\5\0\0\0\0\0"
    "mom.topic_config"
    "name"
    "owner"
  }},
};

PROTOBUF_NOINLINE void topic_config::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.topic_config)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _impl_.creation_timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic_config::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic_config& this_ = static_cast<const topic_config&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic_config::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic_config& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.topic_config)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_config.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner = 2;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_config.owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 creation_timestamp = 3;
          if (this_._internal_creation_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_creation_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.topic_config)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic_config::ByteSizeLong(const MessageLite& base) {
          const topic_config& this_ = static_cast<const topic_config&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic_config::ByteSizeLong() const {
          const topic_config& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.topic_config)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string owner = 2;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
            // int64 creation_timestamp = 3;
            if (this_._internal_creation_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_creation_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic_config::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic_config*>(&to_msg);
  auto& from = static_cast<const topic_config&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.topic_config)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (from._internal_creation_timestamp() != 0) {
    _this->_impl_.creation_timestamp_ = from._impl_.creation_timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic_config::CopyFrom(const topic_config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.topic_config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic_config::InternalSwap(topic_config* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
        swap(_impl_.creation_timestamp_, other->_impl_.creation_timestamp_);
}

::google::protobuf::Metadata topic_config::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class queue_config::_Internal {
 public:
};

queue_config::queue_config(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.queue_config)
}
inline PROTOBUF_NDEBUG_INLINE queue_config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::queue_config& from_msg)
      : name_(arena, from.name_),
        owner_(arena, from.owner_),
        _cached_size_{0} {}

queue_config::queue_config(
    ::google::protobuf::Arena* arena,
    const queue_config& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queue_config* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.creation_timestamp_ = from._impl_.creation_timestamp_;

  // @@protoc_insertion_point(copy_constructor:mom.queue_config)
}
inline PROTOBUF_NDEBUG_INLINE queue_config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        owner_(arena),
        _cached_size_{0} {}

inline void queue_config::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.creation_timestamp_ = {};
}
queue_config::~queue_config() {
  // @@protoc_insertion_point(destructor:mom.queue_config)
  SharedDtor(*this);
}
inline void queue_config::SharedDtor(MessageLite& self) {
  queue_config& this_ = static_cast<queue_config&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* queue_config::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queue_config(arena);
}
constexpr auto queue_config::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(queue_config),
                                            alignof(queue_config));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queue_config::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queue_config_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queue_config::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queue_config>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queue_config::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queue_config>(), &queue_config::ByteSizeLong,
            &queue_config::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queue_config, _impl_._cached_size_),
        false,
    },
    &queue_config::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queue_config::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 34, 2> queue_config::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue_config>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_config, _impl_.name_)}},
    // string owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue_config, _impl_.owner_)}},
    // int64 creation_timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(queue_config, _impl_.creation_timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(queue_config, _impl_.creation_timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(queue_config, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 2;
    {PROTOBUF_FIELD_OFFSET(queue_config, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 creation_timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(queue_config, _impl_.creation_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\20\4\5\0\0\0\0\0"
    "mom.queue_config"
    "name"
    "owner"
  }},
};

PROTOBUF_NOINLINE void queue_config::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.queue_config)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _impl_.creation_timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queue_config::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queue_config& this_ = static_cast<const queue_config&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queue_config::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queue_config& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.queue_config)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_config.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner = 2;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_config.owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 creation_timestamp = 3;
          if (this_._internal_creation_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_creation_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.queue_config)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queue_config::ByteSizeLong(const MessageLite& base) {
          const queue_config& this_ = static_cast<const queue_config&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queue_config::ByteSizeLong() const {
          const queue_config& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.queue_config)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string owner = 2;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
            // int64 creation_timestamp = 3;
            if (this_._internal_creation_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_creation_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queue_config::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queue_config*>(&to_msg);
  auto& from = static_cast<const queue_config&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.queue_config)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (from._internal_creation_timestamp() != 0) {
    _this->_impl_.creation_timestamp_ = from._impl_.creation_timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queue_config::CopyFrom(const queue_config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.queue_config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queue_config::InternalSwap(queue_config* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
        swap(_impl_.creation_timestamp_, other->_impl_.creation_timestamp_);
}

::google::protobuf::Metadata queue_config::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Message_HeadersEntry_DoNotUse::Message_HeadersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Message_HeadersEntry_DoNotUse::Message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Message_HeadersEntry_DoNotUse::Message_HeadersEntry_DoNotUse() : SuperType() {}
              Message_HeadersEntry_DoNotUse::Message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Message_HeadersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Message_HeadersEntry_DoNotUse(arena);
              }
              constexpr auto Message_HeadersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Message_HeadersEntry_DoNotUse),
                                                          alignof(Message_HeadersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Message_HeadersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Message_HeadersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Message_HeadersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Message_HeadersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Message_HeadersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Message_HeadersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Message_HeadersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Message_HeadersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Message_HeadersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> Message_HeadersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message_HeadersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::Message_HeadersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message_HeadersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message_HeadersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Message_HeadersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Message_HeadersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\3\5\0\0\0\0\0"
    "mom.Message.HeadersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Message::_Internal {
 public:
};

Message::Message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::Message& from_msg)
      : headers_{visibility, arena, from.headers_},
        id_(arena, from.id_),
        topic_or_queue_name_(arena, from.topic_or_queue_name_),
        content_(arena, from.content_),
        sender_(arena, from.sender_),
        _cached_size_{0} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, is_topic_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::is_topic_));

  // @@protoc_insertion_point(copy_constructor:mom.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : headers_{visibility, arena},
        id_(arena),
        topic_or_queue_name_(arena),
        content_(arena),
        sender_(arena),
        _cached_size_{0} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, is_topic_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::is_topic_));
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:mom.Message)
  SharedDtor(*this);
}
inline void Message::SharedDtor(MessageLite& self) {
  Message& this_ = static_cast<Message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.topic_or_queue_name_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Message(arena);
}
constexpr auto Message::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Message, _impl_.headers_) +
          decltype(Message::_impl_.headers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Message, _impl_.headers_) +
          decltype(Message::_impl_.headers_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Message), alignof(Message), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Message::PlacementNew_,
                                 sizeof(Message),
                                 alignof(Message));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Message>(), &Message::ByteSizeLong,
            &Message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Message, _impl_._cached_size_),
        false,
    },
    &Message::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 61, 2> Message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.id_)}},
    // string topic_or_queue_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.topic_or_queue_name_)}},
    // bool is_topic = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message, _impl_.is_topic_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.is_topic_)}},
    // string content = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.content_)}},
    // string sender = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.sender_)}},
    // int64 timestamp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message, _impl_.timestamp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string topic_or_queue_name = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.topic_or_queue_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_topic = 3;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.is_topic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string content = 4;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender = 5;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // map<string, string> headers = 7;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.headers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Message()._impl_.headers_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\13\2\23\0\7\6\0\7"
    "mom.Message"
    "id"
    "topic_or_queue_name"
    "content"
    "sender"
    "headers"
  }},
};

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.Message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.headers_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.topic_or_queue_name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_topic_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.is_topic_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.Message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.Message.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string topic_or_queue_name = 2;
          if (!this_._internal_topic_or_queue_name().empty()) {
            const std::string& _s = this_._internal_topic_or_queue_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.Message.topic_or_queue_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool is_topic = 3;
          if (this_._internal_is_topic() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_is_topic(), target);
          }

          // string content = 4;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.Message.content");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string sender = 5;
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.Message.sender");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int64 timestamp = 6;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_timestamp(), target);
          }

          // map<string, string> headers = 7;
          if (!this_._internal_headers().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_headers();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.Message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.Message.headers");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.Message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.Message.headers");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.Message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Message::ByteSizeLong(const MessageLite& base) {
          const Message& this_ = static_cast<const Message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Message::ByteSizeLong() const {
          const Message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.Message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> headers = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_headers_size());
              for (const auto& entry : this_._internal_headers()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string topic_or_queue_name = 2;
            if (!this_._internal_topic_or_queue_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_topic_or_queue_name());
            }
            // string content = 4;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // string sender = 5;
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
            // int64 timestamp = 6;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
            // bool is_topic = 3;
            if (this_._internal_is_topic() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_topic_or_queue_name().empty()) {
    _this->_internal_set_topic_or_queue_name(from._internal_topic_or_queue_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_is_topic() != 0) {
    _this->_impl_.is_topic_ = from._impl_.is_topic_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_or_queue_name_, &other->_impl_.topic_or_queue_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, _impl_.is_topic_)
      + sizeof(Message::_impl_.is_topic_)
      - PROTOBUF_FIELD_OFFSET(Message, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class topic::_Internal {
 public:
  using HasBits =
      decltype(std::declval<topic>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(topic, _impl_._has_bits_);
};

topic::topic(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.topic)
}
inline PROTOBUF_NDEBUG_INLINE topic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::topic& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        messages_{visibility, arena, from.messages_} {}

topic::topic(
    ::google::protobuf::Arena* arena,
    const topic& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mom::topic_config>(
                              arena, *from._impl_.config_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mom.topic)
}
inline PROTOBUF_NDEBUG_INLINE topic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        messages_{visibility, arena} {}

inline void topic::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.config_ = {};
}
topic::~topic() {
  // @@protoc_insertion_point(destructor:mom.topic)
  SharedDtor(*this);
}
inline void topic::SharedDtor(MessageLite& self) {
  topic& this_ = static_cast<topic&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.config_;
  this_._impl_.~Impl_();
}

inline void* topic::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic(arena);
}
constexpr auto topic::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(topic, _impl_.messages_) +
          decltype(topic::_impl_.messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(topic), alignof(topic), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&topic::PlacementNew_,
                                 sizeof(topic),
                                 alignof(topic));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic>(), &topic::ByteSizeLong,
            &topic::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic, _impl_._cached_size_),
        false,
    },
    &topic::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> topic::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(topic, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mom.topic_config config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(topic, _impl_.config_)}},
    // repeated .mom.Message messages = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.messages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mom.Message messages = 1;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.messages_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mom.topic_config config = 2;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.config_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::Message>()},
    {::_pbi::TcParser::GetTable<::mom::topic_config>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void topic::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.topic)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.config_ != nullptr);
    _impl_.config_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic& this_ = static_cast<const topic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.topic)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .mom.Message messages = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_messages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_messages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mom.topic_config config = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.config_, this_._impl_.config_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.topic)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic::ByteSizeLong(const MessageLite& base) {
          const topic& this_ = static_cast<const topic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic::ByteSizeLong() const {
          const topic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.topic)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom.Message messages = 1;
            {
              total_size += 1UL * this_._internal_messages_size();
              for (const auto& msg : this_._internal_messages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .mom.topic_config config = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic*>(&to_msg);
  auto& from = static_cast<const topic&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.topic)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(
      from._internal_messages());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.config_ != nullptr);
    if (_this->_impl_.config_ == nullptr) {
      _this->_impl_.config_ =
          ::google::protobuf::Message::CopyConstruct<::mom::topic_config>(arena, *from._impl_.config_);
    } else {
      _this->_impl_.config_->MergeFrom(*from._impl_.config_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic::CopyFrom(const topic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.topic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic::InternalSwap(topic* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  swap(_impl_.config_, other->_impl_.config_);
}

::google::protobuf::Metadata topic::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class queue::_Internal {
 public:
  using HasBits =
      decltype(std::declval<queue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(queue, _impl_._has_bits_);
};

queue::queue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.queue)
}
inline PROTOBUF_NDEBUG_INLINE queue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::queue& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        messages_{visibility, arena, from.messages_} {}

queue::queue(
    ::google::protobuf::Arena* arena,
    const queue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mom::queue_config>(
                              arena, *from._impl_.config_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:mom.queue)
}
inline PROTOBUF_NDEBUG_INLINE queue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        messages_{visibility, arena} {}

inline void queue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.config_ = {};
}
queue::~queue() {
  // @@protoc_insertion_point(destructor:mom.queue)
  SharedDtor(*this);
}
inline void queue::SharedDtor(MessageLite& self) {
  queue& this_ = static_cast<queue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.config_;
  this_._impl_.~Impl_();
}

inline void* queue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queue(arena);
}
constexpr auto queue::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(queue, _impl_.messages_) +
          decltype(queue::_impl_.messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(queue), alignof(queue), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&queue::PlacementNew_,
                                 sizeof(queue),
                                 alignof(queue));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queue::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queue::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queue::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queue>(), &queue::ByteSizeLong,
            &queue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queue, _impl_._cached_size_),
        false,
    },
    &queue::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> queue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(queue, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mom.queue_config config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(queue, _impl_.config_)}},
    // repeated .mom.Message messages = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue, _impl_.messages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mom.Message messages = 1;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.messages_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mom.queue_config config = 2;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.config_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::Message>()},
    {::_pbi::TcParser::GetTable<::mom::queue_config>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void queue::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.queue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.config_ != nullptr);
    _impl_.config_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queue& this_ = static_cast<const queue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.queue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .mom.Message messages = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_messages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_messages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mom.queue_config config = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.config_, this_._impl_.config_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.queue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queue::ByteSizeLong(const MessageLite& base) {
          const queue& this_ = static_cast<const queue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queue::ByteSizeLong() const {
          const queue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.queue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom.Message messages = 1;
            {
              total_size += 1UL * this_._internal_messages_size();
              for (const auto& msg : this_._internal_messages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .mom.queue_config config = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queue*>(&to_msg);
  auto& from = static_cast<const queue&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.queue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(
      from._internal_messages());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.config_ != nullptr);
    if (_this->_impl_.config_ == nullptr) {
      _this->_impl_.config_ =
          ::google::protobuf::Message::CopyConstruct<::mom::queue_config>(arena, *from._impl_.config_);
    } else {
      _this->_impl_.config_->MergeFrom(*from._impl_.config_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queue::CopyFrom(const queue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.queue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queue::InternalSwap(queue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  swap(_impl_.config_, other->_impl_.config_);
}

::google::protobuf::Metadata queue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class node_info::_Internal {
 public:
};

node_info::node_info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.node_info)
}
inline PROTOBUF_NDEBUG_INLINE node_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::node_info& from_msg)
      : node_id_(arena, from.node_id_),
        host_(arena, from.host_),
        _cached_size_{0} {}

node_info::node_info(
    ::google::protobuf::Arena* arena,
    const node_info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  node_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:mom.node_info)
}
inline PROTOBUF_NDEBUG_INLINE node_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_id_(arena),
        host_(arena),
        _cached_size_{0} {}

inline void node_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.port_ = {};
}
node_info::~node_info() {
  // @@protoc_insertion_point(destructor:mom.node_info)
  SharedDtor(*this);
}
inline void node_info::SharedDtor(MessageLite& self) {
  node_info& this_ = static_cast<node_info&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_id_.Destroy();
  this_._impl_.host_.Destroy();
  this_._impl_.~Impl_();
}

inline void* node_info::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) node_info(arena);
}
constexpr auto node_info::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(node_info),
                                            alignof(node_info));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull node_info::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_node_info_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &node_info::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<node_info>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &node_info::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<node_info>(), &node_info::ByteSizeLong,
            &node_info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(node_info, _impl_._cached_size_),
        false,
    },
    &node_info::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* node_info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 33, 2> node_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::node_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string node_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(node_info, _impl_.node_id_)}},
    // string host = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(node_info, _impl_.host_)}},
    // int32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(node_info, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(node_info, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node_id = 1;
    {PROTOBUF_FIELD_OFFSET(node_info, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string host = 2;
    {PROTOBUF_FIELD_OFFSET(node_info, _impl_.host_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 3;
    {PROTOBUF_FIELD_OFFSET(node_info, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\15\7\4\0\0\0\0\0"
    "mom.node_info"
    "node_id"
    "host"
  }},
};

PROTOBUF_NOINLINE void node_info::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.node_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_id_.ClearToEmpty();
  _impl_.host_.ClearToEmpty();
  _impl_.port_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* node_info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const node_info& this_ = static_cast<const node_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* node_info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const node_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.node_info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node_id = 1;
          if (!this_._internal_node_id().empty()) {
            const std::string& _s = this_._internal_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_info.node_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string host = 2;
          if (!this_._internal_host().empty()) {
            const std::string& _s = this_._internal_host();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_info.host");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 port = 3;
          if (this_._internal_port() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_port(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.node_info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t node_info::ByteSizeLong(const MessageLite& base) {
          const node_info& this_ = static_cast<const node_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t node_info::ByteSizeLong() const {
          const node_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.node_info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string node_id = 1;
            if (!this_._internal_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_id());
            }
            // string host = 2;
            if (!this_._internal_host().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_host());
            }
            // int32 port = 3;
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_port());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void node_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<node_info*>(&to_msg);
  auto& from = static_cast<const node_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.node_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  if (!from._internal_host().empty()) {
    _this->_internal_set_host(from._internal_host());
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void node_info::CopyFrom(const node_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.node_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void node_info::InternalSwap(node_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_, &other->_impl_.host_, arena);
        swap(_impl_.port_, other->_impl_.port_);
}

::google::protobuf::Metadata node_info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class node_assignment::_Internal {
 public:
};

node_assignment::node_assignment(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.node_assignment)
}
inline PROTOBUF_NDEBUG_INLINE node_assignment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::node_assignment& from_msg)
      : replica_nodes_{visibility, arena, from.replica_nodes_},
        primary_node_(arena, from.primary_node_),
        _cached_size_{0} {}

node_assignment::node_assignment(
    ::google::protobuf::Arena* arena,
    const node_assignment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  node_assignment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.node_assignment)
}
inline PROTOBUF_NDEBUG_INLINE node_assignment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : replica_nodes_{visibility, arena},
        primary_node_(arena),
        _cached_size_{0} {}

inline void node_assignment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
node_assignment::~node_assignment() {
  // @@protoc_insertion_point(destructor:mom.node_assignment)
  SharedDtor(*this);
}
inline void node_assignment::SharedDtor(MessageLite& self) {
  node_assignment& this_ = static_cast<node_assignment&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.primary_node_.Destroy();
  this_._impl_.~Impl_();
}

inline void* node_assignment::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) node_assignment(arena);
}
constexpr auto node_assignment::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(node_assignment, _impl_.replica_nodes_) +
          decltype(node_assignment::_impl_.replica_nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(node_assignment), alignof(node_assignment), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&node_assignment::PlacementNew_,
                                 sizeof(node_assignment),
                                 alignof(node_assignment));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull node_assignment::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_node_assignment_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &node_assignment::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<node_assignment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &node_assignment::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<node_assignment>(), &node_assignment::ByteSizeLong,
            &node_assignment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(node_assignment, _impl_._cached_size_),
        false,
    },
    &node_assignment::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* node_assignment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> node_assignment::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::node_assignment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string replica_nodes = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(node_assignment, _impl_.replica_nodes_)}},
    // string primary_node = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(node_assignment, _impl_.primary_node_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string primary_node = 1;
    {PROTOBUF_FIELD_OFFSET(node_assignment, _impl_.primary_node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string replica_nodes = 2;
    {PROTOBUF_FIELD_OFFSET(node_assignment, _impl_.replica_nodes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\23\14\15\0\0\0\0\0"
    "mom.node_assignment"
    "primary_node"
    "replica_nodes"
  }},
};

PROTOBUF_NOINLINE void node_assignment::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.node_assignment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.replica_nodes_.Clear();
  _impl_.primary_node_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* node_assignment::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const node_assignment& this_ = static_cast<const node_assignment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* node_assignment::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const node_assignment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.node_assignment)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string primary_node = 1;
          if (!this_._internal_primary_node().empty()) {
            const std::string& _s = this_._internal_primary_node();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_assignment.primary_node");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string replica_nodes = 2;
          for (int i = 0, n = this_._internal_replica_nodes_size(); i < n; ++i) {
            const auto& s = this_._internal_replica_nodes().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.node_assignment.replica_nodes");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.node_assignment)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t node_assignment::ByteSizeLong(const MessageLite& base) {
          const node_assignment& this_ = static_cast<const node_assignment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t node_assignment::ByteSizeLong() const {
          const node_assignment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.node_assignment)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string replica_nodes = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_replica_nodes().size());
              for (int i = 0, n = this_._internal_replica_nodes().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_replica_nodes().Get(i));
              }
            }
          }
           {
            // string primary_node = 1;
            if (!this_._internal_primary_node().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_primary_node());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void node_assignment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<node_assignment*>(&to_msg);
  auto& from = static_cast<const node_assignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.node_assignment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_replica_nodes()->MergeFrom(from._internal_replica_nodes());
  if (!from._internal_primary_node().empty()) {
    _this->_internal_set_primary_node(from._internal_primary_node());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void node_assignment::CopyFrom(const node_assignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.node_assignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void node_assignment::InternalSwap(node_assignment* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.replica_nodes_.InternalSwap(&other->_impl_.replica_nodes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.primary_node_, &other->_impl_.primary_node_, arena);
}

::google::protobuf::Metadata node_assignment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              cluster_state_TopicAssignmentsEntry_DoNotUse::cluster_state_TopicAssignmentsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              cluster_state_TopicAssignmentsEntry_DoNotUse::cluster_state_TopicAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              cluster_state_TopicAssignmentsEntry_DoNotUse::cluster_state_TopicAssignmentsEntry_DoNotUse() : SuperType() {}
              cluster_state_TopicAssignmentsEntry_DoNotUse::cluster_state_TopicAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* cluster_state_TopicAssignmentsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) cluster_state_TopicAssignmentsEntry_DoNotUse(arena);
              }
              constexpr auto cluster_state_TopicAssignmentsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(cluster_state_TopicAssignmentsEntry_DoNotUse),
                                                          alignof(cluster_state_TopicAssignmentsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull cluster_state_TopicAssignmentsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_cluster_state_TopicAssignmentsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &cluster_state_TopicAssignmentsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<cluster_state_TopicAssignmentsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &cluster_state_TopicAssignmentsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &cluster_state_TopicAssignmentsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &cluster_state_TopicAssignmentsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* cluster_state_TopicAssignmentsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2> cluster_state_TopicAssignmentsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_state_TopicAssignmentsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mom.node_assignment value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mom.node_assignment value = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_state_TopicAssignmentsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::node_assignment>()},
  }}, {{
    "\47\3\0\0\0\0\0\0"
    "mom.cluster_state.TopicAssignmentsEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              cluster_state_QueueAssignmentsEntry_DoNotUse::cluster_state_QueueAssignmentsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              cluster_state_QueueAssignmentsEntry_DoNotUse::cluster_state_QueueAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              cluster_state_QueueAssignmentsEntry_DoNotUse::cluster_state_QueueAssignmentsEntry_DoNotUse() : SuperType() {}
              cluster_state_QueueAssignmentsEntry_DoNotUse::cluster_state_QueueAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* cluster_state_QueueAssignmentsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) cluster_state_QueueAssignmentsEntry_DoNotUse(arena);
              }
              constexpr auto cluster_state_QueueAssignmentsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(cluster_state_QueueAssignmentsEntry_DoNotUse),
                                                          alignof(cluster_state_QueueAssignmentsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull cluster_state_QueueAssignmentsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_cluster_state_QueueAssignmentsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &cluster_state_QueueAssignmentsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<cluster_state_QueueAssignmentsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &cluster_state_QueueAssignmentsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &cluster_state_QueueAssignmentsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &cluster_state_QueueAssignmentsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* cluster_state_QueueAssignmentsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2> cluster_state_QueueAssignmentsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_state_QueueAssignmentsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mom.node_assignment value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mom.node_assignment value = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_state_QueueAssignmentsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::node_assignment>()},
  }}, {{
    "\47\3\0\0\0\0\0\0"
    "mom.cluster_state.QueueAssignmentsEntry"
    "key"
  }},
};

// ===================================================================

class cluster_state::_Internal {
 public:
};

cluster_state::cluster_state(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.cluster_state)
}
inline PROTOBUF_NDEBUG_INLINE cluster_state::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::cluster_state& from_msg)
      : nodes_{visibility, arena, from.nodes_},
        topic_assignments_{visibility, arena, from.topic_assignments_},
        queue_assignments_{visibility, arena, from.queue_assignments_},
        leader_id_(arena, from.leader_id_),
        _cached_size_{0} {}

cluster_state::cluster_state(
    ::google::protobuf::Arena* arena,
    const cluster_state& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  cluster_state* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.cluster_state)
}
inline PROTOBUF_NDEBUG_INLINE cluster_state::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nodes_{visibility, arena},
        topic_assignments_{visibility, arena},
        queue_assignments_{visibility, arena},
        leader_id_(arena),
        _cached_size_{0} {}

inline void cluster_state::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
cluster_state::~cluster_state() {
  // @@protoc_insertion_point(destructor:mom.cluster_state)
  SharedDtor(*this);
}
inline void cluster_state::SharedDtor(MessageLite& self) {
  cluster_state& this_ = static_cast<cluster_state&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.leader_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* cluster_state::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) cluster_state(arena);
}
constexpr auto cluster_state::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.nodes_) +
          decltype(cluster_state::_impl_.nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.topic_assignments_) +
          decltype(cluster_state::_impl_.topic_assignments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.topic_assignments_) +
          decltype(cluster_state::_impl_.topic_assignments_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.queue_assignments_) +
          decltype(cluster_state::_impl_.queue_assignments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.queue_assignments_) +
          decltype(cluster_state::_impl_.queue_assignments_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(cluster_state), alignof(cluster_state), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&cluster_state::PlacementNew_,
                                 sizeof(cluster_state),
                                 alignof(cluster_state));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull cluster_state::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_cluster_state_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &cluster_state::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<cluster_state>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &cluster_state::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<cluster_state>(), &cluster_state::ByteSizeLong,
            &cluster_state::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(cluster_state, _impl_._cached_size_),
        false,
    },
    &cluster_state::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* cluster_state::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 5, 69, 2> cluster_state::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_state>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .mom.node_info nodes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.nodes_)}},
    // string leader_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.leader_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string leader_id = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.leader_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .mom.node_info nodes = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.nodes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .mom.node_assignment> topic_assignments = 3;
    {PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.topic_assignments_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .mom.node_assignment> queue_assignments = 4;
    {PROTOBUF_FIELD_OFFSET(cluster_state, _impl_.queue_assignments_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::node_info>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(cluster_state()._impl_.topic_assignments_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::mom::node_assignment>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(cluster_state()._impl_.queue_assignments_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::mom::node_assignment>()},
  }}, {{
    "\21\11\0\21\21\0\0\0"
    "mom.cluster_state"
    "leader_id"
    "topic_assignments"
    "queue_assignments"
  }},
};

PROTOBUF_NOINLINE void cluster_state::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.cluster_state)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.topic_assignments_.Clear();
  _impl_.queue_assignments_.Clear();
  _impl_.leader_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* cluster_state::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const cluster_state& this_ = static_cast<const cluster_state&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* cluster_state::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const cluster_state& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.cluster_state)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string leader_id = 1;
          if (!this_._internal_leader_id().empty()) {
            const std::string& _s = this_._internal_leader_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_state.leader_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .mom.node_info nodes = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_nodes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_nodes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .mom.node_assignment> topic_assignments = 3;
          if (!this_._internal_topic_assignments().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::mom::node_assignment>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::mom::node_assignment,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_topic_assignments();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_state.topic_assignments");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_state.topic_assignments");
              }
            }
          }

          // map<string, .mom.node_assignment> queue_assignments = 4;
          if (!this_._internal_queue_assignments().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::mom::node_assignment>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::mom::node_assignment,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_queue_assignments();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_state.queue_assignments");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_state.queue_assignments");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.cluster_state)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t cluster_state::ByteSizeLong(const MessageLite& base) {
          const cluster_state& this_ = static_cast<const cluster_state&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t cluster_state::ByteSizeLong() const {
          const cluster_state& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.cluster_state)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom.node_info nodes = 2;
            {
              total_size += 1UL * this_._internal_nodes_size();
              for (const auto& msg : this_._internal_nodes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .mom.node_assignment> topic_assignments = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_topic_assignments_size());
              for (const auto& entry : this_._internal_topic_assignments()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::mom::node_assignment,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, .mom.node_assignment> queue_assignments = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_queue_assignments_size());
              for (const auto& entry : this_._internal_queue_assignments()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::mom::node_assignment,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string leader_id = 1;
            if (!this_._internal_leader_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_leader_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void cluster_state::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<cluster_state*>(&to_msg);
  auto& from = static_cast<const cluster_state&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.cluster_state)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nodes()->MergeFrom(
      from._internal_nodes());
  _this->_impl_.topic_assignments_.MergeFrom(from._impl_.topic_assignments_);
  _this->_impl_.queue_assignments_.MergeFrom(from._impl_.queue_assignments_);
  if (!from._internal_leader_id().empty()) {
    _this->_internal_set_leader_id(from._internal_leader_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void cluster_state::CopyFrom(const cluster_state& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.cluster_state)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void cluster_state::InternalSwap(cluster_state* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  _impl_.topic_assignments_.InternalSwap(&other->_impl_.topic_assignments_);
  _impl_.queue_assignments_.InternalSwap(&other->_impl_.queue_assignments_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leader_id_, &other->_impl_.leader_id_, arena);
}

::google::protobuf::Metadata cluster_state::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class state_response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<state_response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(state_response, _impl_._has_bits_);
};

state_response::state_response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.state_response)
}
inline PROTOBUF_NDEBUG_INLINE state_response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::state_response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        topics_{visibility, arena, from.topics_},
        queues_{visibility, arena, from.queues_},
        error_message_(arena, from.error_message_) {}

state_response::state_response(
    ::google::protobuf::Arena* arena,
    const state_response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  state_response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cluster_state_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::mom::cluster_state>(
                              arena, *from._impl_.cluster_state_)
                        : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:mom.state_response)
}
inline PROTOBUF_NDEBUG_INLINE state_response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        topics_{visibility, arena},
        queues_{visibility, arena},
        error_message_(arena) {}

inline void state_response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cluster_state_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, cluster_state_) +
               sizeof(Impl_::success_));
}
state_response::~state_response() {
  // @@protoc_insertion_point(destructor:mom.state_response)
  SharedDtor(*this);
}
inline void state_response::SharedDtor(MessageLite& self) {
  state_response& this_ = static_cast<state_response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  delete this_._impl_.cluster_state_;
  this_._impl_.~Impl_();
}

inline void* state_response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) state_response(arena);
}
constexpr auto state_response::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(state_response, _impl_.topics_) +
          decltype(state_response::_impl_.topics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(state_response, _impl_.queues_) +
          decltype(state_response::_impl_.queues_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(state_response), alignof(state_response), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&state_response::PlacementNew_,
                                 sizeof(state_response),
                                 alignof(state_response));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull state_response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_state_response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &state_response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<state_response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &state_response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<state_response>(), &state_response::ByteSizeLong,
            &state_response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(state_response, _impl_._cached_size_),
        false,
    },
    &state_response::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* state_response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 40, 2> state_response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(state_response, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::state_response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(state_response, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(state_response, _impl_.success_)}},
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(state_response, _impl_.error_message_)}},
    // repeated .mom.topic topics = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(state_response, _impl_.topics_)}},
    // repeated .mom.queue queues = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(state_response, _impl_.queues_)}},
    // .mom.cluster_state cluster_state = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 2, PROTOBUF_FIELD_OFFSET(state_response, _impl_.cluster_state_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(state_response, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(state_response, _impl_.error_message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .mom.topic topics = 3;
    {PROTOBUF_FIELD_OFFSET(state_response, _impl_.topics_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .mom.queue queues = 4;
    {PROTOBUF_FIELD_OFFSET(state_response, _impl_.queues_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mom.cluster_state cluster_state = 5;
    {PROTOBUF_FIELD_OFFSET(state_response, _impl_.cluster_state_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::topic>()},
    {::_pbi::TcParser::GetTable<::mom::queue>()},
    {::_pbi::TcParser::GetTable<::mom::cluster_state>()},
  }}, {{
    "\22\0\15\0\0\0\0\0"
    "mom.state_response"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void state_response::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.state_response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topics_.Clear();
  _impl_.queues_.Clear();
  _impl_.error_message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.cluster_state_ != nullptr);
    _impl_.cluster_state_->Clear();
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* state_response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const state_response& this_ = static_cast<const state_response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* state_response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const state_response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.state_response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.state_response.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .mom.topic topics = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_topics_size());
               i < n; i++) {
            const auto& repfield = this_._internal_topics().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .mom.queue queues = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_queues_size());
               i < n; i++) {
            const auto& repfield = this_._internal_queues().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .mom.cluster_state cluster_state = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.cluster_state_, this_._impl_.cluster_state_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.state_response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t state_response::ByteSizeLong(const MessageLite& base) {
          const state_response& this_ = static_cast<const state_response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t state_response::ByteSizeLong() const {
          const state_response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.state_response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom.topic topics = 3;
            {
              total_size += 1UL * this_._internal_topics_size();
              for (const auto& msg : this_._internal_topics()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .mom.queue queues = 4;
            {
              total_size += 1UL * this_._internal_queues_size();
              for (const auto& msg : this_._internal_queues()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
          }
           {
            // .mom.cluster_state cluster_state = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cluster_state_);
            }
          }
           {
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void state_response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<state_response*>(&to_msg);
  auto& from = static_cast<const state_response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.state_response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_topics()->MergeFrom(
      from._internal_topics());
  _this->_internal_mutable_queues()->MergeFrom(
      from._internal_queues());
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.cluster_state_ != nullptr);
    if (_this->_impl_.cluster_state_ == nullptr) {
      _this->_impl_.cluster_state_ =
          ::google::protobuf::Message::CopyConstruct<::mom::cluster_state>(arena, *from._impl_.cluster_state_);
    } else {
      _this->_impl_.cluster_state_->MergeFrom(*from._impl_.cluster_state_);
    }
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void state_response::CopyFrom(const state_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.state_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void state_response::InternalSwap(state_response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.topics_.InternalSwap(&other->_impl_.topics_);
  _impl_.queues_.InternalSwap(&other->_impl_.queues_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(state_response, _impl_.success_)
      + sizeof(state_response::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(state_response, _impl_.cluster_state_)>(
          reinterpret_cast<char*>(&_impl_.cluster_state_),
          reinterpret_cast<char*>(&other->_impl_.cluster_state_));
}

::google::protobuf::Metadata state_response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              cluster_info_TopicAssignmentsEntry_DoNotUse::cluster_info_TopicAssignmentsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              cluster_info_TopicAssignmentsEntry_DoNotUse::cluster_info_TopicAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              cluster_info_TopicAssignmentsEntry_DoNotUse::cluster_info_TopicAssignmentsEntry_DoNotUse() : SuperType() {}
              cluster_info_TopicAssignmentsEntry_DoNotUse::cluster_info_TopicAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* cluster_info_TopicAssignmentsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) cluster_info_TopicAssignmentsEntry_DoNotUse(arena);
              }
              constexpr auto cluster_info_TopicAssignmentsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(cluster_info_TopicAssignmentsEntry_DoNotUse),
                                                          alignof(cluster_info_TopicAssignmentsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull cluster_info_TopicAssignmentsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_cluster_info_TopicAssignmentsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &cluster_info_TopicAssignmentsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<cluster_info_TopicAssignmentsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &cluster_info_TopicAssignmentsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &cluster_info_TopicAssignmentsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &cluster_info_TopicAssignmentsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* cluster_info_TopicAssignmentsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> cluster_info_TopicAssignmentsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_info_TopicAssignmentsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mom.node_assignment value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mom.node_assignment value = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_info_TopicAssignmentsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::node_assignment>()},
  }}, {{
    "\46\3\0\0\0\0\0\0"
    "mom.cluster_info.TopicAssignmentsEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              cluster_info_QueueAssignmentsEntry_DoNotUse::cluster_info_QueueAssignmentsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              cluster_info_QueueAssignmentsEntry_DoNotUse::cluster_info_QueueAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              cluster_info_QueueAssignmentsEntry_DoNotUse::cluster_info_QueueAssignmentsEntry_DoNotUse() : SuperType() {}
              cluster_info_QueueAssignmentsEntry_DoNotUse::cluster_info_QueueAssignmentsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* cluster_info_QueueAssignmentsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) cluster_info_QueueAssignmentsEntry_DoNotUse(arena);
              }
              constexpr auto cluster_info_QueueAssignmentsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(cluster_info_QueueAssignmentsEntry_DoNotUse),
                                                          alignof(cluster_info_QueueAssignmentsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull cluster_info_QueueAssignmentsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_cluster_info_QueueAssignmentsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &cluster_info_QueueAssignmentsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<cluster_info_QueueAssignmentsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &cluster_info_QueueAssignmentsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &cluster_info_QueueAssignmentsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &cluster_info_QueueAssignmentsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* cluster_info_QueueAssignmentsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> cluster_info_QueueAssignmentsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_info_QueueAssignmentsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .mom.node_assignment value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mom.node_assignment value = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_info_QueueAssignmentsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::node_assignment>()},
  }}, {{
    "\46\3\0\0\0\0\0\0"
    "mom.cluster_info.QueueAssignmentsEntry"
    "key"
  }},
};

// ===================================================================

class cluster_info::_Internal {
 public:
};

cluster_info::cluster_info(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.cluster_info)
}
inline PROTOBUF_NDEBUG_INLINE cluster_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::cluster_info& from_msg)
      : nodes_{visibility, arena, from.nodes_},
        topic_assignments_{visibility, arena, from.topic_assignments_},
        queue_assignments_{visibility, arena, from.queue_assignments_},
        error_message_(arena, from.error_message_),
        leader_id_(arena, from.leader_id_),
        _cached_size_{0} {}

cluster_info::cluster_info(
    ::google::protobuf::Arena* arena,
    const cluster_info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  cluster_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:mom.cluster_info)
}
inline PROTOBUF_NDEBUG_INLINE cluster_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nodes_{visibility, arena},
        topic_assignments_{visibility, arena},
        queue_assignments_{visibility, arena},
        error_message_(arena),
        leader_id_(arena),
        _cached_size_{0} {}

inline void cluster_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
cluster_info::~cluster_info() {
  // @@protoc_insertion_point(destructor:mom.cluster_info)
  SharedDtor(*this);
}
inline void cluster_info::SharedDtor(MessageLite& self) {
  cluster_info& this_ = static_cast<cluster_info&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.leader_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* cluster_info::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) cluster_info(arena);
}
constexpr auto cluster_info::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.nodes_) +
          decltype(cluster_info::_impl_.nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.topic_assignments_) +
          decltype(cluster_info::_impl_.topic_assignments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.topic_assignments_) +
          decltype(cluster_info::_impl_.topic_assignments_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.queue_assignments_) +
          decltype(cluster_info::_impl_.queue_assignments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.queue_assignments_) +
          decltype(cluster_info::_impl_.queue_assignments_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(cluster_info), alignof(cluster_info), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&cluster_info::PlacementNew_,
                                 sizeof(cluster_info),
                                 alignof(cluster_info));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull cluster_info::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_cluster_info_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &cluster_info::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<cluster_info>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &cluster_info::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<cluster_info>(), &cluster_info::ByteSizeLong,
            &cluster_info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(cluster_info, _impl_._cached_size_),
        false,
    },
    &cluster_info::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* cluster_info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 5, 81, 2> cluster_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::cluster_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .mom.node_info nodes = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.nodes_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(cluster_info, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.success_)}},
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.error_message_)}},
    // string leader_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.leader_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string leader_id = 3;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.leader_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .mom.node_info nodes = 4;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.nodes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .mom.node_assignment> topic_assignments = 5;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.topic_assignments_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .mom.node_assignment> queue_assignments = 6;
    {PROTOBUF_FIELD_OFFSET(cluster_info, _impl_.queue_assignments_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom::node_info>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(cluster_info()._impl_.topic_assignments_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::mom::node_assignment>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(cluster_info()._impl_.queue_assignments_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::mom::node_assignment>()},
  }}, {{
    "\20\0\15\11\0\21\21\0"
    "mom.cluster_info"
    "error_message"
    "leader_id"
    "topic_assignments"
    "queue_assignments"
  }},
};

PROTOBUF_NOINLINE void cluster_info::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.cluster_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.topic_assignments_.Clear();
  _impl_.queue_assignments_.Clear();
  _impl_.error_message_.ClearToEmpty();
  _impl_.leader_id_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* cluster_info::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const cluster_info& this_ = static_cast<const cluster_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* cluster_info::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const cluster_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.cluster_info)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string leader_id = 3;
          if (!this_._internal_leader_id().empty()) {
            const std::string& _s = this_._internal_leader_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.leader_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .mom.node_info nodes = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_nodes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_nodes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .mom.node_assignment> topic_assignments = 5;
          if (!this_._internal_topic_assignments().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::mom::node_assignment>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::mom::node_assignment,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_topic_assignments();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.topic_assignments");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.topic_assignments");
              }
            }
          }

          // map<string, .mom.node_assignment> queue_assignments = 6;
          if (!this_._internal_queue_assignments().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::mom::node_assignment>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::mom::node_assignment,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_queue_assignments();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.queue_assignments");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.cluster_info.queue_assignments");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.cluster_info)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t cluster_info::ByteSizeLong(const MessageLite& base) {
          const cluster_info& this_ = static_cast<const cluster_info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t cluster_info::ByteSizeLong() const {
          const cluster_info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.cluster_info)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom.node_info nodes = 4;
            {
              total_size += 1UL * this_._internal_nodes_size();
              for (const auto& msg : this_._internal_nodes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .mom.node_assignment> topic_assignments = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_topic_assignments_size());
              for (const auto& entry : this_._internal_topic_assignments()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::mom::node_assignment,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, .mom.node_assignment> queue_assignments = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_queue_assignments_size());
              for (const auto& entry : this_._internal_queue_assignments()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::mom::node_assignment,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // string leader_id = 3;
            if (!this_._internal_leader_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_leader_id());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void cluster_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<cluster_info*>(&to_msg);
  auto& from = static_cast<const cluster_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.cluster_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nodes()->MergeFrom(
      from._internal_nodes());
  _this->_impl_.topic_assignments_.MergeFrom(from._impl_.topic_assignments_);
  _this->_impl_.queue_assignments_.MergeFrom(from._impl_.queue_assignments_);
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_leader_id().empty()) {
    _this->_internal_set_leader_id(from._internal_leader_id());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void cluster_info::CopyFrom(const cluster_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.cluster_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void cluster_info::InternalSwap(cluster_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  _impl_.topic_assignments_.InternalSwap(&other->_impl_.topic_assignments_);
  _impl_.queue_assignments_.InternalSwap(&other->_impl_.queue_assignments_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leader_id_, &other->_impl_.leader_id_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata cluster_info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              topic_message_HeadersEntry_DoNotUse::topic_message_HeadersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              topic_message_HeadersEntry_DoNotUse::topic_message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              topic_message_HeadersEntry_DoNotUse::topic_message_HeadersEntry_DoNotUse() : SuperType() {}
              topic_message_HeadersEntry_DoNotUse::topic_message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* topic_message_HeadersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) topic_message_HeadersEntry_DoNotUse(arena);
              }
              constexpr auto topic_message_HeadersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(topic_message_HeadersEntry_DoNotUse),
                                                          alignof(topic_message_HeadersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull topic_message_HeadersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_topic_message_HeadersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &topic_message_HeadersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<topic_message_HeadersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &topic_message_HeadersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &topic_message_HeadersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &topic_message_HeadersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* topic_message_HeadersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> topic_message_HeadersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_message_HeadersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(topic_message_HeadersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\3\5\0\0\0\0\0"
    "mom.topic_message.HeadersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class topic_message::_Internal {
 public:
};

topic_message::topic_message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.topic_message)
}
inline PROTOBUF_NDEBUG_INLINE topic_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::topic_message& from_msg)
      : headers_{visibility, arena, from.headers_},
        topic_name_(arena, from.topic_name_),
        content_(arena, from.content_),
        sender_(arena, from.sender_),
        _cached_size_{0} {}

topic_message::topic_message(
    ::google::protobuf::Arena* arena,
    const topic_message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic_message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.topic_message)
}
inline PROTOBUF_NDEBUG_INLINE topic_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : headers_{visibility, arena},
        topic_name_(arena),
        content_(arena),
        sender_(arena),
        _cached_size_{0} {}

inline void topic_message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
topic_message::~topic_message() {
  // @@protoc_insertion_point(destructor:mom.topic_message)
  SharedDtor(*this);
}
inline void topic_message::SharedDtor(MessageLite& self) {
  topic_message& this_ = static_cast<topic_message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.topic_name_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topic_message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic_message(arena);
}
constexpr auto topic_message::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(topic_message, _impl_.headers_) +
          decltype(topic_message::_impl_.headers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(topic_message, _impl_.headers_) +
          decltype(topic_message::_impl_.headers_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(topic_message), alignof(topic_message), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&topic_message::PlacementNew_,
                                 sizeof(topic_message),
                                 alignof(topic_message));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic_message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic_message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic_message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic_message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic_message>(), &topic_message::ByteSizeLong,
            &topic_message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic_message, _impl_._cached_size_),
        false,
    },
    &topic_message::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic_message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 56, 2> topic_message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string topic_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message, _impl_.topic_name_)}},
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message, _impl_.content_)}},
    // string sender = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(topic_message, _impl_.sender_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string topic_name = 1;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.topic_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender = 3;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> headers = 4;
    {PROTOBUF_FIELD_OFFSET(topic_message, _impl_.headers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(topic_message()._impl_.headers_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\21\12\7\6\7\0\0\0"
    "mom.topic_message"
    "topic_name"
    "content"
    "sender"
    "headers"
  }},
};

PROTOBUF_NOINLINE void topic_message::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.topic_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.headers_.Clear();
  _impl_.topic_name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic_message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic_message& this_ = static_cast<const topic_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic_message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.topic_message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string topic_name = 1;
          if (!this_._internal_topic_name().empty()) {
            const std::string& _s = this_._internal_topic_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.topic_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string content = 2;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.content");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string sender = 3;
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.sender");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // map<string, string> headers = 4;
          if (!this_._internal_headers().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_headers();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.headers");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_message.headers");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.topic_message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic_message::ByteSizeLong(const MessageLite& base) {
          const topic_message& this_ = static_cast<const topic_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic_message::ByteSizeLong() const {
          const topic_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.topic_message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> headers = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_headers_size());
              for (const auto& entry : this_._internal_headers()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string topic_name = 1;
            if (!this_._internal_topic_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_topic_name());
            }
            // string content = 2;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // string sender = 3;
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic_message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic_message*>(&to_msg);
  auto& from = static_cast<const topic_message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.topic_message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  if (!from._internal_topic_name().empty()) {
    _this->_internal_set_topic_name(from._internal_topic_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic_message::CopyFrom(const topic_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.topic_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic_message::InternalSwap(topic_message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_name_, &other->_impl_.topic_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
}

::google::protobuf::Metadata topic_message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              queue_message_HeadersEntry_DoNotUse::queue_message_HeadersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              queue_message_HeadersEntry_DoNotUse::queue_message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              queue_message_HeadersEntry_DoNotUse::queue_message_HeadersEntry_DoNotUse() : SuperType() {}
              queue_message_HeadersEntry_DoNotUse::queue_message_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* queue_message_HeadersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) queue_message_HeadersEntry_DoNotUse(arena);
              }
              constexpr auto queue_message_HeadersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(queue_message_HeadersEntry_DoNotUse),
                                                          alignof(queue_message_HeadersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull queue_message_HeadersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_queue_message_HeadersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &queue_message_HeadersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<queue_message_HeadersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &queue_message_HeadersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &queue_message_HeadersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &queue_message_HeadersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_mom_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* queue_message_HeadersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> queue_message_HeadersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue_message_HeadersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(queue_message_HeadersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\3\5\0\0\0\0\0"
    "mom.queue_message.HeadersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class queue_message::_Internal {
 public:
};

queue_message::queue_message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.queue_message)
}
inline PROTOBUF_NDEBUG_INLINE queue_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::queue_message& from_msg)
      : headers_{visibility, arena, from.headers_},
        queue_name_(arena, from.queue_name_),
        content_(arena, from.content_),
        sender_(arena, from.sender_),
        _cached_size_{0} {}

queue_message::queue_message(
    ::google::protobuf::Arena* arena,
    const queue_message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queue_message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.queue_message)
}
inline PROTOBUF_NDEBUG_INLINE queue_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : headers_{visibility, arena},
        queue_name_(arena),
        content_(arena),
        sender_(arena),
        _cached_size_{0} {}

inline void queue_message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
queue_message::~queue_message() {
  // @@protoc_insertion_point(destructor:mom.queue_message)
  SharedDtor(*this);
}
inline void queue_message::SharedDtor(MessageLite& self) {
  queue_message& this_ = static_cast<queue_message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.queue_name_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.~Impl_();
}

inline void* queue_message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queue_message(arena);
}
constexpr auto queue_message::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(queue_message, _impl_.headers_) +
          decltype(queue_message::_impl_.headers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(queue_message, _impl_.headers_) +
          decltype(queue_message::_impl_.headers_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(queue_message), alignof(queue_message), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&queue_message::PlacementNew_,
                                 sizeof(queue_message),
                                 alignof(queue_message));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queue_message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queue_message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queue_message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queue_message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queue_message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queue_message>(), &queue_message::ByteSizeLong,
            &queue_message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queue_message, _impl_._cached_size_),
        false,
    },
    &queue_message::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queue_message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 56, 2> queue_message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue_message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string queue_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message, _impl_.queue_name_)}},
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message, _impl_.content_)}},
    // string sender = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(queue_message, _impl_.sender_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string queue_name = 1;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.queue_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender = 3;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> headers = 4;
    {PROTOBUF_FIELD_OFFSET(queue_message, _impl_.headers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(queue_message()._impl_.headers_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\21\12\7\6\7\0\0\0"
    "mom.queue_message"
    "queue_name"
    "content"
    "sender"
    "headers"
  }},
};

PROTOBUF_NOINLINE void queue_message::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.queue_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.headers_.Clear();
  _impl_.queue_name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queue_message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queue_message& this_ = static_cast<const queue_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queue_message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queue_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.queue_message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string queue_name = 1;
          if (!this_._internal_queue_name().empty()) {
            const std::string& _s = this_._internal_queue_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.queue_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string content = 2;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.content");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string sender = 3;
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.sender");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // map<string, string> headers = 4;
          if (!this_._internal_headers().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_headers();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.headers");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_message.headers");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.queue_message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queue_message::ByteSizeLong(const MessageLite& base) {
          const queue_message& this_ = static_cast<const queue_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queue_message::ByteSizeLong() const {
          const queue_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.queue_message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> headers = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_headers_size());
              for (const auto& entry : this_._internal_headers()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string queue_name = 1;
            if (!this_._internal_queue_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_queue_name());
            }
            // string content = 2;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // string sender = 3;
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queue_message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queue_message*>(&to_msg);
  auto& from = static_cast<const queue_message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.queue_message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  if (!from._internal_queue_name().empty()) {
    _this->_internal_set_queue_name(from._internal_queue_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queue_message::CopyFrom(const queue_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.queue_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queue_message::InternalSwap(queue_message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.queue_name_, &other->_impl_.queue_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
}

::google::protobuf::Metadata queue_message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class message_status::_Internal {
 public:
};

message_status::message_status(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.message_status)
}
inline PROTOBUF_NDEBUG_INLINE message_status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::message_status& from_msg)
      : error_message_(arena, from.error_message_),
        _cached_size_{0} {}

message_status::message_status(
    ::google::protobuf::Arena* arena,
    const message_status& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  message_status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:mom.message_status)
}
inline PROTOBUF_NDEBUG_INLINE message_status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        _cached_size_{0} {}

inline void message_status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
message_status::~message_status() {
  // @@protoc_insertion_point(destructor:mom.message_status)
  SharedDtor(*this);
}
inline void message_status::SharedDtor(MessageLite& self) {
  message_status& this_ = static_cast<message_status&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* message_status::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) message_status(arena);
}
constexpr auto message_status::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(message_status),
                                            alignof(message_status));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull message_status::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_message_status_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &message_status::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<message_status>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &message_status::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<message_status>(), &message_status::ByteSizeLong,
            &message_status::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(message_status, _impl_._cached_size_),
        false,
    },
    &message_status::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* message_status::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> message_status::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::message_status>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(message_status, _impl_.error_message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(message_status, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(message_status, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(message_status, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(message_status, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\15\0\0\0\0\0"
    "mom.message_status"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void message_status::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.message_status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* message_status::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const message_status& this_ = static_cast<const message_status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* message_status::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const message_status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.message_status)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.message_status.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.message_status)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t message_status::ByteSizeLong(const MessageLite& base) {
          const message_status& this_ = static_cast<const message_status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t message_status::ByteSizeLong() const {
          const message_status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.message_status)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void message_status::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<message_status*>(&to_msg);
  auto& from = static_cast<const message_status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.message_status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void message_status::CopyFrom(const message_status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.message_status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void message_status::InternalSwap(message_status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata message_status::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class topic_id::_Internal {
 public:
};

topic_id::topic_id(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.topic_id)
}
inline PROTOBUF_NDEBUG_INLINE topic_id::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::topic_id& from_msg)
      : topic_name_(arena, from.topic_name_),
        _cached_size_{0} {}

topic_id::topic_id(
    ::google::protobuf::Arena* arena,
    const topic_id& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic_id* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.topic_id)
}
inline PROTOBUF_NDEBUG_INLINE topic_id::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : topic_name_(arena),
        _cached_size_{0} {}

inline void topic_id::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
topic_id::~topic_id() {
  // @@protoc_insertion_point(destructor:mom.topic_id)
  SharedDtor(*this);
}
inline void topic_id::SharedDtor(MessageLite& self) {
  topic_id& this_ = static_cast<topic_id&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.topic_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topic_id::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic_id(arena);
}
constexpr auto topic_id::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(topic_id),
                                            alignof(topic_id));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic_id::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_id_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic_id::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic_id>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic_id::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic_id>(), &topic_id::ByteSizeLong,
            &topic_id::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic_id, _impl_._cached_size_),
        false,
    },
    &topic_id::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic_id::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 31, 2> topic_id::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::topic_id>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string topic_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_id, _impl_.topic_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string topic_name = 1;
    {PROTOBUF_FIELD_OFFSET(topic_id, _impl_.topic_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\12\0\0\0\0\0\0"
    "mom.topic_id"
    "topic_name"
  }},
};

PROTOBUF_NOINLINE void topic_id::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.topic_id)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topic_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic_id::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic_id& this_ = static_cast<const topic_id&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic_id::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic_id& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.topic_id)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string topic_name = 1;
          if (!this_._internal_topic_name().empty()) {
            const std::string& _s = this_._internal_topic_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.topic_id.topic_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.topic_id)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic_id::ByteSizeLong(const MessageLite& base) {
          const topic_id& this_ = static_cast<const topic_id&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic_id::ByteSizeLong() const {
          const topic_id& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.topic_id)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string topic_name = 1;
            if (!this_._internal_topic_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_topic_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic_id::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic_id*>(&to_msg);
  auto& from = static_cast<const topic_id&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.topic_id)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_topic_name().empty()) {
    _this->_internal_set_topic_name(from._internal_topic_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic_id::CopyFrom(const topic_id& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.topic_id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic_id::InternalSwap(topic_id* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_name_, &other->_impl_.topic_name_, arena);
}

::google::protobuf::Metadata topic_id::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class queue_id::_Internal {
 public:
};

queue_id::queue_id(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom.queue_id)
}
inline PROTOBUF_NDEBUG_INLINE queue_id::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom::queue_id& from_msg)
      : queue_name_(arena, from.queue_name_),
        _cached_size_{0} {}

queue_id::queue_id(
    ::google::protobuf::Arena* arena,
    const queue_id& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queue_id* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom.queue_id)
}
inline PROTOBUF_NDEBUG_INLINE queue_id::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : queue_name_(arena),
        _cached_size_{0} {}

inline void queue_id::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
queue_id::~queue_id() {
  // @@protoc_insertion_point(destructor:mom.queue_id)
  SharedDtor(*this);
}
inline void queue_id::SharedDtor(MessageLite& self) {
  queue_id& this_ = static_cast<queue_id&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.queue_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* queue_id::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queue_id(arena);
}
constexpr auto queue_id::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(queue_id),
                                            alignof(queue_id));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queue_id::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queue_id_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queue_id::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queue_id>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queue_id::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queue_id>(), &queue_id::ByteSizeLong,
            &queue_id::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queue_id, _impl_._cached_size_),
        false,
    },
    &queue_id::kDescriptorMethods,
    &descriptor_table_mom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queue_id::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 31, 2> queue_id::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom::queue_id>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string queue_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_id, _impl_.queue_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string queue_name = 1;
    {PROTOBUF_FIELD_OFFSET(queue_id, _impl_.queue_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\12\0\0\0\0\0\0"
    "mom.queue_id"
    "queue_name"
  }},
};

PROTOBUF_NOINLINE void queue_id::Clear() {
// @@protoc_insertion_point(message_clear_start:mom.queue_id)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.queue_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queue_id::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queue_id& this_ = static_cast<const queue_id&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queue_id::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queue_id& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom.queue_id)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string queue_name = 1;
          if (!this_._internal_queue_name().empty()) {
            const std::string& _s = this_._internal_queue_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom.queue_id.queue_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom.queue_id)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queue_id::ByteSizeLong(const MessageLite& base) {
          const queue_id& this_ = static_cast<const queue_id&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queue_id::ByteSizeLong() const {
          const queue_id& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom.queue_id)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string queue_name = 1;
            if (!this_._internal_queue_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_queue_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queue_id::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queue_id*>(&to_msg);
  auto& from = static_cast<const queue_id&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom.queue_id)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_queue_name().empty()) {
    _this->_internal_set_queue_name(from._internal_queue_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queue_id::CopyFrom(const queue_id& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom.queue_id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queue_id::InternalSwap(queue_id* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.queue_name_, &other->_impl_.queue_name_, arena);
}

::google::protobuf::Metadata queue_id::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace mom
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_mom_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
