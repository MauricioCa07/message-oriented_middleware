// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mom_to_mom.proto
// Protobuf C++ Version: 5.29.0

#include "mom_to_mom.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mom_to_mom {

inline constexpr topic_subscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topic_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        topic_owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscriber_queue_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscriber_queue_owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        durable_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topic_subscription::topic_subscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topic_subscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topic_subscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topic_subscriptionDefaultTypeInternal() {}
  union {
    topic_subscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topic_subscriptionDefaultTypeInternal _topic_subscription_default_instance_;

inline constexpr structure_message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : structure_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        persistent_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR structure_message::structure_message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct structure_messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR structure_messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~structure_messageDefaultTypeInternal() {}
  union {
    structure_message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 structure_messageDefaultTypeInternal _structure_message_default_instance_;

inline constexpr status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR status::status(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct statusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR statusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~statusDefaultTypeInternal() {}
  union {
    status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 statusDefaultTypeInternal _status_default_instance_;

inline constexpr queue_identifier::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR queue_identifier::queue_identifier(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queue_identifierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queue_identifierDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queue_identifierDefaultTypeInternal() {}
  union {
    queue_identifier _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queue_identifierDefaultTypeInternal _queue_identifier_default_instance_;

inline constexpr message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        persistent_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR message::message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~messageDefaultTypeInternal() {}
  union {
    message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 messageDefaultTypeInternal _message_default_instance_;

inline constexpr queue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : messages_{},
        queue_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        queue_owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_stamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR queue::queue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct queueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~queueDefaultTypeInternal() {}
  union {
    queue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queueDefaultTypeInternal _queue_default_instance_;

inline constexpr topic::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : subscribed_queues_{},
        topic_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        topic_owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_stamp_{::int64_t{0}},
        message_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR topic::topic(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct topicDefaultTypeInternal {
  PROTOBUF_CONSTEXPR topicDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~topicDefaultTypeInternal() {}
  union {
    topic _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 topicDefaultTypeInternal _topic_default_instance_;
}  // namespace mom_to_mom
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_mom_5fto_5fmom_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mom_5fto_5fmom_2eproto = nullptr;
const ::uint32_t
    TableStruct_mom_5fto_5fmom_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::message, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::message, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::message, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::message, _impl_.persistent_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::queue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::queue, _impl_.queue_name_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::queue, _impl_.queue_owner_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::queue, _impl_.creation_stamp_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::queue, _impl_.messages_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic, _impl_.topic_name_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic, _impl_.topic_owner_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic, _impl_.creation_stamp_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic, _impl_.subscribed_queues_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic, _impl_.message_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::status, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::status, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::status, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic_subscription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic_subscription, _impl_.topic_name_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic_subscription, _impl_.topic_owner_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic_subscription, _impl_.subscriber_queue_name_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic_subscription, _impl_.subscriber_queue_owner_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::topic_subscription, _impl_.durable_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::structure_message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::structure_message, _impl_.structure_name_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::structure_message, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::structure_message, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::structure_message, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::structure_message, _impl_.persistent_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::queue_identifier, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::queue_identifier, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::mom_to_mom::queue_identifier, _impl_.owner_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mom_to_mom::message)},
        {12, -1, -1, sizeof(::mom_to_mom::queue)},
        {24, -1, -1, sizeof(::mom_to_mom::topic)},
        {37, -1, -1, sizeof(::mom_to_mom::status)},
        {47, -1, -1, sizeof(::mom_to_mom::topic_subscription)},
        {60, -1, -1, sizeof(::mom_to_mom::structure_message)},
        {73, -1, -1, sizeof(::mom_to_mom::queue_identifier)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::mom_to_mom::_message_default_instance_._instance,
    &::mom_to_mom::_queue_default_instance_._instance,
    &::mom_to_mom::_topic_default_instance_._instance,
    &::mom_to_mom::_status_default_instance_._instance,
    &::mom_to_mom::_topic_subscription_default_instance_._instance,
    &::mom_to_mom::_structure_message_default_instance_._instance,
    &::mom_to_mom::_queue_identifier_default_instance_._instance,
};
const char descriptor_table_protodef_mom_5fto_5fmom_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020mom_to_mom.proto\022\nmom_to_mom\"Q\n\007messag"
    "e\022\017\n\007content\030\001 \001(\t\022\016\n\006sender\030\002 \001(\t\022\021\n\tti"
    "mestamp\030\003 \001(\003\022\022\n\npersistent\030\004 \001(\010\"o\n\005que"
    "ue\022\022\n\nqueue_name\030\001 \001(\t\022\023\n\013queue_owner\030\002 "
    "\001(\t\022\026\n\016creation_stamp\030\003 \001(\003\022%\n\010messages\030"
    "\004 \003(\0132\023.mom_to_mom.message\"\215\001\n\005topic\022\022\n\n"
    "topic_name\030\001 \001(\t\022\023\n\013topic_owner\030\002 \001(\t\022\026\n"
    "\016creation_stamp\030\003 \001(\003\022,\n\021subscribed_queu"
    "es\030\004 \003(\0132\021.mom_to_mom.queue\022\025\n\rmessage_c"
    "ount\030\005 \001(\005\"*\n\006status\022\017\n\007success\030\001 \001(\010\022\017\n"
    "\007message\030\002 \001(\t\"\215\001\n\022topic_subscription\022\022\n"
    "\ntopic_name\030\001 \001(\t\022\023\n\013topic_owner\030\002 \001(\t\022\035"
    "\n\025subscriber_queue_name\030\003 \001(\t\022\036\n\026subscri"
    "ber_queue_owner\030\004 \001(\t\022\017\n\007durable\030\005 \001(\010\"s"
    "\n\021structure_message\022\026\n\016structure_name\030\001 "
    "\001(\t\022\017\n\007content\030\002 \001(\t\022\016\n\006sender\030\003 \001(\t\022\021\n\t"
    "timestamp\030\004 \001(\003\022\022\n\npersistent\030\005 \001(\010\"/\n\020q"
    "ueue_identifier\022\014\n\004name\030\001 \001(\t\022\r\n\005owner\030\002"
    " \001(\t2\223\006\n\023MOM_cluster_service\0228\n\017replicat"
    "e_topic\022\021.mom_to_mom.topic\032\022.mom_to_mom."
    "status\0228\n\017replicate_queue\022\021.mom_to_mom.q"
    "ueue\032\022.mom_to_mom.status\022\?\n\026replicate_de"
    "lete_queue\022\021.mom_to_mom.queue\032\022.mom_to_m"
    "om.status\022\?\n\026replicate_delete_topic\022\021.mo"
    "m_to_mom.topic\032\022.mom_to_mom.status\022R\n\034re"
    "plicate_topic_subscription\022\036.mom_to_mom."
    "topic_subscription\032\022.mom_to_mom.status\022T"
    "\n\036replicate_topic_unsubscription\022\036.mom_t"
    "o_mom.topic_subscription\032\022.mom_to_mom.st"
    "atus\022L\n\027replicate_queue_message\022\035.mom_to"
    "_mom.structure_message\032\022.mom_to_mom.stat"
    "us\022L\n\027replicate_topic_message\022\035.mom_to_m"
    "om.structure_message\032\022.mom_to_mom.status"
    "\022^\n\037replicate_receive_queue_message\022\034.mo"
    "m_to_mom.queue_identifier\032\035.mom_to_mom.s"
    "tructure_message\022`\n\037replicate_receive_to"
    "pic_message\022\036.mom_to_mom.topic_subscript"
    "ion\032\035.mom_to_mom.structure_messageb\006prot"
    "o3"
};
static ::absl::once_flag descriptor_table_mom_5fto_5fmom_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_mom_5fto_5fmom_2eproto = {
    false,
    false,
    1522,
    descriptor_table_protodef_mom_5fto_5fmom_2eproto,
    "mom_to_mom.proto",
    &descriptor_table_mom_5fto_5fmom_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_mom_5fto_5fmom_2eproto::offsets,
    file_level_enum_descriptors_mom_5fto_5fmom_2eproto,
    file_level_service_descriptors_mom_5fto_5fmom_2eproto,
};
namespace mom_to_mom {
// ===================================================================

class message::_Internal {
 public:
};

message::message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom_to_mom.message)
}
inline PROTOBUF_NDEBUG_INLINE message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom_to_mom::message& from_msg)
      : content_(arena, from.content_),
        sender_(arena, from.sender_),
        _cached_size_{0} {}

message::message(
    ::google::protobuf::Arena* arena,
    const message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, persistent_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::persistent_));

  // @@protoc_insertion_point(copy_constructor:mom_to_mom.message)
}
inline PROTOBUF_NDEBUG_INLINE message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : content_(arena),
        sender_(arena),
        _cached_size_{0} {}

inline void message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, persistent_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::persistent_));
}
message::~message() {
  // @@protoc_insertion_point(destructor:mom_to_mom.message)
  SharedDtor(*this);
}
inline void message::SharedDtor(MessageLite& self) {
  message& this_ = static_cast<message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.content_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.~Impl_();
}

inline void* message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) message(arena);
}
constexpr auto message::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(message),
                                            alignof(message));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<message>(), &message::ByteSizeLong,
            &message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(message, _impl_._cached_size_),
        false,
    },
    &message::kDescriptorMethods,
    &descriptor_table_mom_5fto_5fmom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 40, 2> message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom_to_mom::message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool persistent = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(message, _impl_.persistent_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.persistent_)}},
    // string content = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.content_)}},
    // string sender = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.sender_)}},
    // int64 timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(message, _impl_.timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(message, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string content = 1;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender = 2;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool persistent = 4;
    {PROTOBUF_FIELD_OFFSET(message, _impl_.persistent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\22\7\6\0\0\0\0\0"
    "mom_to_mom.message"
    "content"
    "sender"
  }},
};

PROTOBUF_NOINLINE void message::Clear() {
// @@protoc_insertion_point(message_clear_start:mom_to_mom.message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.persistent_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.persistent_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const message& this_ = static_cast<const message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom_to_mom.message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string content = 1;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.message.content");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string sender = 2;
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.message.sender");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 timestamp = 3;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_timestamp(), target);
          }

          // bool persistent = 4;
          if (this_._internal_persistent() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_persistent(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom_to_mom.message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t message::ByteSizeLong(const MessageLite& base) {
          const message& this_ = static_cast<const message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t message::ByteSizeLong() const {
          const message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom_to_mom.message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string content = 1;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // string sender = 2;
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
            // int64 timestamp = 3;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
            // bool persistent = 4;
            if (this_._internal_persistent() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<message*>(&to_msg);
  auto& from = static_cast<const message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom_to_mom.message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_persistent() != 0) {
    _this->_impl_.persistent_ = from._impl_.persistent_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void message::CopyFrom(const message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom_to_mom.message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void message::InternalSwap(message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(message, _impl_.persistent_)
      + sizeof(message::_impl_.persistent_)
      - PROTOBUF_FIELD_OFFSET(message, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class queue::_Internal {
 public:
};

queue::queue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom_to_mom.queue)
}
inline PROTOBUF_NDEBUG_INLINE queue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom_to_mom::queue& from_msg)
      : messages_{visibility, arena, from.messages_},
        queue_name_(arena, from.queue_name_),
        queue_owner_(arena, from.queue_owner_),
        _cached_size_{0} {}

queue::queue(
    ::google::protobuf::Arena* arena,
    const queue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.creation_stamp_ = from._impl_.creation_stamp_;

  // @@protoc_insertion_point(copy_constructor:mom_to_mom.queue)
}
inline PROTOBUF_NDEBUG_INLINE queue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : messages_{visibility, arena},
        queue_name_(arena),
        queue_owner_(arena),
        _cached_size_{0} {}

inline void queue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.creation_stamp_ = {};
}
queue::~queue() {
  // @@protoc_insertion_point(destructor:mom_to_mom.queue)
  SharedDtor(*this);
}
inline void queue::SharedDtor(MessageLite& self) {
  queue& this_ = static_cast<queue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.queue_name_.Destroy();
  this_._impl_.queue_owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* queue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queue(arena);
}
constexpr auto queue::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(queue, _impl_.messages_) +
          decltype(queue::_impl_.messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(queue), alignof(queue), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&queue::PlacementNew_,
                                 sizeof(queue),
                                 alignof(queue));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queue::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queue::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queue::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queue>(), &queue::ByteSizeLong,
            &queue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queue, _impl_._cached_size_),
        false,
    },
    &queue::kDescriptorMethods,
    &descriptor_table_mom_5fto_5fmom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 46, 2> queue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom_to_mom::queue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .mom_to_mom.message messages = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(queue, _impl_.messages_)}},
    // string queue_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue, _impl_.queue_name_)}},
    // string queue_owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue, _impl_.queue_owner_)}},
    // int64 creation_stamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(queue, _impl_.creation_stamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(queue, _impl_.creation_stamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string queue_name = 1;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.queue_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string queue_owner = 2;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.queue_owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 creation_stamp = 3;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.creation_stamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .mom_to_mom.message messages = 4;
    {PROTOBUF_FIELD_OFFSET(queue, _impl_.messages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom_to_mom::message>()},
  }}, {{
    "\20\12\13\0\0\0\0\0"
    "mom_to_mom.queue"
    "queue_name"
    "queue_owner"
  }},
};

PROTOBUF_NOINLINE void queue::Clear() {
// @@protoc_insertion_point(message_clear_start:mom_to_mom.queue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _impl_.queue_name_.ClearToEmpty();
  _impl_.queue_owner_.ClearToEmpty();
  _impl_.creation_stamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queue& this_ = static_cast<const queue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom_to_mom.queue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string queue_name = 1;
          if (!this_._internal_queue_name().empty()) {
            const std::string& _s = this_._internal_queue_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.queue.queue_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string queue_owner = 2;
          if (!this_._internal_queue_owner().empty()) {
            const std::string& _s = this_._internal_queue_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.queue.queue_owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 creation_stamp = 3;
          if (this_._internal_creation_stamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_creation_stamp(), target);
          }

          // repeated .mom_to_mom.message messages = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_messages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_messages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom_to_mom.queue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queue::ByteSizeLong(const MessageLite& base) {
          const queue& this_ = static_cast<const queue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queue::ByteSizeLong() const {
          const queue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom_to_mom.queue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom_to_mom.message messages = 4;
            {
              total_size += 1UL * this_._internal_messages_size();
              for (const auto& msg : this_._internal_messages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string queue_name = 1;
            if (!this_._internal_queue_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_queue_name());
            }
            // string queue_owner = 2;
            if (!this_._internal_queue_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_queue_owner());
            }
            // int64 creation_stamp = 3;
            if (this_._internal_creation_stamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_creation_stamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queue*>(&to_msg);
  auto& from = static_cast<const queue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom_to_mom.queue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(
      from._internal_messages());
  if (!from._internal_queue_name().empty()) {
    _this->_internal_set_queue_name(from._internal_queue_name());
  }
  if (!from._internal_queue_owner().empty()) {
    _this->_internal_set_queue_owner(from._internal_queue_owner());
  }
  if (from._internal_creation_stamp() != 0) {
    _this->_impl_.creation_stamp_ = from._impl_.creation_stamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queue::CopyFrom(const queue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom_to_mom.queue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queue::InternalSwap(queue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.queue_name_, &other->_impl_.queue_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.queue_owner_, &other->_impl_.queue_owner_, arena);
        swap(_impl_.creation_stamp_, other->_impl_.creation_stamp_);
}

::google::protobuf::Metadata queue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class topic::_Internal {
 public:
};

topic::topic(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom_to_mom.topic)
}
inline PROTOBUF_NDEBUG_INLINE topic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom_to_mom::topic& from_msg)
      : subscribed_queues_{visibility, arena, from.subscribed_queues_},
        topic_name_(arena, from.topic_name_),
        topic_owner_(arena, from.topic_owner_),
        _cached_size_{0} {}

topic::topic(
    ::google::protobuf::Arena* arena,
    const topic& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_stamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, creation_stamp_),
           offsetof(Impl_, message_count_) -
               offsetof(Impl_, creation_stamp_) +
               sizeof(Impl_::message_count_));

  // @@protoc_insertion_point(copy_constructor:mom_to_mom.topic)
}
inline PROTOBUF_NDEBUG_INLINE topic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : subscribed_queues_{visibility, arena},
        topic_name_(arena),
        topic_owner_(arena),
        _cached_size_{0} {}

inline void topic::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_stamp_),
           0,
           offsetof(Impl_, message_count_) -
               offsetof(Impl_, creation_stamp_) +
               sizeof(Impl_::message_count_));
}
topic::~topic() {
  // @@protoc_insertion_point(destructor:mom_to_mom.topic)
  SharedDtor(*this);
}
inline void topic::SharedDtor(MessageLite& self) {
  topic& this_ = static_cast<topic&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.topic_name_.Destroy();
  this_._impl_.topic_owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topic::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic(arena);
}
constexpr auto topic::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(topic, _impl_.subscribed_queues_) +
          decltype(topic::_impl_.subscribed_queues_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(topic), alignof(topic), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&topic::PlacementNew_,
                                 sizeof(topic),
                                 alignof(topic));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic>(), &topic::ByteSizeLong,
            &topic::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic, _impl_._cached_size_),
        false,
    },
    &topic::kDescriptorMethods,
    &descriptor_table_mom_5fto_5fmom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 46, 2> topic::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom_to_mom::topic>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string topic_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.topic_name_)}},
    // string topic_owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.topic_owner_)}},
    // int64 creation_stamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(topic, _impl_.creation_stamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.creation_stamp_)}},
    // repeated .mom_to_mom.queue subscribed_queues = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.subscribed_queues_)}},
    // int32 message_count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(topic, _impl_.message_count_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(topic, _impl_.message_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string topic_name = 1;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.topic_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string topic_owner = 2;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.topic_owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 creation_stamp = 3;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.creation_stamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .mom_to_mom.queue subscribed_queues = 4;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.subscribed_queues_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 message_count = 5;
    {PROTOBUF_FIELD_OFFSET(topic, _impl_.message_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mom_to_mom::queue>()},
  }}, {{
    "\20\12\13\0\0\0\0\0"
    "mom_to_mom.topic"
    "topic_name"
    "topic_owner"
  }},
};

PROTOBUF_NOINLINE void topic::Clear() {
// @@protoc_insertion_point(message_clear_start:mom_to_mom.topic)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subscribed_queues_.Clear();
  _impl_.topic_name_.ClearToEmpty();
  _impl_.topic_owner_.ClearToEmpty();
  ::memset(&_impl_.creation_stamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.message_count_) -
      reinterpret_cast<char*>(&_impl_.creation_stamp_)) + sizeof(_impl_.message_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic& this_ = static_cast<const topic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom_to_mom.topic)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string topic_name = 1;
          if (!this_._internal_topic_name().empty()) {
            const std::string& _s = this_._internal_topic_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.topic.topic_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string topic_owner = 2;
          if (!this_._internal_topic_owner().empty()) {
            const std::string& _s = this_._internal_topic_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.topic.topic_owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 creation_stamp = 3;
          if (this_._internal_creation_stamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_creation_stamp(), target);
          }

          // repeated .mom_to_mom.queue subscribed_queues = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_subscribed_queues_size());
               i < n; i++) {
            const auto& repfield = this_._internal_subscribed_queues().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 message_count = 5;
          if (this_._internal_message_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_message_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom_to_mom.topic)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic::ByteSizeLong(const MessageLite& base) {
          const topic& this_ = static_cast<const topic&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic::ByteSizeLong() const {
          const topic& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom_to_mom.topic)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mom_to_mom.queue subscribed_queues = 4;
            {
              total_size += 1UL * this_._internal_subscribed_queues_size();
              for (const auto& msg : this_._internal_subscribed_queues()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string topic_name = 1;
            if (!this_._internal_topic_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_topic_name());
            }
            // string topic_owner = 2;
            if (!this_._internal_topic_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_topic_owner());
            }
            // int64 creation_stamp = 3;
            if (this_._internal_creation_stamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_creation_stamp());
            }
            // int32 message_count = 5;
            if (this_._internal_message_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_message_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic*>(&to_msg);
  auto& from = static_cast<const topic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom_to_mom.topic)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_subscribed_queues()->MergeFrom(
      from._internal_subscribed_queues());
  if (!from._internal_topic_name().empty()) {
    _this->_internal_set_topic_name(from._internal_topic_name());
  }
  if (!from._internal_topic_owner().empty()) {
    _this->_internal_set_topic_owner(from._internal_topic_owner());
  }
  if (from._internal_creation_stamp() != 0) {
    _this->_impl_.creation_stamp_ = from._impl_.creation_stamp_;
  }
  if (from._internal_message_count() != 0) {
    _this->_impl_.message_count_ = from._impl_.message_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic::CopyFrom(const topic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom_to_mom.topic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic::InternalSwap(topic* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.subscribed_queues_.InternalSwap(&other->_impl_.subscribed_queues_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_name_, &other->_impl_.topic_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_owner_, &other->_impl_.topic_owner_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(topic, _impl_.message_count_)
      + sizeof(topic::_impl_.message_count_)
      - PROTOBUF_FIELD_OFFSET(topic, _impl_.creation_stamp_)>(
          reinterpret_cast<char*>(&_impl_.creation_stamp_),
          reinterpret_cast<char*>(&other->_impl_.creation_stamp_));
}

::google::protobuf::Metadata topic::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class status::_Internal {
 public:
};

status::status(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom_to_mom.status)
}
inline PROTOBUF_NDEBUG_INLINE status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom_to_mom::status& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

status::status(
    ::google::protobuf::Arena* arena,
    const status& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:mom_to_mom.status)
}
inline PROTOBUF_NDEBUG_INLINE status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
status::~status() {
  // @@protoc_insertion_point(destructor:mom_to_mom.status)
  SharedDtor(*this);
}
inline void status::SharedDtor(MessageLite& self) {
  status& this_ = static_cast<status&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* status::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) status(arena);
}
constexpr auto status::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(status),
                                            alignof(status));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull status::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_status_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &status::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<status>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &status::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<status>(), &status::ByteSizeLong,
            &status::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(status, _impl_._cached_size_),
        false,
    },
    &status::kDescriptorMethods,
    &descriptor_table_mom_5fto_5fmom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* status::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 33, 2> status::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom_to_mom::status>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(status, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(status, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(status, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(status, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(status, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\0\7\0\0\0\0\0"
    "mom_to_mom.status"
    "message"
  }},
};

PROTOBUF_NOINLINE void status::Clear() {
// @@protoc_insertion_point(message_clear_start:mom_to_mom.status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* status::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const status& this_ = static_cast<const status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* status::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom_to_mom.status)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.status.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom_to_mom.status)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t status::ByteSizeLong(const MessageLite& base) {
          const status& this_ = static_cast<const status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t status::ByteSizeLong() const {
          const status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom_to_mom.status)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void status::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<status*>(&to_msg);
  auto& from = static_cast<const status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom_to_mom.status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void status::CopyFrom(const status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom_to_mom.status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void status::InternalSwap(status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata status::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class topic_subscription::_Internal {
 public:
};

topic_subscription::topic_subscription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom_to_mom.topic_subscription)
}
inline PROTOBUF_NDEBUG_INLINE topic_subscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom_to_mom::topic_subscription& from_msg)
      : topic_name_(arena, from.topic_name_),
        topic_owner_(arena, from.topic_owner_),
        subscriber_queue_name_(arena, from.subscriber_queue_name_),
        subscriber_queue_owner_(arena, from.subscriber_queue_owner_),
        _cached_size_{0} {}

topic_subscription::topic_subscription(
    ::google::protobuf::Arena* arena,
    const topic_subscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  topic_subscription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.durable_ = from._impl_.durable_;

  // @@protoc_insertion_point(copy_constructor:mom_to_mom.topic_subscription)
}
inline PROTOBUF_NDEBUG_INLINE topic_subscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : topic_name_(arena),
        topic_owner_(arena),
        subscriber_queue_name_(arena),
        subscriber_queue_owner_(arena),
        _cached_size_{0} {}

inline void topic_subscription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.durable_ = {};
}
topic_subscription::~topic_subscription() {
  // @@protoc_insertion_point(destructor:mom_to_mom.topic_subscription)
  SharedDtor(*this);
}
inline void topic_subscription::SharedDtor(MessageLite& self) {
  topic_subscription& this_ = static_cast<topic_subscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.topic_name_.Destroy();
  this_._impl_.topic_owner_.Destroy();
  this_._impl_.subscriber_queue_name_.Destroy();
  this_._impl_.subscriber_queue_owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* topic_subscription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) topic_subscription(arena);
}
constexpr auto topic_subscription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(topic_subscription),
                                            alignof(topic_subscription));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull topic_subscription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_topic_subscription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &topic_subscription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<topic_subscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &topic_subscription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<topic_subscription>(), &topic_subscription::ByteSizeLong,
            &topic_subscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_._cached_size_),
        false,
    },
    &topic_subscription::kDescriptorMethods,
    &descriptor_table_mom_5fto_5fmom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* topic_subscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 102, 2> topic_subscription::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom_to_mom::topic_subscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string topic_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.topic_name_)}},
    // string topic_owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.topic_owner_)}},
    // string subscriber_queue_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.subscriber_queue_name_)}},
    // string subscriber_queue_owner = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.subscriber_queue_owner_)}},
    // bool durable = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(topic_subscription, _impl_.durable_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.durable_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string topic_name = 1;
    {PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.topic_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string topic_owner = 2;
    {PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.topic_owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscriber_queue_name = 3;
    {PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.subscriber_queue_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscriber_queue_owner = 4;
    {PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.subscriber_queue_owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool durable = 5;
    {PROTOBUF_FIELD_OFFSET(topic_subscription, _impl_.durable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\35\12\13\25\26\0\0\0"
    "mom_to_mom.topic_subscription"
    "topic_name"
    "topic_owner"
    "subscriber_queue_name"
    "subscriber_queue_owner"
  }},
};

PROTOBUF_NOINLINE void topic_subscription::Clear() {
// @@protoc_insertion_point(message_clear_start:mom_to_mom.topic_subscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topic_name_.ClearToEmpty();
  _impl_.topic_owner_.ClearToEmpty();
  _impl_.subscriber_queue_name_.ClearToEmpty();
  _impl_.subscriber_queue_owner_.ClearToEmpty();
  _impl_.durable_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* topic_subscription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const topic_subscription& this_ = static_cast<const topic_subscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* topic_subscription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const topic_subscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom_to_mom.topic_subscription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string topic_name = 1;
          if (!this_._internal_topic_name().empty()) {
            const std::string& _s = this_._internal_topic_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.topic_subscription.topic_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string topic_owner = 2;
          if (!this_._internal_topic_owner().empty()) {
            const std::string& _s = this_._internal_topic_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.topic_subscription.topic_owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string subscriber_queue_name = 3;
          if (!this_._internal_subscriber_queue_name().empty()) {
            const std::string& _s = this_._internal_subscriber_queue_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.topic_subscription.subscriber_queue_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string subscriber_queue_owner = 4;
          if (!this_._internal_subscriber_queue_owner().empty()) {
            const std::string& _s = this_._internal_subscriber_queue_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.topic_subscription.subscriber_queue_owner");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bool durable = 5;
          if (this_._internal_durable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_durable(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom_to_mom.topic_subscription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t topic_subscription::ByteSizeLong(const MessageLite& base) {
          const topic_subscription& this_ = static_cast<const topic_subscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t topic_subscription::ByteSizeLong() const {
          const topic_subscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom_to_mom.topic_subscription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string topic_name = 1;
            if (!this_._internal_topic_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_topic_name());
            }
            // string topic_owner = 2;
            if (!this_._internal_topic_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_topic_owner());
            }
            // string subscriber_queue_name = 3;
            if (!this_._internal_subscriber_queue_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscriber_queue_name());
            }
            // string subscriber_queue_owner = 4;
            if (!this_._internal_subscriber_queue_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscriber_queue_owner());
            }
            // bool durable = 5;
            if (this_._internal_durable() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void topic_subscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<topic_subscription*>(&to_msg);
  auto& from = static_cast<const topic_subscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom_to_mom.topic_subscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_topic_name().empty()) {
    _this->_internal_set_topic_name(from._internal_topic_name());
  }
  if (!from._internal_topic_owner().empty()) {
    _this->_internal_set_topic_owner(from._internal_topic_owner());
  }
  if (!from._internal_subscriber_queue_name().empty()) {
    _this->_internal_set_subscriber_queue_name(from._internal_subscriber_queue_name());
  }
  if (!from._internal_subscriber_queue_owner().empty()) {
    _this->_internal_set_subscriber_queue_owner(from._internal_subscriber_queue_owner());
  }
  if (from._internal_durable() != 0) {
    _this->_impl_.durable_ = from._impl_.durable_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void topic_subscription::CopyFrom(const topic_subscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom_to_mom.topic_subscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void topic_subscription::InternalSwap(topic_subscription* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_name_, &other->_impl_.topic_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_owner_, &other->_impl_.topic_owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_queue_name_, &other->_impl_.subscriber_queue_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_queue_owner_, &other->_impl_.subscriber_queue_owner_, arena);
        swap(_impl_.durable_, other->_impl_.durable_);
}

::google::protobuf::Metadata topic_subscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class structure_message::_Internal {
 public:
};

structure_message::structure_message(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom_to_mom.structure_message)
}
inline PROTOBUF_NDEBUG_INLINE structure_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom_to_mom::structure_message& from_msg)
      : structure_name_(arena, from.structure_name_),
        content_(arena, from.content_),
        sender_(arena, from.sender_),
        _cached_size_{0} {}

structure_message::structure_message(
    ::google::protobuf::Arena* arena,
    const structure_message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  structure_message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, persistent_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::persistent_));

  // @@protoc_insertion_point(copy_constructor:mom_to_mom.structure_message)
}
inline PROTOBUF_NDEBUG_INLINE structure_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : structure_name_(arena),
        content_(arena),
        sender_(arena),
        _cached_size_{0} {}

inline void structure_message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, persistent_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::persistent_));
}
structure_message::~structure_message() {
  // @@protoc_insertion_point(destructor:mom_to_mom.structure_message)
  SharedDtor(*this);
}
inline void structure_message::SharedDtor(MessageLite& self) {
  structure_message& this_ = static_cast<structure_message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.structure_name_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.~Impl_();
}

inline void* structure_message::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) structure_message(arena);
}
constexpr auto structure_message::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(structure_message),
                                            alignof(structure_message));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull structure_message::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_structure_message_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &structure_message::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<structure_message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &structure_message::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<structure_message>(), &structure_message::ByteSizeLong,
            &structure_message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(structure_message, _impl_._cached_size_),
        false,
    },
    &structure_message::kDescriptorMethods,
    &descriptor_table_mom_5fto_5fmom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* structure_message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 64, 2> structure_message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom_to_mom::structure_message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string structure_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(structure_message, _impl_.structure_name_)}},
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(structure_message, _impl_.content_)}},
    // string sender = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(structure_message, _impl_.sender_)}},
    // int64 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(structure_message, _impl_.timestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(structure_message, _impl_.timestamp_)}},
    // bool persistent = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(structure_message, _impl_.persistent_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(structure_message, _impl_.persistent_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string structure_name = 1;
    {PROTOBUF_FIELD_OFFSET(structure_message, _impl_.structure_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(structure_message, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender = 3;
    {PROTOBUF_FIELD_OFFSET(structure_message, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(structure_message, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool persistent = 5;
    {PROTOBUF_FIELD_OFFSET(structure_message, _impl_.persistent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\34\16\7\6\0\0\0\0"
    "mom_to_mom.structure_message"
    "structure_name"
    "content"
    "sender"
  }},
};

PROTOBUF_NOINLINE void structure_message::Clear() {
// @@protoc_insertion_point(message_clear_start:mom_to_mom.structure_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.structure_name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.persistent_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.persistent_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* structure_message::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const structure_message& this_ = static_cast<const structure_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* structure_message::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const structure_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom_to_mom.structure_message)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string structure_name = 1;
          if (!this_._internal_structure_name().empty()) {
            const std::string& _s = this_._internal_structure_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.structure_message.structure_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string content = 2;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.structure_message.content");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string sender = 3;
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.structure_message.sender");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int64 timestamp = 4;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_timestamp(), target);
          }

          // bool persistent = 5;
          if (this_._internal_persistent() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_persistent(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom_to_mom.structure_message)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t structure_message::ByteSizeLong(const MessageLite& base) {
          const structure_message& this_ = static_cast<const structure_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t structure_message::ByteSizeLong() const {
          const structure_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom_to_mom.structure_message)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string structure_name = 1;
            if (!this_._internal_structure_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_structure_name());
            }
            // string content = 2;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // string sender = 3;
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
            // int64 timestamp = 4;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
            // bool persistent = 5;
            if (this_._internal_persistent() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void structure_message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<structure_message*>(&to_msg);
  auto& from = static_cast<const structure_message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom_to_mom.structure_message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_structure_name().empty()) {
    _this->_internal_set_structure_name(from._internal_structure_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_persistent() != 0) {
    _this->_impl_.persistent_ = from._impl_.persistent_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void structure_message::CopyFrom(const structure_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom_to_mom.structure_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void structure_message::InternalSwap(structure_message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.structure_name_, &other->_impl_.structure_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(structure_message, _impl_.persistent_)
      + sizeof(structure_message::_impl_.persistent_)
      - PROTOBUF_FIELD_OFFSET(structure_message, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata structure_message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class queue_identifier::_Internal {
 public:
};

queue_identifier::queue_identifier(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mom_to_mom.queue_identifier)
}
inline PROTOBUF_NDEBUG_INLINE queue_identifier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mom_to_mom::queue_identifier& from_msg)
      : name_(arena, from.name_),
        owner_(arena, from.owner_),
        _cached_size_{0} {}

queue_identifier::queue_identifier(
    ::google::protobuf::Arena* arena,
    const queue_identifier& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  queue_identifier* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mom_to_mom.queue_identifier)
}
inline PROTOBUF_NDEBUG_INLINE queue_identifier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        owner_(arena),
        _cached_size_{0} {}

inline void queue_identifier::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
queue_identifier::~queue_identifier() {
  // @@protoc_insertion_point(destructor:mom_to_mom.queue_identifier)
  SharedDtor(*this);
}
inline void queue_identifier::SharedDtor(MessageLite& self) {
  queue_identifier& this_ = static_cast<queue_identifier&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* queue_identifier::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) queue_identifier(arena);
}
constexpr auto queue_identifier::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(queue_identifier),
                                            alignof(queue_identifier));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull queue_identifier::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_queue_identifier_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &queue_identifier::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<queue_identifier>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &queue_identifier::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<queue_identifier>(), &queue_identifier::ByteSizeLong,
            &queue_identifier::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(queue_identifier, _impl_._cached_size_),
        false,
    },
    &queue_identifier::kDescriptorMethods,
    &descriptor_table_mom_5fto_5fmom_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* queue_identifier::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> queue_identifier::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mom_to_mom::queue_identifier>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string owner = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(queue_identifier, _impl_.owner_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(queue_identifier, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(queue_identifier, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 2;
    {PROTOBUF_FIELD_OFFSET(queue_identifier, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\4\5\0\0\0\0\0"
    "mom_to_mom.queue_identifier"
    "name"
    "owner"
  }},
};

PROTOBUF_NOINLINE void queue_identifier::Clear() {
// @@protoc_insertion_point(message_clear_start:mom_to_mom.queue_identifier)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* queue_identifier::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const queue_identifier& this_ = static_cast<const queue_identifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* queue_identifier::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const queue_identifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mom_to_mom.queue_identifier)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.queue_identifier.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string owner = 2;
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mom_to_mom.queue_identifier.owner");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mom_to_mom.queue_identifier)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t queue_identifier::ByteSizeLong(const MessageLite& base) {
          const queue_identifier& this_ = static_cast<const queue_identifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t queue_identifier::ByteSizeLong() const {
          const queue_identifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mom_to_mom.queue_identifier)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string owner = 2;
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void queue_identifier::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<queue_identifier*>(&to_msg);
  auto& from = static_cast<const queue_identifier&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mom_to_mom.queue_identifier)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void queue_identifier::CopyFrom(const queue_identifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mom_to_mom.queue_identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void queue_identifier::InternalSwap(queue_identifier* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
}

::google::protobuf::Metadata queue_identifier::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace mom_to_mom
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_mom_5fto_5fmom_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
