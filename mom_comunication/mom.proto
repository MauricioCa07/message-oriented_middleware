syntax = "proto3";

package mom;


message node_ID {
  string node_id = 1;
}


message status {
  bool success = 1;
  string error_message = 2;
}

message topic_config {
  string name = 1;
  string owner = 2;
  int64 creation_timestamp = 3;
}

message queue_config {
  string name = 1;
  string owner = 2;
  int64 creation_timestamp = 3;
}

message Message {
  string id = 1;
  string topic_or_queue_name = 2;
  bool is_topic = 3;
  string content = 4;
  string sender = 5;
  int64 timestamp = 6;
  map<string, string> headers = 7;
}

message topic {
  repeated Message messages = 1;
  topic_config config = 2;
}


message queue {
  repeated Message messages = 1;
  queue_config config = 2;
}

message node_info {
  string node_id = 1;
  string host = 2;
  int32 port = 3;
}

message node_assignment {
  string primary_node = 1;
  repeated string replica_nodes = 2;
}

message cluster_state {
  string leader_id = 1;
  repeated node_info nodes = 2;
  map<string, node_assignment> topic_assignments = 3;
  map<string, node_assignment> queue_assignments = 4;
}

message state_response {
  bool success = 1;
  string error_message = 2;
  repeated topic topics = 3;
  repeated queue queues = 4;
  cluster_state cluster_state = 5;
}

message cluster_info {
  bool success = 1;
  string error_message = 2;
  string leader_id = 3;
  repeated node_info nodes = 4;
  map<string, node_assignment> topic_assignments = 5;
  map<string, node_assignment> queue_assignments = 6;
}


message topic_message {
  string topic_name = 1;
  string content = 2;
  string sender = 3;
  map<string, string> headers = 4;
}

message queue_message {
  string queue_name = 1;
  string content = 2;
  string sender = 3;
  map<string, string> headers = 4;
}


message message_status {
  bool success = 1;
  string error_message = 2;
}

message topic_id {
  string topic_name = 1;
}

message queue_id {
  string queue_name = 1;
}



service MOM_service {
  /* ---------------------------------------------------
      -                                                -
      -              METHODS FOR SYNC MOMS             -
      -                                                -
      --------------------------------------------------
  */
  rpc sync_topics(node_ID) returns (state_response) {}
  rpc sync_queues(node_ID) returns (state_response) {}

  /* ---------------------------------------------------
      -                                                -
      -              QUEUE'S METHODS                   -
      -                                                -
      --------------------------------------------------
  */
  rpc create_queue(queue_config) returns (status) {}
  rpc delete_queue(queue) returns (status) {}
  rpc list_queues(node_ID) returns (state_response) {}

  /* ---------------------------------------------------
      -                                                -
      -              TOPIC'S METHODS                   -
      -                                                -
      --------------------------------------------------
  */
  rpc create_topic(topic_config) returns (status) {}
  rpc delete_topic(topic) returns (status) {}
  rpc list_topics(node_ID) returns (state_response) {}
  rpc subscribe_topic(topic_id) returns (status) {}
  rpc unsubscribe_topic(topic_id) returns (status) {}

  /* ---------------------------------------------------
      -                                                -
      -                     MESSAGES                   -
      -                                                -
      --------------------------------------------------
  */
  rpc send_queue_message(queue_message) returns (message_status) {}
  rpc receive_queue_message(queue_id) returns (Message) {}
  rpc publish_topic_message(topic_message) returns (message_status) {}
  rpc receive_topic_message(topic_id) returns (Message) {}

  /* ---------------------------------------------------
      -                                                -
      -                     CLUSTER                    -
      -                                                -
      --------------------------------------------------
  */
  rpc join_cluster(node_info) returns (cluster_info) {}
  rpc leave_cluster(node_ID) returns (status) {}
  rpc heartbeat(node_ID) returns (status) {}
}
